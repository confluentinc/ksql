{
  "ksql.extension.dir" : "ext",
  "ksql.streams.cache.max.bytes.buffering" : "0",
  "ksql.transient.prefix" : "transient_",
  "ksql.named.internal.topics" : "on",
  "ksql.windowed.session.key.legacy" : "false",
  "ksql.schema.registry.url" : "http://localhost:8081",
  "ksql.streams.default.deserialization.exception.handler" : "io.confluent.ksql.errors.LogMetricAndContinueExceptionHandler",
  "ksql.output.topic.name.prefix" : "",
  "ksql.streams.auto.offset.reset" : "earliest",
  "ksql.sink.partitions" : null,
  "ksql.avro.maps.named" : "true",
  "ksql.service.id" : "some.ksql.service.id",
  "ksql.streams.state.dir" : "/var/folders/2d/3pt97ylj3zngd51bwl91bl3r0000gp/T/kafka-6167942233945618932",
  "ksql.internal.topic.replicas" : "1",
  "ksql.streams.default.production.exception.handler" : "io.confluent.ksql.errors.ProductionExceptionHandlerUtil$LogAndFailProductionExceptionHandler",
  "ksql.streams.bootstrap.servers" : "localhost:0",
  "ksql.streams.commit.interval.ms" : "2000",
  "ksql.streams.auto.commit.interval.ms" : "0",
  "ksql.sink.replicas" : null,
  "ksql.streams.topology.optimization" : "all",
  "ksql.streams.num.stream.threads" : "4",
  "ksql.udfs.enabled" : "true",
  "ksql.udf.enable.security.manager" : "true",
  "ksql.functions.substring.legacy.args" : "false",
  "ksql.streams.application.id" : "some.ksql.service.id",
  "ksql.sink.window.change.log.additional.retention" : "1000000",
  "ksql.udf.collect.metrics" : "false",
  "ksql.persistent.prefix" : "query_",
  "ksql.query.persistent.active.limit" : "2147483647"
}
CONFIGS_END
CSAS_S2_0.KsqlTopic.source = struct<NESTED_STRUCT_FIELD optional<struct<SL1_STRUCT optional<struct<SL2_STRUCT optional<struct<SL3_STRUCT optional<struct<SL4_STRING optional<string>,SL4_INT optional<int32>,SL4_DOUBLE_ARRAY optional<array<optional<float64>>>>>,SL3_DOUBLE_ARRAY optional<array<optional<float64>>>,SL3_STRING optional<string>>>,SL2_STRUCT_MAP optional<map<optional<string>, optional<struct<SL2_3_STRING optional<string>,SL2_3_DOUBLE optional<float64>>>>>,SL2_DOUBLE optional<float64>,SL2_BOOLEAN optional<boolean>>>,SL1_STRING optional<string>,SL1_STRUCT_ARRAY optional<array<optional<struct<SL1_2_STRING optional<string>,SL1_2_DOUBLE optional<float64>>>>>>>,COL1 optional<int64>,COL2 optional<string>>
CSAS_S2_0.S2 = struct<NESTED_STRUCT_FIELD__SL1_STRUCT__SL2_STRUCT__SL3_STRUCT__SL4_DOUBLE_ARRAY optional<array<optional<float64>>>,NESTED_STRUCT_FIELD__SL1_STRUCT__SL2_STRUCT_MAP optional<map<optional<string>, optional<struct<SL2_3_STRING optional<string>,SL2_3_DOUBLE optional<float64>>>>>>
SCHEMAS_END
Topologies:
   Sub-topology: 0
    Source: KSTREAM-SOURCE-0000000000 (topics: [test_topic])
      --> KSTREAM-MAPVALUES-0000000001
    Processor: KSTREAM-MAPVALUES-0000000001 (stores: [])
      --> KSTREAM-TRANSFORMVALUES-0000000002
      <-- KSTREAM-SOURCE-0000000000
    Processor: KSTREAM-TRANSFORMVALUES-0000000002 (stores: [])
      --> KSTREAM-MAPVALUES-0000000003
      <-- KSTREAM-MAPVALUES-0000000001
    Processor: KSTREAM-MAPVALUES-0000000003 (stores: [])
      --> KSTREAM-MAPVALUES-0000000004
      <-- KSTREAM-TRANSFORMVALUES-0000000002
    Processor: KSTREAM-MAPVALUES-0000000004 (stores: [])
      --> KSTREAM-SINK-0000000005
      <-- KSTREAM-MAPVALUES-0000000003
    Sink: KSTREAM-SINK-0000000005 (topic: S2)
      <-- KSTREAM-MAPVALUES-0000000004

