{
  "comments": [
    "Tests covering use of the GROUP BY clause"
  ],
  "tests": [
    {
      "name": "group by field",
      "statements": [
        "CREATE STREAM TEST (data VARCHAR) WITH (kafka_topic='test_topic', KEY='data', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT data, COUNT(*) AS COUNT FROM TEST GROUP BY DATA;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "d1", "value": "d1", "timestamp": 0},
        {"topic": "test_topic", "key": "d2", "value": "d2", "timestamp": 0},
        {"topic": "test_topic", "key": "d1", "value": "d1", "timestamp": 0},
        {"topic": "test_topic", "key": "d2", "value": "d2", "timestamp": 0},
        {"topic": "test_topic", "key": "d1", "value": "d1", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "d1", "value": "d1,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "d2", "value": "d2,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "d1", "value": "d1,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "d2", "value": "d2,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "d1", "value": "d1,3", "timestamp": 0}
      ]
    },
    {
      "name": "group by fields",
      "statements": [
        "CREATE STREAM TEST (f1 INT, f2 VARCHAR) WITH (kafka_topic='test_topic', KEY='f1', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT f1, f2, COUNT(*) AS COUNT FROM TEST GROUP BY f2, f1;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": "1,a", "timestamp": 0},
        {"topic": "test_topic", "key": 2, "value": "2,b", "timestamp": 0},
        {"topic": "test_topic", "key": 1, "value": "1,a", "timestamp": 0},
        {"topic": "test_topic", "key": 2, "value": "2,b", "timestamp": 0},
        {"topic": "test_topic", "key": 3, "value": "3,a", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "a|+|1", "value": "1,a,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "b|+|2", "value": "2,b,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "a|+|1", "value": "1,a,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "b|+|2", "value": "2,b,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "a|+|3", "value": "3,a,1", "timestamp": 0}
      ]
    },
    {
      "name": "group by field with re-key",
      "statements": [
        "CREATE STREAM TEST (data VARCHAR) WITH (kafka_topic='test_topic', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT data, COUNT(*) AS COUNT FROM TEST GROUP BY DATA;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": "d1", "timestamp": 0},
        {"topic": "test_topic", "key": 2, "value": "d2", "timestamp": 0},
        {"topic": "test_topic", "key": 3, "value": "d1", "timestamp": 0},
        {"topic": "test_topic", "key": 4, "value": "d2", "timestamp": 0},
        {"topic": "test_topic", "key": 5, "value": "d1", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "d1", "value": "d1,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "d2", "value": "d2,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "d1", "value": "d1,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "d2", "value": "d2,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "d1", "value": "d1,3", "timestamp": 0}
      ]
    },
    {
      "name": "group by with aggregate arithmetic",
      "statements": [
        "CREATE STREAM TEST (data VARCHAR) WITH (kafka_topic='test_topic', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT data, COUNT(*)*2 AS COUNT FROM TEST GROUP BY DATA;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": "d1", "timestamp": 0},
        {"topic": "test_topic", "key": 2, "value": "d2", "timestamp": 0},
        {"topic": "test_topic", "key": 3, "value": "d1", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "d1", "value": "d1,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "d2", "value": "d2,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "d1", "value": "d1,4", "timestamp": 0}
      ]
    },
    {
      "name": "group by function",
      "statements": [
        "CREATE STREAM TEST (source VARCHAR) WITH (kafka_topic='test_topic', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT SUBSTRING(source, 0, 2) AS Thing, COUNT(*) AS COUNT FROM TEST GROUP BY SUBSTRING(source, 0, 2);"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": "some string", "timestamp": 0},
        {"topic": "test_topic", "key": 2, "value": "another string", "timestamp": 0},
        {"topic": "test_topic", "key": 2, "value": "some string again", "timestamp": 0},
        {"topic": "test_topic", "key": 3, "value": "another string again", "timestamp": 0},
        {"topic": "test_topic", "key": 4, "value": "some other string", "timestamp": 0},
        {"topic": "test_topic", "key": 4, "value": "the final string", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "so", "value": "so,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "an", "value": "an,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "so", "value": "so,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "an", "value": "an,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "so", "value": "so,3", "timestamp": 0},
        {"topic": "OUTPUT", "key": "th", "value": "th,1", "timestamp": 0}
      ]
    },
    {
      "name": "group by function with select field that is a subset of group by",
      "statements": [
        "CREATE STREAM TEST (source VARCHAR) WITH (kafka_topic='test_topic', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT SUBSTRING(source, 0, 1) AS Thing, COUNT(*) AS COUNT FROM TEST GROUP BY SUBSTRING(source, 0, 2);"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "-", "value": "some string", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "another string", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "some string again", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "another string again", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "some other string", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "the final string", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "so", "value": "s,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "an", "value": "a,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "so", "value": "s,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "an", "value": "a,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "so", "value": "s,3", "timestamp": 0},
        {"topic": "OUTPUT", "key": "th", "value": "t,1", "timestamp": 0}
      ]
    },
    {
      "name": "group by function with select field that is a superset of group by",
      "statements": [
        "CREATE STREAM TEST (source VARCHAR) WITH (kafka_topic='test_topic', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT SUBSTRING(source, 0, 3) AS Thing, COUNT(*) AS COUNT FROM TEST GROUP BY SUBSTRING(source, 0, 2);"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": "some string", "timestamp": 0},
        {"topic": "test_topic", "key": 2, "value": "another string", "timestamp": 0},
        {"topic": "test_topic", "key": 3, "value": "soup is different", "timestamp": 0},
        {"topic": "test_topic", "key": 4, "value": "another string again", "timestamp": 0},
        {"topic": "test_topic", "key": 5, "value": "some other string", "timestamp": 0},
        {"topic": "test_topic", "key": 4, "value": "the final string", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "so", "value": "som,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "an", "value": "ano,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "so", "value": "sou,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "an", "value": "ano,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "so", "value": "som,3", "timestamp": 0},
        {"topic": "OUTPUT", "key": "th", "value": "the,1", "timestamp": 0}
      ]
    },
    {
      "name": "group by json field",
      "statements": [
        "CREATE STREAM TEST (data STRUCT<field VARCHAR>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT data->field AS FIELD, COUNT(*) AS COUNT FROM TEST GROUP BY data->field;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"data": {"field": "Something"}}, "timestamp": 0},
        {"topic": "test_topic", "key": 1, "value": {"data": {"field": "Something Else"}}, "timestamp": 0},
        {"topic": "test_topic", "key": 1, "value": {"data": {}}, "timestamp": 0},
        {"topic": "test_topic", "key": 1, "value": {"data": {"field": "Something"}}, "timestamp": 0},
        {"topic": "test_topic", "key": 1, "value": {"data": {}}, "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "Something", "value": {"FIELD": "Something", "COUNT": 1}, "timestamp": 0},
        {"topic": "OUTPUT", "key": "Something Else", "value": {"FIELD": "Something Else", "COUNT": 1}, "timestamp": 0},
        {"topic": "OUTPUT", "key": "null", "value": {"FIELD": null, "COUNT": 1}, "timestamp": 0},
        {"topic": "OUTPUT", "key": "Something", "value": {"FIELD": "Something", "COUNT": 2}, "timestamp": 0},
        {"topic": "OUTPUT", "key": "null", "value": {"FIELD": null, "COUNT": 2}, "timestamp": 0}
      ]
    },
    {
      "name": "group by ROWKEY",
      "statements": [
        "CREATE STREAM TEST (ignored VARCHAR) WITH (kafka_topic='test_topic', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT ROWKEY, COUNT(*) AS COUNT FROM TEST GROUP BY ROWKEY;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": "-", "timestamp": 0},
        {"topic": "test_topic", "key": 2, "value": "-", "timestamp": 0},
        {"topic": "test_topic", "key": 1, "value": "-", "timestamp": 0},
        {"topic": "test_topic", "key": 2, "value": "-", "timestamp": 0},
        {"topic": "test_topic", "key": 1, "value": "-", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": "1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "2", "value": "1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "1", "value": "2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "2", "value": "2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "1", "value": "3", "timestamp": 0}
      ]
    },
    {
      "name": "group by constant",
      "statements": [
        "CREATE STREAM TEST (ignored VARCHAR) WITH (kafka_topic='test_topic', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT COUNT(*) AS COUNT FROM TEST GROUP BY 1;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": "-", "timestamp": 0},
        {"topic": "test_topic", "key": 2, "value": "-", "timestamp": 0},
        {"topic": "test_topic", "key": 1, "value": "-", "timestamp": 0},
        {"topic": "test_topic", "key": 2, "value": "-", "timestamp": 0},
        {"topic": "test_topic", "key": 1, "value": "-", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": "1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "1", "value": "2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "1", "value": "3", "timestamp": 0},
        {"topic": "OUTPUT", "key": "1", "value": "4", "timestamp": 0},
        {"topic": "OUTPUT", "key": "1", "value": "5", "timestamp": 0}
      ]
    },
    {
      "name": "with multiple group by clauses",
      "statements": [
        "CREATE STREAM TEST (f1 INT, f2 INT) WITH (kafka_topic='test_topic', KEY='f1', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT f1, f2, COUNT(*) AS COUNT FROM TEST GROUP BY f1, f2;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 0, "value": "1,2", "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": "2,2", "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": "1,2", "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": "2,1", "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": "2,1", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1|+|2", "value": "1,2,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "2|+|2", "value": "2,2,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "1|+|2", "value": "1,2,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "2|+|1", "value": "2,1,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "2|+|1", "value": "2,1,2", "timestamp": 0}
      ]
    },
    {
      "name": "with complex select expression",
      "statements": [
        "CREATE STREAM TEST (f1 VARCHAR) WITH (kafka_topic='test_topic', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT SUBSTRING(f1, 0, 1), COUNT(*) FROM TEST GROUP BY f1;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 0, "value": "one", "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": "two", "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": "three", "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": "one", "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": "five", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "one", "value": "o,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "two", "value": "t,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "three", "value": "t,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "one", "value": "o,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "five", "value": "f,1", "timestamp": 0}
      ]
    },
    {
      "name": "group by concat using + op",
      "statements": [
        "CREATE STREAM TEST (f1 VARCHAR, f2 VARCHAR) WITH (kafka_topic='test_topic', KEY='f1', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT f1 + f2, COUNT(*) AS COUNT FROM TEST GROUP BY f2 + f1;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "-", "value": "1,a", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "2,b", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "1,a", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "2,b", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "3,a", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "a1", "value": "1a,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "b2", "value": "2b,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "a1", "value": "1a,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "b2", "value": "2b,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "a3", "value": "3a,1", "timestamp": 0}
      ]
    },
    {
      "name": "with select that has group by + parameters as fields",
      "statements": [
        "CREATE STREAM TEST (f1 VARCHAR, f2 VARCHAR) WITH (kafka_topic='test_topic', KEY='f1', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT f1, f2, COUNT(*) AS COUNT FROM TEST GROUP BY f2 + f1;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "-", "value": "1,a", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "2,b", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "1,a", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "2,b", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "3,a", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "a1", "value": "1,a,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "b2", "value": "2,b,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "a1", "value": "1,a,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "b2", "value": "2,b,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "a3", "value": "3,a,1", "timestamp": 0}
      ]
    },
    {
      "name": "group by with arithmetic",
      "statements": [
        "CREATE STREAM TEST (f1 INT) WITH (kafka_topic='test_topic', KEY='f1', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT f1, COUNT(*) AS COUNT FROM TEST GROUP BY f1 + 1;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": "1", "timestamp": 0},
        {"topic": "test_topic", "key": 2, "value": "2", "timestamp": 0},
        {"topic": "test_topic", "key": 1, "value": "1", "timestamp": 0},
        {"topic": "test_topic", "key": 2, "value": "2", "timestamp": 0},
        {"topic": "test_topic", "key": 3, "value": "3", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "2", "value": "1,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "3", "value": "2,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "2", "value": "1,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "3", "value": "2,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "4", "value": "3,1", "timestamp": 0}
      ]
    },
    {
      "name": "with having",
      "statements": [
        "CREATE STREAM TEST (f1 INT) WITH (kafka_topic='test_topic', KEY='f1', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT f1, COUNT(*) FROM TEST GROUP BY f1 HAVING SUM(f1) > 1;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "1", "value": "1", "timestamp": 0},
        {"topic": "test_topic", "key": "2", "value": "2", "timestamp": 0},
        {"topic": "test_topic", "key": "1", "value": "1", "timestamp": 0},
        {"topic": "test_topic", "key": "2", "value": "2", "timestamp": 0},
        {"topic": "test_topic", "key": "3", "value": "3", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": null, "timestamp": 0},
        {"topic": "OUTPUT", "key": "2", "value": "2,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "1", "value": "1,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "2", "value": "2,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "3", "value": "3,1", "timestamp": 0}
      ]
    },
    {
      "name": "with multiple having clause",
      "statements": [
        "CREATE STREAM TEST (f1 INT, f2 VARCHAR) WITH (kafka_topic='test_topic', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT f1, COUNT(f1) FROM TEST GROUP BY f1 HAVING COUNT(f1) > 1 AND f1=1;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 0, "value": "1,a", "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": "2,b", "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": "1,test", "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": "2,test", "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": "2,test", "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": "1,test", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": null, "timestamp": 0},
        {"topic": "OUTPUT", "key": "2", "value": null, "timestamp": 0},
        {"topic": "OUTPUT", "key": "1", "value": "1,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "2", "value": null, "timestamp": 0},
        {"topic": "OUTPUT", "key": "2", "value": null, "timestamp": 0},
        {"topic": "OUTPUT", "key": "1", "value": "1,3", "timestamp": 0}
      ]
    },
    {
      "name": "with aggregate having not in group by",
      "statements": [
        "CREATE STREAM TEST (f1 INT, f2 VARCHAR) WITH (kafka_topic='test_topic', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT f2, COUNT(*) FROM TEST GROUP BY f2 HAVING SUM(f1) > 10;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "-", "value": "5,a", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "10,b", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "6,a", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "1,b", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "-1,a", "timestamp": 0},
        {"topic": "test_topic", "key": "-", "value": "1,a", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "a", "value": null, "timestamp": 0},
        {"topic": "OUTPUT", "key": "b", "value": null, "timestamp": 0},
        {"topic": "OUTPUT", "key": "a", "value": "a,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "b", "value": "b,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "a", "value": null, "timestamp": 0},
        {"topic": "OUTPUT", "key": "a", "value": "a,4", "timestamp": 0}
      ]
    },
    {
      "name": "with constant having",
      "statements": [
        "CREATE STREAM TEST (f1 INT, f2 VARCHAR) WITH (kafka_topic='test_topic', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT f2, SUM(f1) FROM TEST GROUP BY f2 HAVING f2='test';"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 0, "value": "1,a", "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": "2,b", "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": "2,test", "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": "2,b", "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": "3,test", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "a", "value": null, "timestamp": 0},
        {"topic": "OUTPUT", "key": "b", "value": null, "timestamp": 0},
        {"topic": "OUTPUT", "key": "test", "value": "test,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "b", "value": null, "timestamp": 0},
        {"topic": "OUTPUT", "key": "test", "value": "test,5", "timestamp": 0}
      ]
    },
    {
      "name": "with constant having not in group by",
      "statements": [
        "CREATE STREAM TEST (f1 INT, f2 VARCHAR) WITH (kafka_topic='test_topic', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT COUNT(*) FROM TEST GROUP BY f1 HAVING f2='test';"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlException",
        "message": "Non-aggregate HAVING expression not part of GROUP BY: [TEST.F2]"
      },
      "inputs": [],
      "outputs": []
    },
    {
      "name": "with constants in the projection",
      "statements": [
        "CREATE STREAM TEST (f1 INT) WITH (kafka_topic='test_topic', KEY='f1', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT f1, 'some constant' as f3, COUNT(f1) FROM TEST GROUP BY f1;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": "1", "timestamp": 0},
        {"topic": "test_topic", "key": 2, "value": "2", "timestamp": 0},
        {"topic": "test_topic", "key": 1, "value": "1", "timestamp": 0},
        {"topic": "test_topic", "key": 2, "value": "2", "timestamp": 0},
        {"topic": "test_topic", "key": 3, "value": "3", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": "1,some constant,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "2", "value": "2,some constant,1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "1", "value": "1,some constant,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "2", "value": "2,some constant,2", "timestamp": 0},
        {"topic": "OUTPUT", "key": "3", "value": "3,some constant,1", "timestamp": 0}
      ]
    },
    {
      "name": "group by missing matching select element",
      "statements": [
        "CREATE STREAM TEST (data VARCHAR) WITH (kafka_topic='test_topic', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT COUNT(*) AS COUNT FROM TEST GROUP BY data;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": "d1", "timestamp": 0},
        {"topic": "test_topic", "key": 2, "value": "d2", "timestamp": 0},
        {"topic": "test_topic", "key": 3, "value": "d1", "timestamp": 0}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "d1", "value": "1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "d2", "value": "1", "timestamp": 0},
        {"topic": "OUTPUT", "key": "d1", "value": "2", "timestamp": 0}
      ]
    },
    {
      "name": "with non aggregate field in select that is not in group by",
      "statements": [
        "CREATE STREAM TEST (d1 VARCHAR, d2 VARCHAR) WITH (kafka_topic='test_topic', value_format='DELIMITED');",
        "CREATE TABLE OUTPUT AS SELECT d1, COUNT(*) AS COUNT FROM TEST GROUP BY d2;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlException",
        "message": "Non-aggregate SELECT expression not part of GROUP BY: [TEST.D1]"
      },
      "inputs": [],
      "outputs": []
    }
  ]
}