{
  "comments": [
    "You can specify multiple statements per test case, i.e., to set up the various streams needed",
    "for joins etc, but currently only the final topology will be verified. This should be enough",
    "for most tests as we can simulate the outputs from previous stages into the final stage. If we",
    "take a modular approach to testing we can still verify that it all works correctly, i.e, if we",
    "verify the output of a select or aggregate is correct, we can use simulated output to feed into",
    "a join or another aggregate."
  ],
  "tests": [
    {
      "name": "histogram string",
      "format": ["AVRO", "JSON"],
      "statements": [
        "CREATE STREAM TEST (ID bigint, VALUE varchar) WITH (kafka_topic='test_topic', value_format='{FORMAT}', key='ID');",
        "CREATE TABLE S2 as SELECT id, histogram(value) as counts FROM test group by id;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 0, "value": {"ID": 0, "VALUE": "foo"}, "timestamp": 0},
        {"topic": "test_topic", "key": 100, "value": {"ID": 100, "VALUE": "baz"}, "timestamp": 0},
        {"topic": "test_topic", "key": 0, "value": {"ID": 0, "VALUE": "bar"}, "timestamp": 0},
        {"topic": "test_topic", "key": 100, "value": {"ID": 100, "VALUE": "baz"}, "timestamp": 0},
        {"topic": "test_topic", "key": 100, "value": {"ID": 100, "VALUE": "foo"}, "timestamp": 0}
      ],
      "outputs": [
        {"topic": "S2", "key": 0, "value": {"ID": 0, "COUNTS": {"foo": 1}}, "timestamp": 0},
        {"topic": "S2", "key": 100, "value": {"ID": 100, "COUNTS": {"baz": 1}}, "timestamp": 0},
        {"topic": "S2", "key": 0, "value": {"ID": 0, "COUNTS": {"foo": 1,"bar": 1}}, "timestamp": 0},
        {"topic": "S2", "key": 100, "value": {"ID": 100, "COUNTS": {"baz": 2}}, "timestamp": 0},
        {"topic": "S2", "key": 100, "value": {"ID": 100, "COUNTS": {"baz": 2,"foo": 1}}, "timestamp": 0}
      ]
    },
    {
      "name": "histogram on a table",
      "format": ["AVRO","JSON"],
      "statements": [
        "CREATE TABLE TEST (ID bigint, NAME varchar, REGION string) WITH (kafka_topic='test_topic', value_format='{FORMAT}', key='ID');",
        "CREATE TABLE COUNT_BY_REGION AS SELECT region, histogram(name) AS COUNTS FROM TEST GROUP BY region;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 0, "value": {"ID": 0, "NAME": "alice", "REGION": "east"}, "timestamp": 0},
        {"topic": "test_topic", "key": 1, "value": {"ID": 1, "NAME": "bob", "REGION": "east"}, "timestamp": 0},
        {"topic": "test_topic", "key": 2, "value": {"ID": 2, "NAME": "carol", "REGION": "west"}, "timestamp": 0},
        {"topic": "test_topic", "key": 3, "value": {"ID": 3, "NAME": "dave", "REGION": "west"}, "timestamp": 0},
        {"topic": "test_topic", "key": 1, "value": {"ID": 1, "NAME": "bob", "REGION": "west"}, "timestamp": 0},
        {"topic": "test_topic", "key": 1, "value": null, "timestamp": 0}
      ],
      "outputs": [
        {"topic": "COUNT_BY_REGION", "key": "east", "value": {"REGION": "east", "COUNTS": {"alice": 1}}, "timestamp": 0},
        {"topic": "COUNT_BY_REGION", "key": "east", "value": {"REGION": "east", "COUNTS": {"alice": 1, "bob": 1}}, "timestamp": 0},
        {"topic": "COUNT_BY_REGION", "key": "west", "value": {"REGION": "west", "COUNTS": {"carol": 1}}, "timestamp": 0},
        {"topic": "COUNT_BY_REGION", "key": "west", "value": {"REGION": "west", "COUNTS": {"carol": 1, "dave": 1}}, "timestamp": 0},
        {"topic": "COUNT_BY_REGION", "key": "east", "value": {"REGION": "east", "COUNTS": {"alice": 1}}, "timestamp": 0},
        {"topic": "COUNT_BY_REGION", "key": "west", "value": {"REGION": "west", "COUNTS": {"carol": 1, "dave": 1, "bob": 1}}, "timestamp": 0}
      ]
    }
  ]
}
