{
  "comments": [
    "Tests covering handling of key-fields.",
    "The 'key-field' is an optional field within the value that matches the key",
    "",
    "There are several main dimensions to this test suite:",
    " - source type:",
    "   - stream",
    "   - table",
    " - source key:",
    "   - initially null",
    "   - initially set",
    " - explicit changing of key:",
    "   - no key change",
    "   - partition by (same key)",
    "   - partition by (different key)",
    "   - group by (same key)",
    "   - group by (different key)",
    " - key present in target value schema:",
    "   - key in value",
    "   - key not in value",
    " - aliasing of the key field in the value schema",
    "   - no aliasing",
    "   - aliased key field",
    "",
    "Not all combinations are valid, e.g. can not have an alias if there is no key.",
    "",
    "issues:",
    "",
    " 1: key field in metastore for OUTPUT contains internal column names e.g. 'KSQL_INTERNAL_COL0' or 'CAST(KSQL_INTERNAL_COL_0 AS INTEGER)'",
    "    - fix implications: fixing would mean downstream queries might avoid an unnecessary repartition step",
    "      (fix is NOT backwards compatible by default)",
    "",
    " 2: key field in metastore for OUTPUT either matches INPUT or contains internal column names, but should be null",
    "    - fix implications: fixing would not effect downstream queries as the key field is not available in the value schema either before or after the fix",
    "      (fix IS backwards compatible by default)",
    "",
    " 3: key field in metastore has wrong type (STRING)",
    "    - fix implications: ",
    "      Currently, OUTPUT can be joined to sources that have a matching (incorrect) key type, which should not be possible.",
    "      (fix is NOT backwards compatible by default, though could argue maintaining backwards compatibility here is wrong)",
    "      Currently, OUTPUT would fail to join to anything with matching (correct) key type, which should be possible.",
    "      (fix IS backwards compatible)",
    "",
    " 4: key field in metastore has not picked up the aliasing of the key field in the project, i.e. key field matches source, but should be alias",
    "    - fix implications:",
    "      If the projection has no fields that match the source key field then the implications are the same as issue #1",
    "      If the projection has a field that duplicates the name of the source key field then additionally:",
    "      Downstrean queries that PARTITION BY or GROUP BY the duplicate field name would not work correctly as no repartition would happen",
    "      (fix is backwards compatible as it fixes broken functionality)",
    "      Downstream queries that PARTITION BY or GROUP BY the new alias would stop introducing unnecessary repartition step",
    "      (fix is NOT backwards compatible by default)",
    "",
    " Additionally, there is currently an inconsistency between how GROUP BY's and PARTITION BY's handling of aliases:",
    "  - PARTITION BY requires the target name, (i.e. the alias), failing if the source field name is used.",
    "  - GROUP BY requires the source field name, failing if the target field name, (i.e. the alias), is used.",
    "",
    "Each test case follows the pattern of defining:",
    " INPUT - the initial source",
    " OUTPUT - a source built from INPUT using the dimensions in the title of the test",
    " DOWNSTREAM - an optional source built from OUTPUT. This is necessary as the key fields this test file covers affect downstream queries too.",
    "",
    "Some tests may need intermediate sources to get to the required state.",
    "",
    "The main point of the tests to to:",
    "  a: test the post conditions in the metastore, i.e. that sources of the correct type and params are registered",
    "  b: test the topology of the output or downstream queries"
  ],
  "tests": [
    {
      "name": "stream | initially null | no key change | - | -",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO":1, "BAR": 2}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "keyField": null}
        ]
      }
    },
    {
      "name": "stream | initially null | partition by (-) | key in value | no aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT PARTITION BY foo;"
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"FOO":1, "BAR": 2}}
      ],
      "post": {
        "sources": [
          {"name": "INPUT", "type": "stream", "keyField": null},
          {"name": "OUTPUT", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "stream | initially null | partition by (-) | key in value | aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT foo AS ALIASED, bar FROM INPUT PARTITION BY ALIASED;"
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"ALIASED":1, "BAR": 2}}
      ],
      "post": {
        "sources": [
          {"name": "INPUT", "type": "stream", "keyField": null},
          {"name": "OUTPUT", "type": "stream", "keyField": {"name": "ALIASED", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "stream | initially null | partition by (-) | key not in value | -",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT bar FROM INPUT PARTITION BY foo;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Column FOO does not exist in the result schema. Error in Partition By clause."
      }
    },
    {
      "name": "stream | initially null | group by (-) | key in value | no aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT foo, COUNT(*) FROM INPUT GROUP BY foo;"
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"FOO":1, "KSQL_COL_1": 1}}
      ],
      "post": {
        "issues": [
          "key field of output has INCORRECT name: should be 'FOO' - (see Issue #1 above)",
          "key field of output has INCORRECT type: should be 'INT' - (see Issue #3 above)"
        ],
        "sources": [
          {"name": "INPUT", "type": "stream", "keyField": null},
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "stream | initially null | group by (-) | key in value | no aliasing | legacy downstream query",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT foo, COUNT(*) FROM INPUT GROUP BY foo;",
        "CREATE TABLE DOWNSTREAM AS SELECT foo, COUNT(*) FROM OUTPUT GROUP BY foo;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"FOO":1, "KSQL_COL_1": 1}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key": "1", "value": {"FOO":1, "KSQL_COL_1": 1}}
      ],
      "post": {
        "sources": [
          {"name": "DOWNSTREAM", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "stream | initially null | group by (-) | key in value | aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT foo AS Aliased, COUNT(*) FROM INPUT GROUP BY foo;"
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"ALIASED":1, "KSQL_COL_1": 1}}
      ],
      "post": {
        "issues": [
          "key field of output has INCORRECT name: should be 'ALIASED' - (see Issue #1 above)",
          "key field of output has INCORRECT type: should be 'INT' - (see Issue #3 above)"
        ],
        "sources": [
          {"name": "INPUT", "type": "stream", "keyField": null},
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "stream | initially null | group by (-) | key in value | aliasing | legacy downstream query",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT foo AS Aliased, COUNT(*) FROM INPUT GROUP BY foo;",
        "CREATE TABLE DOWNSTREAM AS SELECT Aliased, COUNT(*) FROM OUTPUT GROUP BY Aliased;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"ALIASED":1, "KSQL_COL_1": 1}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key": "1", "value": {"ALIASED":1, "KSQL_COL_1": 1}}
      ],
      "post": {
        "sources": [
           {"name": "DOWNSTREAM", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "stream | initially null | group by (-) | key not in value | -",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT COUNT(*) FROM INPUT GROUP BY foo;"
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"KSQL_COL_0": 1}}
      ],
      "post": {
        "issues": [
          "key field of output INCORRECT: should be null - (see Issue #2 above)"
        ],
        "sources": [
          {"name": "INPUT", "type": "stream", "keyField": null},
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_1", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "stream | initially null | group by (-) | key not in value | - | legacy downstream query",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT COUNT(*) FROM INPUT GROUP BY foo;",
        "CREATE TABLE DOWNSTREAM AS SELECT COUNT(*) FROM OUTPUT GROUP BY ROWKEY;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"KSQL_COL_0": 1}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key": "1", "value": {"KSQL_COL_0": 1}}
      ],
      "post": {
        "sources": [
          {"name": "DOWNSTREAM", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_1", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | no key change | key in value | no aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO":1, "BAR": 2}}
      ],
      "post": {
        "sources": [
          {"name": "INPUT", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}},
          {"name": "OUTPUT", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | no key change | key in value | aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT foo as aliased, bar FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"ALIASED":1, "BAR": 2}}
      ],
      "post": {
        "issues": [
          "key field of output has INCORRECT name: should be 'ALIASED' - (see Issue #4 above)"
        ],
        "sources": [
          {"name": "INPUT", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}},
          {"name": "OUTPUT", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | no key change | key in value | aliasing | legacy downstream query",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT foo as aliased, bar FROM INPUT;",
        "CREATE STREAM DOWNSTREAM AS SELECT Aliased, bar FROM OUTPUT PARTITION BY Aliased;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"ALIASED":1, "BAR": 2}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key": "1", "value": {"ALIASED":1, "BAR": 2}}
      ],
      "post": {
        "sources": [
         {"name": "DOWNSTREAM", "type": "stream", "keyField": {"name": "ALIASED", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | no key change | key in value | aliasing + duplicate",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT foo as aliased, bar as foo FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"ALIASED":1, "FOO": 2}}
      ],
      "post": {
        "issues": [
          "key field of output has INCORRECT name: should be 'ALIASED' - (see Issue #4 above)"
        ],
        "sources": [
          {"name": "INPUT", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}},
          {"name": "OUTPUT", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | no key change | key in value | aliasing + duplicate | legacy downstream query | no key change",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT foo as aliased, bar as foo FROM INPUT;",
        "CREATE STREAM DOWNSTREAM AS SELECT aliased, foo FROM OUTPUT PARTITION BY aliased;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key": "1" ,"value": {"ALIASED":1, "FOO": 2}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key": "1", "value": {"ALIASED":1, "FOO": 2}}
      ],
      "post": {
        "sources": [
           {"name": "DOWNSTREAM", "type": "stream", "keyField": {"name": "ALIASED", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | no key change | key in value | aliasing + duplicate | legacy downstream query | key change",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT foo as aliased, bar as foo FROM INPUT;",
        "CREATE STREAM DOWNSTREAM AS SELECT aliased, foo FROM OUTPUT PARTITION BY foo;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key": "1" ,"value": {"ALIASED":1, "FOO": 2}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key": "1", "value": {"ALIASED":1, "FOO": 2}}
      ],
      "post": {
        "sources": [
          {"name": "DOWNSTREAM", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | no key change | key not in value | -",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT bar FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"BAR": 2}}
      ],
      "post": {
        "issues": [
          "key field of output INCORRECT: should be null - (see Issue #2 above)"
        ],
        "sources": [
          {"name": "INPUT", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}},
          {"name": "OUTPUT", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | no key change | key not in value | - | legacy downstream query",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT bar FROM INPUT;",
        "CREATE STREAM DOWNSTREAM AS SELECT bar as FOO FROM OUTPUT PARTITION BY foo;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key": "-", "value": {"BAR": 2}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key": "-", "value": {"FOO": 2}}
      ],
      "post": {
       "sources": [
           {"name": "DOWNSTREAM", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | partition by (same) | key in value | no aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT PARTITION BY foo;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key":"1", "value": {"FOO":1, "BAR": 2}}
      ],
      "post": {
        "sources": [
          {"name": "INPUT", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}},
          {"name": "OUTPUT", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | partition by (same) | key in value | aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT foo AS aliased, bar FROM INPUT PARTITION BY aliased;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key":"1", "value": {"ALIASED":1, "BAR": 2}}
      ],
      "post": {
        "sources": [
          {"name": "INPUT", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}},
          {"name": "OUTPUT", "type": "stream", "keyField": {"name": "ALIASED", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | partition by (same) | key not in value | -",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT bar FROM INPUT PARTITION BY foo;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Column FOO does not exist in the result schema. Error in Partition By clause."
      }
    },
    {
      "name": "stream | initially set | partition by (different) | key in value | no aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT PARTITION BY bar;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key":"2", "value": {"FOO": 1, "BAR": 2}}
      ],
      "post": {
        "sources": [
          {"name": "INPUT", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}},
          {"name": "OUTPUT", "type": "stream", "keyField": {"name": "BAR", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | partition by (different) | key in value | aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT foo, bar AS aliased FROM INPUT PARTITION BY aliased;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key":"2", "value": {"FOO": 1, "ALIASED": 2}}
      ],
      "post": {
        "sources": [
          {"name": "INPUT", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}},
          {"name": "OUTPUT", "type": "stream", "keyField": {"name": "ALIASED", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | partition by (different) | key not in value | -",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT foo FROM INPUT PARTITION BY bar;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Column BAR does not exist in the result schema. Error in Partition By clause."
      }
    },
    {
      "name": "stream | initially set | group by (same) | key in value | no aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT foo, COUNT(*) FROM INPUT GROUP BY foo;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key":"1", "value": {"FOO":1, "KSQL_COL_1": 1}}
      ],
      "post": {
        "sources": [
          {"name": "INPUT", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}},
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "FOO", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | group by (same) | key in value | aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT foo AS aliased, COUNT(*) FROM INPUT GROUP BY foo;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key":"1", "value": {"ALIASED":1, "KSQL_COL_1": 1}}
      ],
      "post": {
        "sources": [
          {"name": "INPUT", "type": "stream", "keyField": {"name": "FOO", "schema": {"type": "INT"}}},
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "ALIASED", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | group by (same) | key not in value | -",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT COUNT(*) FROM INPUT GROUP BY foo;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key":"1", "value": {"KSQL_COL_0": 1}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "table", "keyField": null}
        ]
      }
    },
    {
      "name": "stream | initially set | group by (different) | key in value | no aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT bar, COUNT(*) FROM INPUT GROUP BY bar;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key":"2", "value": {"BAR":2, "KSQL_COL_1": 1}}
      ],
      "post": {
        "issues": [
          "key field of output has INCORRECT name: should be 'BAR' - (see Issue #1 above)",
          "key field of output has INCORRECT type: should be 'INT' - (see Issue #3 above)"
        ],
        "sources": [
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | group by (different) | key in value | no aliasing | legacy downstream query",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT bar, COUNT(*) FROM INPUT GROUP BY bar;",
        "CREATE TABLE DOWNSTREAM AS SELECT bar, COUNT(*) FROM OUTPUT GROUP BY bar;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key":"2", "value": {"BAR":2, "KSQL_COL_1": 1}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key":"2", "value": {"BAR":2, "KSQL_COL_1": 1}}
      ],
      "post": {
        "sources": [
          {"name": "DOWNSTREAM", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | group by (different) | key in value | aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT bar AS aliased, COUNT(*) FROM INPUT GROUP BY bar;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key":"2", "value": {"ALIASED":2, "KSQL_COL_1": 1}}
      ],
      "post": {
        "issues": [
          "key field of output has INCORRECT name: should be 'ALIASED' - (see Issue #1 above)",
          "key field of output has INCORRECT type: should be 'INT' - (see Issue #3 above)"
        ],
        "sources": [
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | group by (different) | key in value | aliasing | legacy downstream query",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT bar AS aliased, COUNT(*) FROM INPUT GROUP BY bar;",
        "CREATE TABLE DOWNSTREAM AS SELECT aliased, COUNT(*) FROM OUTPUT GROUP BY aliased;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key":"2", "value": {"ALIASED":2, "KSQL_COL_1": 1}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key":"2", "value": {"ALIASED":2, "KSQL_COL_1": 1}}
      ],
      "post": {
        "sources": [
          {"name": "DOWNSTREAM", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | group by (different) | key not in value | -",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT COUNT(*) FROM INPUT GROUP BY bar;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key":"2", "value": {"KSQL_COL_0": 1}}
      ],
      "post": {
        "issues": ["key field of output INCORRECT: should be null - (see Issue #2 above)"],
        "sources": [
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_1", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | group by (different) | key not in value | - | legacy downstream query",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT COUNT(*) FROM INPUT GROUP BY bar;",
        "CREATE TABLE DOWNSTREAM AS SELECT COUNT(*) FROM OUTPUT GROUP BY ROWKEY;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key":"2", "value": {"KSQL_COL_0": 1}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key":"2", "value": {"KSQL_COL_0": 1}}
      ],
      "post": {
        "sources": [
          {"name": "DOWNSTREAM", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_1", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "table | initially null | no key change | - | -",
      "comments": [
        "Note: The INTERMEDIATE table is there to create a source where the key field is set to null"
      ],
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE INTERMEDIATE AS SELECT bar FROM INPUT;",
        "CREATE TABLE OUTPUT AS SELECT * FROM INTERMEDIATE;"
      ],
      "inputs": [
        {"topic": "INTERMEDIATE", "key": "x", "value": {"bar": 1}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "x", "value": {"BAR": 1}}
      ],
      "post": {
        "sources": [
          {"name": "INTERMEDIATE", "type": "table", "keyField": null},
          {"name": "OUTPUT", "type": "table", "keyField": null}
        ]
      }
    },
    {
      "name": "table | initially null | group by (-) | key in value | no aliasing",
      "comments": [
        "Note: The INTERMEDIATE table is there to create a source where the key field is null"
      ],
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='bar', value_format='JSON');",
        "CREATE TABLE INTERMEDIATE AS SELECT foo FROM INPUT;",
        "CREATE TABLE OUTPUT AS SELECT foo, COUNT(*) FROM INTERMEDIATE GROUP BY foo;"
      ],
      "inputs": [
        {"topic": "INTERMEDIATE", "key": "x", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"FOO": 1, "KSQL_COL_1": 1}}
      ],
      "post": {
        "issues": [
          "key field of output has INCORRECT name: should be 'FOO' - (see Issue #1 above)",
          "key field of output has INCORRECT type: should be 'INT' - (see Issue #3 above)"
        ],
        "sources": [
          {"name": "INTERMEDIATE", "type": "table", "keyField": null},
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "table | initially null | group by (-) | key in value | no aliasing | legacy downstream query",
      "comments": [
        "Note: The INTERMEDIATE table is there to create a source where the key field is set to null"
      ],
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='bar', value_format='JSON');",
        "CREATE TABLE INTERMEDIATE AS SELECT foo FROM INPUT;",
        "CREATE TABLE OUTPUT AS SELECT foo, COUNT(*) FROM INTERMEDIATE GROUP BY foo;",
        "CREATE TABLE DOWNSTREAM AS SELECT foo, COUNT(*) FROM OUTPUT GROUP BY foo;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"FOO": 1, "KSQL_COL_1": 1}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key": "1", "value": {"FOO": 1, "KSQL_COL_1": 1}}
      ],
      "post": {
        "sources": [
           {"name": "INTERMEDIATE", "type": "table", "keyField": null},
           {"name": "DOWNSTREAM", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "table | initially null | group by (-) | key in value | aliasing",
      "comments": [
        "Note: The INTERMEDIATE table is there to create a source where the key field is set to null"
      ],
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='bar', value_format='JSON');",
        "CREATE TABLE INTERMEDIATE AS SELECT foo FROM INPUT;",
        "CREATE TABLE OUTPUT AS SELECT foo AS aliased, COUNT(*) FROM INTERMEDIATE GROUP BY foo;"
      ],
      "inputs": [
        {"topic": "INTERMEDIATE", "key": "x", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"ALIASED": 1, "KSQL_COL_1": 1}}
      ],
      "post": {
        "issues": [
          "key field of output has INCORRECT name: should be 'FOO' - (see Issue #1 above)",
          "key field of output has INCORRECT type: should be 'INT' - (see Issue #3 above)"
        ],
        "sources": [
          {"name": "INTERMEDIATE", "type": "table", "keyField": null},
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "table | initially null | group by (-) | key in value | aliasing | legacy downstream query",
      "comments": [
        "Note: The INTERMEDIATE table is there to create a source where the key field is set to null"
      ],
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='bar', value_format='JSON');",
        "CREATE TABLE INTERMEDIATE AS SELECT foo FROM INPUT;",
        "CREATE TABLE OUTPUT AS SELECT foo AS aliased, COUNT(*) FROM INTERMEDIATE GROUP BY foo;",
        "CREATE TABLE DOWNSTREAM AS SELECT aliased, COUNT(*) FROM OUTPUT GROUP BY aliased;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"ALIASED": 1, "KSQL_COL_1": 1}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key": "1", "value": {"ALIASED": 1, "KSQL_COL_1": 1}}
      ],
      "post": {
        "sources": [
          {"name": "INTERMEDIATE", "type": "table", "keyField": null},
          {"name": "DOWNSTREAM", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "table | initially set | no key change | key in value | no aliasing",
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"FOO": 1, "BAR": 2}}
      ],
      "post": {
        "sources": [
          {"name": "INPUT", "type": "table", "keyField": {"name": "FOO", "schema": {"type": "INT"}}},
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "FOO", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "table | initially set | no key change | key in value | aliasing",
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT foo AS aliased, bar FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"ALIASED": 1, "BAR": 2}}
      ],
      "post": {
        "sources": [
          {"name": "INPUT", "type": "table", "keyField": {"name": "FOO", "schema": {"type": "INT"}}},
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "ALIASED", "schema": {"type": "INT"}}}
        ]
      }
    },
    {
      "name": "table | initially set | no key change | key not in value | -",
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT bar FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"BAR": 2}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "table", "keyField": null}
        ]
      }
    },
    {
      "name": "table | initially set | group by (same) | key in value | no aliasing",
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT foo, COUNT(*) FROM INPUT GROUP BY foo;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"FOO": 1, "KSQL_COL_1":  1}}
      ],
      "post": {
        "issues": [
          "key field of output has INCORRECT name: should be 'FOO' - (see Issue #1 above)",
          "key field of output has INCORRECT type: should be 'INT' - (see Issue #3 above)"
        ],
        "sources": [
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "table | initially set | group by (same) | key in value | no aliasing | legacy downstream query",
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT foo, COUNT(*) FROM INPUT GROUP BY foo;",
        "CREATE TABLE DOWNSTREAM AS SELECT foo, COUNT(*) FROM OUTPUT GROUP BY foo;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"FOO": 1, "KSQL_COL_1":  1}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key": "1", "value": {"FOO": 1, "KSQL_COL_1":  1}}
      ],
      "post": {
        "sources": [
          {"name": "DOWNSTREAM", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "table | initially set | group by (same) | key in value | aliasing",
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT foo AS aliased, COUNT(*) FROM INPUT GROUP BY foo;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"ALIASED": 1, "KSQL_COL_1":  1}}
      ],
      "post": {
        "issues": [
          "key field of output has INCORRECT name: should be 'ALIASED' - (see Issue #1 above)",
          "key field of output has INCORRECT type: should be 'INT' - (see Issue #3 above)"
        ],
        "sources": [
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "table | initially set | group by (same) | key in value | aliasing | legacy downstream query",
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT foo AS aliased, COUNT(*) FROM INPUT GROUP BY foo;",
        "CREATE TABLE DOWNSTREAM AS SELECT aliased, COUNT(*) FROM OUTPUT GROUP BY aliased;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"ALIASED": 1, "KSQL_COL_1":  1}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key": "1", "value": {"ALIASED": 1, "KSQL_COL_1":  1}}
      ],
      "post": {
        "sources": [
          {"name": "DOWNSTREAM", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "table | initially set | group by (same) | key not in value | -",
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT COUNT(*) FROM INPUT GROUP BY foo;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"KSQL_COL_0":  1}}
      ],
      "post": {
        "issues": ["key field of output INCORRECT: should be null - (see Issue #2 above)"],
        "sources": [
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_1", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "table | initially set | group by (same) | key not in value | - | legacy downstream query",
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT COUNT(*) FROM INPUT GROUP BY foo;",
        "CREATE TABLE DOWNSTREAM AS SELECT COUNT(*) FROM OUTPUT GROUP BY ROWKEY;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"KSQL_COL_0":  1}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key": "1", "value": {"KSQL_COL_0":  1}}
      ],
      "post": {
        "sources": [
          {"name": "DOWNSTREAM", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_1", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "table | initially set | group by (different) | key in value | no aliasing",
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT bar, COUNT(*) FROM INPUT GROUP BY bar;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "2", "value": {"BAR": 2, "KSQL_COL_1":  1}}
      ],
      "post": {
        "issues": [
          "key field of output has INCORRECT name: should be 'BAR' - (see Issue #1 above)",
          "key field of output has INCORRECT type: should be 'INT' - (see Issue #3 above)"
        ],
        "sources": [
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "table | initially set | group by (different) | key in value | no aliasing | legacy downstream query",
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT bar, COUNT(*) FROM INPUT GROUP BY bar;",
        "CREATE TABLE DOWNSTREAM AS SELECT bar, COUNT(*) FROM OUTPUT GROUP BY bar;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key": "2", "value": {"BAR": 2, "KSQL_COL_1":  1}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key": "2", "value": {"BAR": 2, "KSQL_COL_1":  1}}
      ],
      "post": {
        "sources": [
          {"name": "DOWNSTREAM", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "table | initially set | group by (different) | key in value | aliasing",
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT bar AS aliased, COUNT(*) FROM INPUT GROUP BY bar;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "2", "value": {"ALIASED": 2, "KSQL_COL_1":  1}}
      ],
      "post": {
        "issues": [
          "key field of output has INCORRECT name: should be 'ALIASED' - (see Issue #1 above)",
          "key field of output has INCORRECT type: should be 'INT' - (see Issue #3 above)"
        ],
        "sources": [
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "table | initially set | group by (different) | key in value | aliasing | legacy downstream query",
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT bar AS aliased, COUNT(*) FROM INPUT GROUP BY bar;",
        "CREATE TABLE DOWNSTREAM AS SELECT aliased, COUNT(*) FROM OUTPUT GROUP BY Aliased;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key": "2", "value": {"ALIASED": 2, "KSQL_COL_1":  1}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key": "2", "value": {"ALIASED": 2, "KSQL_COL_1":  1}}
      ],
      "post": {
        "sources": [
          {"name": "DOWNSTREAM", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "table | initially set | group by (different) | key not in value | -",
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT COUNT(*) FROM INPUT GROUP BY bar;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "2", "value": {"KSQL_COL_0":  1}}
      ],
      "post": {
        "issues": ["key field of output INCORRECT: should be null - (see Issue #2 above)"],
        "sources": [
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_1", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "table | initially set | group by (different) | key not in value | - | legacy downstream query",
      "statements": [
        "CREATE TABLE INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT COUNT(*) FROM INPUT GROUP BY bar;",
        "CREATE TABLE DOWNSTREAM AS SELECT COUNT(*) FROM OUTPUT GROUP BY ROWKEY;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key": "2", "value": {"KSQL_COL_0":  1}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key": "2", "value": {"KSQL_COL_0":  1}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_1", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | partition by expression | key in value | no aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT foo + bar FROM INPUT PARTITION BY foo + bar;"
      ],
      "comment": [
        "This test is present so that it fails if/when we support PARTITION BY on multiple fields.",
        "If/when we do, this test will fail to remind us to add tests to cover keyFields for new functionality"],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "line 2:70: mismatched input '+' expecting ';'"
      }
    },
    {
      "name": "stream | initially set | partition by multiple | key in value | no aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT PARTITION BY foo, bar;"
      ],
      "comment": [
        "This test is present so that it fails if/when we support PARTITION BY on multiple fields.",
        "If/when we do, this test will fail to remind us to add tests to cover keyFields for new functionality"],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "line 2:61: mismatched input ',' expecting ';'"
      }
    },
    {
      "name": "stream | initially set | group by multiple | key in value | no aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT foo, bar, COUNT(*) FROM INPUT GROUP BY bar, foo;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key":"2|+|1", "value": {"FOO": 1, "BAR": 2, "KSQL_COL_2": 1}}
      ],
      "post": {
        "issues": ["key field of output is INCORRECT: should be null - (see Issue #2 above)"],
        "sources": [
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_1|+|KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | group by multiple | key in value | no aliasing | legacy downstream query",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT foo, bar, COUNT(*) FROM INPUT GROUP BY bar, foo;",
        "CREATE TABLE DOWNSTREAM AS SELECT COUNT(*) FROM OUTPUT GROUP BY ROWKEY;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key":"2|+|1", "value": {"FOO": 1, "BAR": 2, "KSQL_COL_2": 1}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key":"2|+|1", "value": {"KSQL_COL_0": 1}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_1|+|KSQL_INTERNAL_COL_0", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | group by expression | key in value | no aliasing",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT foo + bar, COUNT(*) FROM INPUT GROUP BY foo + bar;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": "1", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key":"3", "value": {"KSQL_COL_0": 3, "KSQL_COL_1": 1}}
      ],
      "post": {
        "issues": [
          "key field of output has INCORRECT name: should be 'KSQL_COL_0' - (see Issue #1 above)",
          "key field of output has INCORRECT type: should be 'INT' - (see Issue #3 above)"
        ],
        "sources": [
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "(KSQL_INTERNAL_COL_0 + KSQL_INTERNAL_COL_1)", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "stream | initially set | group by expression | key in value | no aliasing | legacy downstream query",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', key='foo', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT foo + bar, COUNT(*) FROM INPUT GROUP BY foo + bar;",
        "CREATE TABLE DOWNSTREAM AS SELECT COUNT(*) FROM OUTPUT GROUP BY ROWKEY;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key":"3", "value": {"KSQL_COL_0": 3, "KSQL_COL_1": 1}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key":"3", "value": {"KSQL_COL_0": 1}}
      ],
      "post": {
        "sources": [
          {"name": "DOWNSTREAM", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_1", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "stream | initially null | group by (-) | key in value | no aliasing | with cast",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT cast(foo as INT), COUNT(*) FROM INPUT GROUP BY cast(foo as INT);"
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"foo": 1, "bar": 2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"KSQL_COL_0":1, "KSQL_COL_1": 1}}
      ],
      "post": {
        "issues": [
          "key field of output has INCORRECT name: should be 'KSQL_COL_0' - (see Issue #1 above)",
          "key field of output has INCORRECT type: should be 'INT' - (see Issue #3 above)"
        ],
        "sources": [
          {"name": "INPUT", "type": "stream", "keyField": null},
          {"name": "OUTPUT", "type": "table", "keyField": {"name": "CAST(KSQL_INTERNAL_COL_0 AS INTEGER)", "schema": {"type": "STRING"}}}
        ]
      }
    },
    {
      "name": "stream | initially null | group by (-) | key in value | no aliasing | with cast | legacy downstream query",
      "statements": [
        "CREATE STREAM INPUT (foo INT, bar INT) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT cast(foo as INT), COUNT(*) FROM INPUT GROUP BY cast(foo as INT);",
        "CREATE TABLE DOWNSTREAM AS SELECT COUNT(*) FROM OUTPUT GROUP BY ROWKEY;"
      ],
      "inputs": [
        {"topic": "OUTPUT", "key": "1", "value": {"KSQL_COL_0":1, "KSQL_COL_1": 1}}
      ],
      "outputs": [
        {"topic": "DOWNSTREAM", "key": "1", "value": {"KSQL_COL_0":1}}
      ],
      "post": {
        "sources": [
          {"name": "DOWNSTREAM", "type": "table", "keyField": {"name": "KSQL_INTERNAL_COL_1", "schema": {"type": "STRING"}}}
        ]
      }
    }
  ]
}