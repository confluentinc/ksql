{
  "plan" : [ {
    "@type" : "ksqlPlanV1",
    "statementText" : "CREATE STREAM INPUT (BOOLEAN_ARRAY ARRAY<BOOLEAN>, INT_ARRAY ARRAY<INTEGER>, BIGINT_ARRAY ARRAY<BIGINT>, DOUBLE_ARRAY ARRAY<DOUBLE>, STRING_ARRAY ARRAY<STRING>, DECIMAL_ARRAY ARRAY<DECIMAL(2, 1)>) WITH (KAFKA_TOPIC='test_topic', VALUE_FORMAT='JSON');",
    "ddlCommand" : {
      "@type" : "createStreamV1",
      "sourceName" : "INPUT",
      "schema" : "`ROWKEY` STRING KEY, `BOOLEAN_ARRAY` ARRAY<BOOLEAN>, `INT_ARRAY` ARRAY<INTEGER>, `BIGINT_ARRAY` ARRAY<BIGINT>, `DOUBLE_ARRAY` ARRAY<DOUBLE>, `STRING_ARRAY` ARRAY<STRING>, `DECIMAL_ARRAY` ARRAY<DECIMAL(2, 1)>",
      "keyField" : null,
      "timestampColumn" : null,
      "topicName" : "test_topic",
      "formats" : {
        "keyFormat" : {
          "format" : "KAFKA",
          "properties" : { }
        },
        "valueFormat" : {
          "format" : "JSON",
          "properties" : { }
        },
        "options" : [ ]
      },
      "windowInfo" : null
    },
    "queryPlan" : null
  }, {
    "@type" : "ksqlPlanV1",
    "statementText" : "CREATE STREAM OUTPUT AS SELECT\n  ARRAY_LENGTH(INPUT.BOOLEAN_ARRAY) BOOLEAN_LEN,\n  ARRAY_LENGTH(INPUT.INT_ARRAY) INT_LEN,\n  ARRAY_LENGTH(INPUT.BIGINT_ARRAY) BIGINT_LEN,\n  ARRAY_LENGTH(INPUT.DOUBLE_ARRAY) DOUBLE_LEN,\n  ARRAY_LENGTH(INPUT.STRING_ARRAY) STRING_LEN,\n  ARRAY_LENGTH(INPUT.DECIMAL_ARRAY) DECIMAL_LEN\nFROM INPUT INPUT\nEMIT CHANGES",
    "ddlCommand" : {
      "@type" : "createStreamV1",
      "sourceName" : "OUTPUT",
      "schema" : "`ROWKEY` STRING KEY, `BOOLEAN_LEN` INTEGER, `INT_LEN` INTEGER, `BIGINT_LEN` INTEGER, `DOUBLE_LEN` INTEGER, `STRING_LEN` INTEGER, `DECIMAL_LEN` INTEGER",
      "keyField" : null,
      "timestampColumn" : null,
      "topicName" : "OUTPUT",
      "formats" : {
        "keyFormat" : {
          "format" : "KAFKA",
          "properties" : { }
        },
        "valueFormat" : {
          "format" : "JSON",
          "properties" : { }
        },
        "options" : [ ]
      },
      "windowInfo" : null
    },
    "queryPlan" : {
      "sources" : [ "INPUT" ],
      "sink" : "OUTPUT",
      "physicalPlan" : {
        "@type" : "streamSinkV1",
        "properties" : {
          "queryContext" : "OUTPUT"
        },
        "source" : {
          "@type" : "streamSelectV1",
          "properties" : {
            "queryContext" : "Project"
          },
          "source" : {
            "@type" : "streamSourceV1",
            "properties" : {
              "queryContext" : "KsqlTopic/Source"
            },
            "topicName" : "test_topic",
            "formats" : {
              "keyFormat" : {
                "format" : "KAFKA",
                "properties" : { }
              },
              "valueFormat" : {
                "format" : "JSON",
                "properties" : { }
              },
              "options" : [ ]
            },
            "timestampColumn" : null,
            "sourceSchema" : "`ROWKEY` STRING KEY, `BOOLEAN_ARRAY` ARRAY<BOOLEAN>, `INT_ARRAY` ARRAY<INTEGER>, `BIGINT_ARRAY` ARRAY<BIGINT>, `DOUBLE_ARRAY` ARRAY<DOUBLE>, `STRING_ARRAY` ARRAY<STRING>, `DECIMAL_ARRAY` ARRAY<DECIMAL(2, 1)>"
          },
          "selectExpressions" : [ "ARRAY_LENGTH(BOOLEAN_ARRAY) AS BOOLEAN_LEN", "ARRAY_LENGTH(INT_ARRAY) AS INT_LEN", "ARRAY_LENGTH(BIGINT_ARRAY) AS BIGINT_LEN", "ARRAY_LENGTH(DOUBLE_ARRAY) AS DOUBLE_LEN", "ARRAY_LENGTH(STRING_ARRAY) AS STRING_LEN", "ARRAY_LENGTH(DECIMAL_ARRAY) AS DECIMAL_LEN" ]
        },
        "formats" : {
          "keyFormat" : {
            "format" : "KAFKA",
            "properties" : { }
          },
          "valueFormat" : {
            "format" : "JSON",
            "properties" : { }
          },
          "options" : [ ]
        },
        "topicName" : "OUTPUT",
        "timestampColumn" : null
      },
      "queryId" : "CSAS_OUTPUT_0"
    }
  } ],
  "configs" : {
    "ksql.extension.dir" : "ext",
    "ksql.streams.cache.max.bytes.buffering" : "0",
    "ksql.security.extension.class" : null,
    "ksql.transient.prefix" : "transient_",
    "ksql.persistence.wrap.single.values" : "true",
    "ksql.authorization.cache.expiry.time.secs" : "30",
    "ksql.schema.registry.url" : "",
    "ksql.streams.default.deserialization.exception.handler" : "io.confluent.ksql.errors.LogMetricAndContinueExceptionHandler",
    "ksql.output.topic.name.prefix" : "",
    "ksql.streams.auto.offset.reset" : "earliest",
    "ksql.query.pull.enable.standby.reads" : "false",
    "ksql.connect.url" : "http://localhost:8083",
    "ksql.service.id" : "some.ksql.service.id",
    "ksql.internal.topic.min.insync.replicas" : "1",
    "ksql.streams.shutdown.timeout.ms" : "300000",
    "ksql.streams.state.dir" : "/var/folders/2d/3pt97ylj3zngd51bwl91bl3r0000gp/T/confluent6704432109653647691",
    "ksql.internal.topic.replicas" : "1",
    "ksql.insert.into.values.enabled" : "true",
    "ksql.query.pull.max.allowed.offset.lag" : "9223372036854775807",
    "ksql.streams.default.production.exception.handler" : "io.confluent.ksql.errors.ProductionExceptionHandlerUtil$LogAndFailProductionExceptionHandler",
    "ksql.access.validator.enable" : "auto",
    "ksql.streams.bootstrap.servers" : "localhost:0",
    "ksql.streams.commit.interval.ms" : "2000",
    "ksql.metric.reporters" : "",
    "ksql.streams.auto.commit.interval.ms" : "0",
    "ksql.metrics.extension" : null,
    "ksql.streams.topology.optimization" : "all",
    "ksql.query.pull.streamsstore.rebalancing.timeout.ms" : "10000",
    "ksql.hidden.topics" : "_confluent.*,__confluent.*,_schemas,__consumer_offsets,__transaction_state,connect-configs,connect-offsets,connect-status,connect-statuses",
    "ksql.streams.num.stream.threads" : "4",
    "ksql.timestamp.throw.on.invalid" : "false",
    "ksql.authorization.cache.max.entries" : "10000",
    "ksql.metrics.tags.custom" : "",
    "ksql.pull.queries.enable" : "true",
    "ksql.udfs.enabled" : "true",
    "ksql.udf.enable.security.manager" : "true",
    "ksql.connect.worker.config" : "",
    "ksql.any.key.name.enabled" : "false",
    "ksql.sink.window.change.log.additional.retention" : "1000000",
    "ksql.readonly.topics" : "_confluent.*,__confluent.*,_schemas,__consumer_offsets,__transaction_state,connect-configs,connect-offsets,connect-status,connect-statuses",
    "ksql.udf.collect.metrics" : "false",
    "ksql.persistent.prefix" : "query_",
    "ksql.query.persistent.active.limit" : "2147483647"
  }
}