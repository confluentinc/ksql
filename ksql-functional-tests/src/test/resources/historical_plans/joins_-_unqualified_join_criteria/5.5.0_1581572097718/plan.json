{
  "plan" : [ {
    "@type" : "ksqlPlanV1",
    "statementText" : "CREATE STREAM TEST (ROWKEY BIGINT KEY, LEFT_ID BIGINT, NAME STRING) WITH (KAFKA_TOPIC='left_topic', KEY='LEFT_ID', VALUE_FORMAT='JSON');",
    "ddlCommand" : {
      "@type" : "createStreamV1",
      "sourceName" : "TEST",
      "schema" : "`ROWKEY` BIGINT KEY, `LEFT_ID` BIGINT, `NAME` STRING",
      "keyField" : "LEFT_ID",
      "timestampColumn" : null,
      "topicName" : "left_topic",
      "formats" : {
        "keyFormat" : {
          "format" : "KAFKA",
          "properties" : { }
        },
        "valueFormat" : {
          "format" : "JSON",
          "properties" : { }
        },
        "options" : [ ]
      },
      "windowInfo" : null
    },
    "queryPlan" : null
  }, {
    "@type" : "ksqlPlanV1",
    "statementText" : "CREATE STREAM TEST_STREAM (ROWKEY BIGINT KEY, RIGHT_ID BIGINT, F1 STRING) WITH (KAFKA_TOPIC='right_topic', KEY='RIGHT_ID', VALUE_FORMAT='JSON');",
    "ddlCommand" : {
      "@type" : "createStreamV1",
      "sourceName" : "TEST_STREAM",
      "schema" : "`ROWKEY` BIGINT KEY, `RIGHT_ID` BIGINT, `F1` STRING",
      "keyField" : "RIGHT_ID",
      "timestampColumn" : null,
      "topicName" : "right_topic",
      "formats" : {
        "keyFormat" : {
          "format" : "KAFKA",
          "properties" : { }
        },
        "valueFormat" : {
          "format" : "JSON",
          "properties" : { }
        },
        "options" : [ ]
      },
      "windowInfo" : null
    },
    "queryPlan" : null
  }, {
    "@type" : "ksqlPlanV1",
    "statementText" : "CREATE STREAM LEFT_OUTER_JOIN AS SELECT\n  T.LEFT_ID LEFT_ID,\n  T.NAME NAME,\n  TT.F1 F1\nFROM TEST T\nLEFT OUTER JOIN TEST_STREAM TT WITHIN 11 SECONDS ON ((T.LEFT_ID = TT.RIGHT_ID))\nEMIT CHANGES",
    "ddlCommand" : {
      "@type" : "createStreamV1",
      "sourceName" : "LEFT_OUTER_JOIN",
      "schema" : "`ROWKEY` BIGINT KEY, `LEFT_ID` BIGINT, `NAME` STRING, `F1` STRING",
      "keyField" : "LEFT_ID",
      "timestampColumn" : null,
      "topicName" : "LEFT_OUTER_JOIN",
      "formats" : {
        "keyFormat" : {
          "format" : "KAFKA",
          "properties" : { }
        },
        "valueFormat" : {
          "format" : "JSON",
          "properties" : { }
        },
        "options" : [ ]
      },
      "windowInfo" : null
    },
    "queryPlan" : {
      "sources" : [ "TEST", "TEST_STREAM" ],
      "sink" : "LEFT_OUTER_JOIN",
      "physicalPlan" : {
        "@type" : "streamSinkV1",
        "properties" : {
          "queryContext" : "LEFT_OUTER_JOIN"
        },
        "source" : {
          "@type" : "streamSelectV1",
          "properties" : {
            "queryContext" : "Project"
          },
          "source" : {
            "@type" : "streamStreamJoinV1",
            "properties" : {
              "queryContext" : "Join"
            },
            "joinType" : "LEFT",
            "leftInternalFormats" : {
              "keyFormat" : {
                "format" : "KAFKA",
                "properties" : { }
              },
              "valueFormat" : {
                "format" : "JSON",
                "properties" : { }
              },
              "options" : [ ]
            },
            "rightInternalFormats" : {
              "keyFormat" : {
                "format" : "KAFKA",
                "properties" : { }
              },
              "valueFormat" : {
                "format" : "JSON",
                "properties" : { }
              },
              "options" : [ ]
            },
            "leftSource" : {
              "@type" : "streamSelectV1",
              "properties" : {
                "queryContext" : "PrependAliasLeft"
              },
              "source" : {
                "@type" : "streamSourceV1",
                "properties" : {
                  "queryContext" : "KafkaTopic_Left/Source"
                },
                "topicName" : "left_topic",
                "formats" : {
                  "keyFormat" : {
                    "format" : "KAFKA",
                    "properties" : { }
                  },
                  "valueFormat" : {
                    "format" : "JSON",
                    "properties" : { }
                  },
                  "options" : [ ]
                },
                "timestampColumn" : null,
                "sourceSchema" : "`ROWKEY` BIGINT KEY, `LEFT_ID` BIGINT, `NAME` STRING"
              },
              "selectExpressions" : [ "LEFT_ID AS T_LEFT_ID", "NAME AS T_NAME", "ROWTIME AS T_ROWTIME", "ROWKEY AS T_ROWKEY" ]
            },
            "rightSource" : {
              "@type" : "streamSelectV1",
              "properties" : {
                "queryContext" : "PrependAliasRight"
              },
              "source" : {
                "@type" : "streamSourceV1",
                "properties" : {
                  "queryContext" : "KafkaTopic_Right/Source"
                },
                "topicName" : "right_topic",
                "formats" : {
                  "keyFormat" : {
                    "format" : "KAFKA",
                    "properties" : { }
                  },
                  "valueFormat" : {
                    "format" : "JSON",
                    "properties" : { }
                  },
                  "options" : [ ]
                },
                "timestampColumn" : null,
                "sourceSchema" : "`ROWKEY` BIGINT KEY, `RIGHT_ID` BIGINT, `F1` STRING"
              },
              "selectExpressions" : [ "RIGHT_ID AS TT_RIGHT_ID", "F1 AS TT_F1", "ROWTIME AS TT_ROWTIME", "ROWKEY AS TT_ROWKEY" ]
            },
            "beforeMillis" : 11.000000000,
            "afterMillis" : 11.000000000
          },
          "selectExpressions" : [ "T_LEFT_ID AS LEFT_ID", "T_NAME AS NAME", "TT_F1 AS F1" ]
        },
        "formats" : {
          "keyFormat" : {
            "format" : "KAFKA",
            "properties" : { }
          },
          "valueFormat" : {
            "format" : "JSON",
            "properties" : { }
          },
          "options" : [ ]
        },
        "topicName" : "LEFT_OUTER_JOIN"
      },
      "queryId" : "CSAS_LEFT_OUTER_JOIN_0"
    }
  } ],
  "configs" : {
    "ksql.extension.dir" : "ext",
    "ksql.streams.cache.max.bytes.buffering" : "0",
    "ksql.security.extension.class" : null,
    "ksql.transient.prefix" : "transient_",
    "ksql.persistence.wrap.single.values" : "true",
    "ksql.authorization.cache.expiry.time.secs" : "30",
    "ksql.schema.registry.url" : "",
    "ksql.streams.default.deserialization.exception.handler" : "io.confluent.ksql.errors.LogMetricAndContinueExceptionHandler",
    "ksql.output.topic.name.prefix" : "",
    "ksql.streams.auto.offset.reset" : "earliest",
    "ksql.query.pull.enable.standby.reads" : "false",
    "ksql.connect.url" : "http://localhost:8083",
    "ksql.service.id" : "some.ksql.service.id",
    "ksql.internal.topic.min.insync.replicas" : "1",
    "ksql.streams.shutdown.timeout.ms" : "300000",
    "ksql.new.api.enabled" : "false",
    "ksql.streams.state.dir" : "/var/folders/p9/bk8xks6s2lndncftdbq36xh80000gp/T/confluent8393051053551629823",
    "ksql.internal.topic.replicas" : "1",
    "ksql.insert.into.values.enabled" : "true",
    "ksql.query.pull.max.allowed.offset.lag" : "9223372036854775807",
    "ksql.streams.default.production.exception.handler" : "io.confluent.ksql.errors.ProductionExceptionHandlerUtil$LogAndFailProductionExceptionHandler",
    "ksql.access.validator.enable" : "auto",
    "ksql.streams.bootstrap.servers" : "localhost:0",
    "ksql.streams.commit.interval.ms" : "2000",
    "ksql.metric.reporters" : "",
    "ksql.streams.auto.commit.interval.ms" : "0",
    "ksql.metrics.extension" : null,
    "ksql.streams.topology.optimization" : "all",
    "ksql.query.pull.streamsstore.rebalancing.timeout.ms" : "10000",
    "ksql.hidden.topics" : "_confluent.*,__confluent.*,_schemas,__consumer_offsets,__transaction_state,connect-configs,connect-offsets,connect-status,connect-statuses",
    "ksql.streams.num.stream.threads" : "4",
    "ksql.authorization.cache.max.entries" : "10000",
    "ksql.metrics.tags.custom" : "",
    "ksql.pull.queries.enable" : "true",
    "ksql.udfs.enabled" : "true",
    "ksql.udf.enable.security.manager" : "true",
    "ksql.connect.worker.config" : "",
    "ksql.sink.window.change.log.additional.retention" : "1000000",
    "ksql.readonly.topics" : "_confluent.*,__confluent.*,_schemas,__consumer_offsets,__transaction_state,connect-configs,connect-offsets,connect-status,connect-statuses",
    "ksql.udf.collect.metrics" : "false",
    "ksql.persistent.prefix" : "query_",
    "ksql.query.persistent.active.limit" : "2147483647"
  }
}