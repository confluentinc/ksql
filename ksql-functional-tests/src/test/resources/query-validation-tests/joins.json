{
  "tests": [
    {
      "name": "stream stream left join",
      "format": ["AVRO", "JSON"],
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM TEST_STREAM (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT t.id, name, value, f1, f2 FROM test t left join TEST_STREAM tt WITHIN 11 seconds ON t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "key": "100", "value": {"ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000}
      ],
      "outputs": [
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-KSTREAM-JOINTHIS-0000000006-store-changelog", "key": "0\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001", "value": {"ROWTIME": 0, "ROWKEY": "0", "ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-KSTREAM-OUTEROTHER-0000000007-store-changelog", "key": "0\u0000\u0000\u0000\u0000\u0000\u0000'\u0010\u0000\u0000\u0000\u0001", "value": {"ROWTIME": 10000, "ROWKEY": "0", "ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-KSTREAM-JOINTHIS-0000000006-store-changelog", "key": "10\u0000\u0000\u0000\u0000\u0000\u0000*�\u0000\u0000\u0000\u0002", "value": {"ROWTIME": 11000, "ROWKEY": "10", "ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-KSTREAM-JOINTHIS-0000000006-store-changelog", "key": "0\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0003", "value": {"ROWTIME": 13000, "ROWKEY": "0", "ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-KSTREAM-OUTEROTHER-0000000007-store-changelog", "key": "0\u0000\u0000\u0000\u0000\u0000\u0000:�\u0000\u0000\u0000\u0002", "value": {"ROWTIME": 15000, "ROWKEY": "0", "ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-KSTREAM-OUTEROTHER-0000000007-store-changelog", "key": "100\u0000\u0000\u0000\u0000\u0000\u0000>�\u0000\u0000\u0000\u0003", "value": {"ROWTIME": 16000, "ROWKEY": "100", "ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 16000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-KSTREAM-JOINTHIS-0000000006-store-changelog", "key": "90\u0000\u0000\u0000\u0000\u0000\u0000Bh\u0000\u0000\u0000\u0004", "value": {"ROWTIME": 17000, "ROWKEY": "90", "ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-KSTREAM-JOINTHIS-0000000006-store-changelog", "key": "0\u0000\u0000\u0000\u0000\u0000\u0000u0\u0000\u0000\u0000\u0005", "value": {"ROWTIME": 30000, "ROWKEY": "0", "ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "zero", "VALUE": 0, "F1": null, "F2": null}, "timestamp": 0},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "LEFT_OUTER_JOIN", "key": "10", "value": {"T_ID": 10, "NAME": "100", "VALUE": 5, "F1": null, "F2": null}, "timestamp": 11000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "LEFT_OUTER_JOIN", "key": "90", "value": {"T_ID": 90, "NAME": "ninety", "VALUE": 90, "F1": null, "F2": null}, "timestamp": 17000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "bar", "VALUE": 99, "F1": null, "F2": null}, "timestamp": 30000}
      ],
      "post": {
        "sources": [
          {"name": "LEFT_OUTER_JOIN", "type": "stream", "keyField": "T_ID"}
        ]
      }
    },
    {
      "name": "stream stream left join - KAFKA",
      "statements": [
        "CREATE STREAM S_LEFT (ID bigint) WITH (kafka_topic='left_topic', value_format='KAFKA', key='ID');",
        "CREATE STREAM S_RIGHT (ID bigint) WITH (kafka_topic='right_topic', value_format='KAFKA', key='ID');",
        "CREATE STREAM OUTPUT WITH(value_format='delimited') as SELECT * FROM s_left join s_right WITHIN 1 second ON s_left.id = s_right.id;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Source(s) S_LEFT, S_RIGHT are using the 'KAFKA' value format. This format does not yet support JOIN."
      }
    },
    {
      "name": "stream stream left join with rowkey - rekey",
      "format": ["AVRO", "JSON"],
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='{FORMAT}');",
        "CREATE STREAM TEST_STREAM (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='{FORMAT}');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT t.id, t.rowkey, name, value, f1, f2 FROM test t left join TEST_STREAM tt WITHIN 11 seconds ON t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "foo", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "foo", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "foo", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "foo", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "foo", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "key": "foo", "value": {"ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 16000},
        {"topic": "left_topic", "key": "foo", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "left_topic", "key": "foo", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000}
      ],
      "outputs": [
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "T_ROWKEY": "foo","NAME": "zero", "VALUE": 0, "F1": null, "F2": null}, "timestamp": 0},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "T_ROWKEY": "foo", "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "LEFT_OUTER_JOIN", "key": "10", "value": {"T_ID": 10, "T_ROWKEY": "foo", "NAME": "100", "VALUE": 5, "F1": null, "F2": null}, "timestamp": 11000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "T_ROWKEY": "foo", "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "T_ROWKEY": "foo", "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "LEFT_OUTER_JOIN", "key": "90", "value": {"T_ID": 90, "T_ROWKEY": "foo", "NAME": "ninety", "VALUE": 90, "F1": null, "F2": null}, "timestamp": 17000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "T_ROWKEY": "foo", "NAME": "bar", "VALUE": 99, "F1": null, "F2": null}, "timestamp": 30000}
      ],
      "post": {
        "sources": [
          {"name": "LEFT_OUTER_JOIN", "type": "stream", "keyField": "T_ID"}
        ]
      }
    },
    {
      "name": "stream stream left join - rekey",
      "format": ["AVRO", "JSON"],
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='{FORMAT}');",
        "CREATE STREAM TEST_STREAM (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='{FORMAT}');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT t.id, name, value, f1, f2 FROM test t left join TEST_STREAM tt WITHIN 11 seconds ON t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "value": {"ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 16000},
        {"topic": "left_topic", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "left_topic", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000}
      ],
      "outputs": [
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-Join-left-repartition", "key": "0", "value": {"ROWTIME": 0, "ROWKEY": "", "ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-Join-right-repartition", "key": "0", "value": {"ROWTIME": 10000, "ROWKEY": "", "ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-Join-left-repartition", "key": "10", "value": {"ROWTIME": 11000, "ROWKEY": "", "ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-Join-left-repartition", "key": "0", "value": {"ROWTIME": 13000, "ROWKEY": "", "ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-Join-right-repartition", "key": "0", "value": {"ROWTIME": 15000, "ROWKEY": "", "ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-Join-right-repartition", "key": "100", "value": {"ROWTIME": 16000, "ROWKEY": "", "ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 16000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-Join-left-repartition", "key": "90", "value": {"ROWTIME": 17000, "ROWKEY": "", "ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-Join-left-repartition", "key": "0", "value": {"ROWTIME": 30000, "ROWKEY": "", "ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-KSTREAM-JOINTHIS-0000000016-store-changelog", "key": "0\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001", "value": {"ROWTIME": 0, "ROWKEY": "", "ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-KSTREAM-OUTEROTHER-0000000017-store-changelog", "key": "0\u0000\u0000\u0000\u0000\u0000\u0000'\u0010\u0000\u0000\u0000\u0001", "value": {"ROWTIME": 10000, "ROWKEY": "", "ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-KSTREAM-JOINTHIS-0000000016-store-changelog", "key": "10\u0000\u0000\u0000\u0000\u0000\u0000*�\u0000\u0000\u0000\u0002", "value": {"ROWTIME": 11000, "ROWKEY": "", "ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-KSTREAM-JOINTHIS-0000000016-store-changelog", "key": "0\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0003", "value": {"ROWTIME": 13000, "ROWKEY": "", "ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-KSTREAM-OUTEROTHER-0000000017-store-changelog", "key": "0\u0000\u0000\u0000\u0000\u0000\u0000:�\u0000\u0000\u0000\u0002", "value": {"ROWTIME": 15000, "ROWKEY": "", "ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-KSTREAM-OUTEROTHER-0000000017-store-changelog", "key": "100\u0000\u0000\u0000\u0000\u0000\u0000>�\u0000\u0000\u0000\u0003", "value": {"ROWTIME": 16000, "ROWKEY": "", "ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 16000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-KSTREAM-JOINTHIS-0000000016-store-changelog", "key": "90\u0000\u0000\u0000\u0000\u0000\u0000Bh\u0000\u0000\u0000\u0004", "value": {"ROWTIME": 17000, "ROWKEY": "", "ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_LEFT_OUTER_JOIN_0-KSTREAM-JOINTHIS-0000000016-store-changelog", "key": "0\u0000\u0000\u0000\u0000\u0000\u0000u0\u0000\u0000\u0000\u0005", "value": {"ROWTIME": 30000, "ROWKEY": "", "ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "zero", "VALUE": 0, "F1": null, "F2": null}, "timestamp": 0},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "LEFT_OUTER_JOIN", "key": "10", "value": {"T_ID": 10, "NAME": "100", "VALUE": 5, "F1": null, "F2": null}, "timestamp": 11000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "LEFT_OUTER_JOIN", "key": "90", "value": {"T_ID": 90, "NAME": "ninety", "VALUE": 90, "F1": null, "F2": null}, "timestamp": 17000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "bar", "VALUE": 99, "F1": null, "F2": null}, "timestamp": 30000}
      ],
      "post": {
        "sources": [
          {"name": "LEFT_OUTER_JOIN", "type": "stream", "keyField": "T_ID"}
        ]
      }
    },
    {
      "name": "stream stream left join - join key not in projection",
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='JSON', key='ID');",
        "CREATE STREAM TEST_STREAM (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='JSON', key='ID');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT name, value, f1, f2 FROM test t left join TEST_STREAM tt WITHIN 11 seconds ON t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "key": "100", "value": {"ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000}
      ],
      "outputs": [
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"NAME": "zero", "VALUE": 0, "F1": null, "F2": null}, "timestamp": 0},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "LEFT_OUTER_JOIN", "key": "10", "value": {"NAME": "100", "VALUE": 5, "F1": null, "F2": null}, "timestamp": 11000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "LEFT_OUTER_JOIN", "key": "90", "value": {"NAME": "ninety", "VALUE": 90, "F1": null, "F2": null}, "timestamp": 17000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"NAME": "bar", "VALUE": 99, "F1": null, "F2": null}, "timestamp": 30000}
      ],
      "post": {
        "sources": [
          {"name": "LEFT_OUTER_JOIN", "type": "stream", "keyField": null}
        ]
      }
    },
    {
      "name": "stream stream left join - right join key in projection",
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST_STREAM (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT tt.id, name, value, f1, f2 FROM test t left join TEST_STREAM tt WITHIN 11 seconds ON t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "value": {"ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 16000},
        {"topic": "left_topic", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "left_topic", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000}
      ],
      "outputs": [
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"TT_ID": null, "NAME": "zero", "VALUE": 0, "F1": null, "F2": null}, "timestamp": 0},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "LEFT_OUTER_JOIN", "key": "10", "value": {"TT_ID": null, "NAME": "100", "VALUE": 5, "F1": null, "F2": null}, "timestamp": 11000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "LEFT_OUTER_JOIN", "key": "90", "value": {"TT_ID": null, "NAME": "ninety", "VALUE": 90, "F1": null, "F2": null}, "timestamp": 17000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"TT_ID": null, "NAME": "bar", "VALUE": 99, "F1": null, "F2": null}, "timestamp": 30000}
      ],
      "post": {
        "comments": [
          "key field is null because field 'TT_ID' does not always match the key of the output record due to it being an left join"
        ],
        "sources": [
          {"name": "LEFT_OUTER_JOIN", "type": "stream", "keyField": null}
        ]
      }
    },
    {
      "name": "stream stream left join - both join keys in projection",
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST_STREAM (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT t.id, tt.id, name, value, f1, f2 FROM test t left join TEST_STREAM tt WITHIN 11 seconds ON t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "value": {"ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 16000},
        {"topic": "left_topic", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "left_topic", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000}
      ],
      "outputs": [
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "TT_ID": null, "NAME": "zero", "VALUE": 0, "F1": null, "F2": null}, "timestamp": 0},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "TT_ID": 0, "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "LEFT_OUTER_JOIN", "key": "10", "value": {"T_ID": 10, "TT_ID": null, "NAME": "100", "VALUE": 5, "F1": null, "F2": null}, "timestamp": 11000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "LEFT_OUTER_JOIN", "key": "90", "value": {"T_ID": 90, "TT_ID": null, "NAME": "ninety", "VALUE": 90, "F1": null, "F2": null}, "timestamp": 17000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "TT_ID": null, "NAME": "bar", "VALUE": 99, "F1": null, "F2": null}, "timestamp": 30000}
      ],
      "post": {
        "sources": [
          {"name": "LEFT_OUTER_JOIN", "type": "stream", "keyField": "T_ID"}
        ]
      }
    },
    {
      "name": "stream stream inner join",
      "format": ["AVRO", "JSON"],
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM TEST_STREAM (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM INNER_JOIN as SELECT t.id, name, value, f1, f2 FROM test t join TEST_STREAM tt WITHIN 11 SECONDS ON t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "key": "100", "value": {"ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000}
      ],
      "post": {
        "sources": [
          {"name": "INNER_JOIN", "type": "stream", "keyField": "T_ID"}
        ]
      }
    },
    {
      "name": "stream stream inner join all left fields some right",
      "format": ["AVRO", "JSON"],
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM TEST_STREAM (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM INNER_JOIN as SELECT t.*, tt.f1 FROM test t inner join TEST_STREAM tt WITHIN 11 SECONDS ON t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "key": "100", "value": {"ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "T_NAME": "zero", "T_VALUE": 0, "F1": "blah", "T_ROWKEY": "0", "T_ROWTIME": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "T_NAME": "foo", "T_VALUE": 100, "F1": "blah", "T_ROWKEY": "0", "T_ROWTIME": 13000}, "timestamp": 13000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "T_NAME": "foo", "T_VALUE": 100, "F1": "a", "T_ROWKEY": "0", "T_ROWTIME": 13000}, "timestamp": 15000}
      ]
    },
    {
      "name": "stream stream inner join all right fields some left",
      "format": ["AVRO", "JSON"],
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM TEST_STREAM (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM INNER_JOIN as SELECT t.*, tt.name FROM test tt inner join TEST_STREAM t WITHIN 11 SECONDS ON t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "key": "100", "value": {"ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "T_F1": "blah", "T_F2": 50, "T_ROWKEY": "0", "T_ROWTIME": 10000, "NAME": "zero"}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "T_F1": "blah", "T_F2": 50, "T_ROWKEY": "0", "T_ROWTIME": 10000, "NAME": "foo"}, "timestamp": 13000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "T_F1": "a", "T_F2": 10, "T_ROWKEY": "0", "T_ROWTIME": 15000, "NAME": "foo"}, "timestamp": 15000}
      ],
      "post": {
        "issues": [
          "keyField is wrong - should be T_ID as right join key always matches record key. See https://github.com/confluentinc/ksql/issues/2741."
        ],
        "sources": [
          {"name": "INNER_JOIN", "type": "stream", "keyField": null}
        ]
      }
    },
    {
      "name": "stream stream inner join all fields",
      "format": ["AVRO", "JSON"],
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar) WITH (kafka_topic='left_topic', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM TEST_STREAM (ID bigint, F1 varchar) WITH (kafka_topic='right_topic', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM INNER_JOIN as SELECT * FROM test tt inner join TEST_STREAM t WITHIN 11 SECONDS ON t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero"}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah"}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100"}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo"}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a"}, "timestamp": 15000},
        {"topic": "right_topic", "key": "100", "value": {"ID": 100, "F1": "newblah"}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety"}, "timestamp": 17000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar"}, "timestamp": 30000}
      ],
      "outputs": [
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_INNER_JOIN_0-KSTREAM-JOINTHIS-0000000006-store-changelog", "key": "0\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001", "value": {"ROWTIME": 0, "ROWKEY": "0", "ID": 0, "NAME": "zero"}, "timestamp": 0},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_INNER_JOIN_0-KSTREAM-JOINOTHER-0000000007-store-changelog", "key": "0\u0000\u0000\u0000\u0000\u0000\u0000'\u0010\u0000\u0000\u0000\u0001", "value": {"ROWTIME": 10000, "ROWKEY": "0", "ID": 0, "F1": "blah"}, "timestamp": 10000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_INNER_JOIN_0-KSTREAM-JOINTHIS-0000000006-store-changelog", "key": "10\u0000\u0000\u0000\u0000\u0000\u0000*�\u0000\u0000\u0000\u0002", "value": {"ROWTIME": 11000, "ROWKEY": "10", "ID": 10, "NAME": "100"}, "timestamp": 11000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_INNER_JOIN_0-KSTREAM-JOINTHIS-0000000006-store-changelog", "key": "0\u0000\u0000\u0000\u0000\u0000\u00002�\u0000\u0000\u0000\u0003", "value": {"ROWTIME": 13000, "ROWKEY": "0", "ID": 0, "NAME": "foo"}, "timestamp": 13000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_INNER_JOIN_0-KSTREAM-JOINOTHER-0000000007-store-changelog", "key": "0\u0000\u0000\u0000\u0000\u0000\u0000:�\u0000\u0000\u0000\u0002", "value": {"ROWTIME": 15000, "ROWKEY": "0", "ID": 0, "F1": "a"}, "timestamp": 15000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_INNER_JOIN_0-KSTREAM-JOINOTHER-0000000007-store-changelog", "key": "100\u0000\u0000\u0000\u0000\u0000\u0000>�\u0000\u0000\u0000\u0003", "value": {"ROWTIME": 16000, "ROWKEY": "100", "ID": 100, "F1": "newblah"}, "timestamp": 16000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_INNER_JOIN_0-KSTREAM-JOINTHIS-0000000006-store-changelog", "key": "90\u0000\u0000\u0000\u0000\u0000\u0000Bh\u0000\u0000\u0000\u0004", "value": {"ROWTIME": 17000, "ROWKEY": "90", "ID": 90, "NAME": "ninety"}, "timestamp": 17000},
        {"topic": "_confluent-ksql-some.ksql.service.idquery_CSAS_INNER_JOIN_0-KSTREAM-JOINTHIS-0000000006-store-changelog", "key": "0\u0000\u0000\u0000\u0000\u0000\u0000u0\u0000\u0000\u0000\u0005", "value": {"ROWTIME": 30000, "ROWKEY": "0", "ID": 0, "NAME": "bar"}, "timestamp": 30000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "T_F1": "blah", "T_ROWKEY": "0", "T_ROWTIME": 10000, "TT_ID": 0, "TT_NAME": "zero", "TT_ROWKEY": "0", "TT_ROWTIME": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "T_F1": "blah", "T_ROWKEY": "0", "T_ROWTIME": 10000, "TT_ID": 0, "TT_NAME": "foo", "TT_ROWKEY": "0", "TT_ROWTIME": 13000}, "timestamp": 13000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "T_F1": "a", "T_ROWKEY": "0", "T_ROWTIME": 15000, "TT_ID": 0, "TT_NAME": "foo", "TT_ROWKEY": "0", "TT_ROWTIME": 13000}, "timestamp": 15000}
      ],
      "post": {
        "sources": [
          {"name": "INNER_JOIN", "type": "stream", "keyField": "TT_ID"}
        ]
      }
    },
    {
      "name": "stream stream inner join with different before and after windows",
      "format": ["AVRO", "JSON"],
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM TEST_STREAM (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM INNER_JOIN as SELECT t.id, name, value, f1, f2 FROM test t join TEST_STREAM tt WITHIN (11 seconds, 10 seconds) on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 11000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 12000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "key": "100", "value": {"ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000}
      ]
    },
    {
      "name": "stream stream inner join with out of order messages",
      "format": ["AVRO", "JSON"],
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM TEST_STREAM (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM INNER_JOIN as SELECT t.id, name, value, f1, f2 FROM test t join TEST_STREAM tt WITHIN 10 seconds on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 9999},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "key": "100", "value": {"ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "late-message", "VALUE": 10000}, "timestamp": 6000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 9999},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "late-message", "VALUE": 10000, "F1": "blah", "F2": 50}, "timestamp": 9999},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "late-message", "VALUE": 10000, "F1": "a", "F2": 10}, "timestamp": 15000}
      ]
    },
    {
      "name": "stream stream inner join - join key not in projection",
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='JSON', key='ID');",
        "CREATE STREAM TEST_STREAM (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='JSON', key='ID');",
        "CREATE STREAM INNER_JOIN as SELECT name, value, f1, f2 FROM test t join TEST_STREAM tt WITHIN 11 SECONDS ON t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "key": "100", "value": {"ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000}
      ],
      "post": {
        "sources": [
          {"name": "INNER_JOIN", "type": "stream", "keyField": null}
        ]
      }
    },
    {
      "name": "stream stream inner join - right join key in projection",
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='JSON', key='ID');",
        "CREATE STREAM TEST_STREAM (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='JSON', key='ID');",
        "CREATE STREAM INNER_JOIN as SELECT tt.id, name, value, f1, f2 FROM test t join TEST_STREAM tt WITHIN 11 SECONDS ON t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "key": "100", "value": {"ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000}
      ],
      "post": {
        "issues": [
          "key field has incorrect name - should be TT_ID as right join key always matches record key. See https://github.com/confluentinc/ksql/issues/2741."
        ],
        "sources": [
          {"name": "INNER_JOIN", "type": "stream", "keyField": null}
        ]
      }
    },
    {
      "name": "stream stream outer join",
      "format": ["AVRO", "JSON"],
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM TEST_STREAM (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT t.id, name, value, f1, f2 FROM test t FULL OUTER join TEST_STREAM tt WITHIN 11 seconds on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "right_topic", "key": "100", "value": {"ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 20000}

      ],
      "outputs": [
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "zero", "VALUE": 0, "F1": null, "F2": null}, "timestamp": 0},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "LEFT_OUTER_JOIN", "key": "10", "value": {"T_ID": 10, "NAME": "100", "VALUE": 5, "F1": null, "F2": null}, "timestamp": 11000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "bar", "VALUE": 99, "F1": null, "F2": null}, "timestamp": 30000},
        {"topic": "LEFT_OUTER_JOIN", "key": "90", "value": {"T_ID": 90, "NAME": "ninety", "VALUE": 90, "F1": null, "F2": null}, "timestamp": 17000},
        {"topic": "LEFT_OUTER_JOIN", "key": "100", "value": {"T_ID": null, "NAME": null, "VALUE": null, "F1": "newblah", "F2": 150}, "timestamp": 20000}
      ],
      "post": {
        "comments": [
          "key field is null because field 'T_ID' does not always match the key of the output record due to it being a full outer join"
        ],
        "sources": [
          {"name": "LEFT_OUTER_JOIN", "type": "stream", "keyField": null}
        ]
      }
    },
    {
      "name": "stream stream outer join - right join key in projection",
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='JSON', key='ID');",
        "CREATE STREAM TEST_STREAM (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='JSON', key='ID');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT tt.id, name, value, f1, f2 FROM test t FULL OUTER join TEST_STREAM tt WITHIN 11 seconds on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "right_topic", "key": "100", "value": {"ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 20000}

      ],
      "outputs": [
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"TT_ID": null, "NAME": "zero", "VALUE": 0, "F1": null, "F2": null}, "timestamp": 0},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "LEFT_OUTER_JOIN", "key": "10", "value": {"TT_ID": null, "NAME": "100", "VALUE": 5, "F1": null, "F2": null}, "timestamp": 11000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"TT_ID": null, "NAME": "bar", "VALUE": 99, "F1": null, "F2": null}, "timestamp": 30000},
        {"topic": "LEFT_OUTER_JOIN", "key": "90", "value": {"TT_ID": null, "NAME": "ninety", "VALUE": 90, "F1": null, "F2": null}, "timestamp": 17000},
        {"topic": "LEFT_OUTER_JOIN", "key": "100", "value": {"TT_ID": 100, "NAME": null, "VALUE": null, "F1": "newblah", "F2": 150}, "timestamp": 20000}
      ],
      "post": {
        "comments": [
          "key field is null because field 'TT_ID' does not always match the key of the output record due to it being a full outer join"
        ],
        "sources": [
          {"name": "LEFT_OUTER_JOIN", "type": "stream", "keyField": null}
        ]
      }
    },
    {
      "name": "table table left join",
      "format": ["AVRO", "JSON"],
      "statements": [
        "CREATE TABLE TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='{FORMAT}', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='{FORMAT}', key='ID');",
        "CREATE TABLE LEFT_OUTER_JOIN as SELECT t.id, name, value, f1, f2 FROM test t left join TEST_TABLE tt on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000}
      ],
      "outputs": [
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "zero", "VALUE": 0, "F1": null, "F2": null}, "timestamp": 0},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "LEFT_OUTER_JOIN", "key": "10", "value": {"T_ID": 10, "NAME": "100", "VALUE": 5, "F1": null, "F2": null}, "timestamp": 11000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 16000},
        {"topic": "LEFT_OUTER_JOIN", "key": "90", "value": {"T_ID": 90, "NAME": "ninety", "VALUE": 90, "F1": null, "F2": null}, "timestamp": 17000}
      ],
      "post": {
        "sources": [
          {"name": "LEFT_OUTER_JOIN", "type": "table", "keyField": "T_ID"}
        ]
      }
    },
    {
      "name": "table table left join - join key not in projection",
      "statements": [
        "CREATE TABLE TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='JSON', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='JSON', key='ID');",
        "CREATE TABLE LEFT_OUTER_JOIN as SELECT name, value, f1, f2 FROM test t left join TEST_TABLE tt on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000}
      ],
      "outputs": [
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"NAME": "zero", "VALUE": 0, "F1": null, "F2": null}, "timestamp": 0},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "LEFT_OUTER_JOIN", "key": "10", "value": {"NAME": "100", "VALUE": 5, "F1": null, "F2": null}, "timestamp": 11000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 16000},
        {"topic": "LEFT_OUTER_JOIN", "key": "90", "value": {"NAME": "ninety", "VALUE": 90, "F1": null, "F2": null}, "timestamp": 17000}
      ],
      "post": {
        "sources": [
          {"name": "LEFT_OUTER_JOIN", "type": "table", "keyField": null}
        ]
      }
    },
    {
      "name": "table table left join - right join key in projection",
      "statements": [
        "CREATE TABLE TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='JSON', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='JSON', key='ID');",
        "CREATE TABLE LEFT_OUTER_JOIN as SELECT tt.id, name, value, f1, f2 FROM test t left join TEST_TABLE tt on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000}
      ],
      "outputs": [
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"TT_ID": null, "NAME": "zero", "VALUE": 0, "F1": null, "F2": null}, "timestamp": 0},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "LEFT_OUTER_JOIN", "key": "10", "value": {"TT_ID": null, "NAME": "100", "VALUE": 5, "F1": null, "F2": null}, "timestamp": 11000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 16000},
        {"topic": "LEFT_OUTER_JOIN", "key": "90", "value": {"TT_ID": null, "NAME": "ninety", "VALUE": 90, "F1": null, "F2": null}, "timestamp": 17000}
      ],
      "post": {
        "comments": [
          "key field is null because field 'TT_ID' does not always match the key of the output record due to it being an outer join"
        ],
        "sources": [
          {"name": "LEFT_OUTER_JOIN", "type": "table", "keyField": null}
        ]
      }
    },
    {
      "name": "table table left join - both join keys in projection",
      "statements": [
        "CREATE TABLE TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='JSON', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='JSON', key='ID');",
        "CREATE TABLE LEFT_OUTER_JOIN as SELECT t.id, tt.id, name, value, f1, f2 FROM test t left join TEST_TABLE tt on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000}
      ],
      "outputs": [
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "TT_ID": null, "NAME": "zero", "VALUE": 0, "F1": null, "F2": null}, "timestamp": 0},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "TT_ID": 0, "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "LEFT_OUTER_JOIN", "key": "10", "value": {"T_ID": 10, "TT_ID": null, "NAME": "100", "VALUE": 5, "F1": null, "F2": null}, "timestamp": 11000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "TT_ID": 0, "NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 16000},
        {"topic": "LEFT_OUTER_JOIN", "key": "90", "value": {"T_ID": 90, "TT_ID": null, "NAME": "ninety", "VALUE": 90, "F1": null, "F2": null}, "timestamp": 17000}
      ],
      "post": {
        "sources": [
          {"name": "LEFT_OUTER_JOIN", "type": "table", "keyField": "T_ID"}
        ]
      }
    },
    {
      "name": "table table inner join",
      "format": ["AVRO", "JSON"],
      "statements": [
        "CREATE TABLE TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='{FORMAT}', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='{FORMAT}', key='ID');",
        "CREATE TABLE INNER_JOIN as SELECT t.id, name, value, f1, f2 FROM test t join TEST_TABLE tt on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "key": "15", "value": {"ID": 15, "F1": "c", "F2": 20}, "timestamp": 15500},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 16000}
      ],
      "post": {
        "sources": [
          {"name": "INNER_JOIN", "type": "table", "keyField": "T_ID"}
        ]
      }
    },
    {
      "name": "table table inner join - join key not in projection",
      "statements": [
        "CREATE TABLE TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='JSON', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='JSON', key='ID');",
        "CREATE TABLE INNER_JOIN as SELECT name, value, f1, f2 FROM test t join TEST_TABLE tt on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "key": "15", "value": {"ID": 15, "F1": "c", "F2": 20}, "timestamp": 15500},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 16000}
      ],
      "post": {
        "sources": [
          {"name": "INNER_JOIN", "type": "table", "keyField": null}
        ]
      }
    },
    {
      "name": "table table inner join - right join key in projection",
      "statements": [
        "CREATE TABLE TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='JSON', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='JSON', key='ID');",
        "CREATE TABLE INNER_JOIN as SELECT tt.id, name, value, f1, f2 FROM test t join TEST_TABLE tt on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "key": "15", "value": {"ID": 15, "F1": "c", "F2": 20}, "timestamp": 15500},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 16000}
      ],
      "post": {
        "issues": [
          "key field has incorrect name - should be TT_ID as the right key always matches the record key. See https://github.com/confluentinc/ksql/issues/2741."
        ],
        "sources": [
          {"name": "INNER_JOIN", "type": "table", "keyField": null}
        ]
      }
    },
    {
      "name": "table table outer join",
      "format": ["AVRO", "JSON"],
      "statements": [
        "CREATE TABLE TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='{FORMAT}', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='{FORMAT}', key='ID');",
        "CREATE TABLE OUTER_JOIN as SELECT t.id, name, value, f1, f2 FROM test t FULL OUTER join TEST_TABLE tt on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "key": "15", "value": {"ID": 15, "F1": "c", "F2": 20}, "timestamp": 15500},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 16000}
      ],
      "outputs": [
        {"topic": "OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "zero", "VALUE": 0, "F1": null, "F2": null}, "timestamp": 0},
        {"topic": "OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "OUTER_JOIN", "key": "10", "value": {"T_ID": 10, "NAME": "100", "VALUE": 5, "F1": null, "F2": null}, "timestamp": 11000},
        {"topic": "OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "OUTER_JOIN", "key": "15", "value": {"T_ID": null, "NAME": null, "VALUE": null, "F1": "c", "F2": 20}, "timestamp": 15500},
        {"topic": "OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 16000}
      ],
      "post": {
        "comments": [
          "key field is null because field 'T_ID' does not always match the key of the output record due to it being a full outer join"
        ],
        "sources": [
          {"name": "OUTER_JOIN", "type": "table", "keyField": null}
        ]
      }
    },
    {
      "name": "table table outer join - right join key in projection",
      "statements": [
        "CREATE TABLE TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='JSON', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='JSON', key='ID');",
        "CREATE TABLE OUTER_JOIN as SELECT tt.id, name, value, f1, f2 FROM test t FULL OUTER join TEST_TABLE tt on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "key": "15", "value": {"ID": 15, "F1": "c", "F2": 20}, "timestamp": 15500},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 16000}
      ],
      "outputs": [
        {"topic": "OUTER_JOIN", "key": "0", "value": {"TT_ID": null, "NAME": "zero", "VALUE": 0, "F1": null, "F2": null}, "timestamp": 0},
        {"topic": "OUTER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "OUTER_JOIN", "key": "10", "value": {"TT_ID": null, "NAME": "100", "VALUE": 5, "F1": null, "F2": null}, "timestamp": 11000},
        {"topic": "OUTER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "OUTER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "OUTER_JOIN", "key": "15", "value": {"TT_ID": 15, "NAME": null, "VALUE": null, "F1": "c", "F2": 20}, "timestamp": 15500},
        {"topic": "OUTER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 16000}
      ],
      "post": {
        "comments": [
          "key field is null because field 'TT_ID' does not always match the key of the output record due to it being a full outer join"
        ],
        "sources": [
          {"name": "OUTER_JOIN", "type": "table", "keyField": null}
        ]
      }
    },
    {
      "name": "stream table left join",
      "format": ["AVRO", "JSON"],
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='test_topic', value_format='{FORMAT}', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='test_table', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM LEFT_JOIN as SELECT t.id, name, value, f1, f2 FROM test t left join test_table tt on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "zero", "F2": 0}, "timestamp": 0},
        {"topic": "test_table", "key": "10", "value": {"ID": 10, "F1": "100", "F2": 5}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "blah", "VALUE": 50}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 10000},
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 15000},
        {"topic": "test_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 15000}
      ],
      "outputs": [
        {"topic": "LEFT_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "blah", "VALUE": 50, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "LEFT_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "LEFT_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "LEFT_JOIN", "key": "90", "value": {"T_ID": 90, "NAME": "ninety", "VALUE": 90, "F1": null, "F2": null}, "timestamp": 15000}
      ],
      "post": {
        "sources": [
          {"name": "LEFT_JOIN", "type": "stream", "keyField": "T_ID"}
        ]
      }
    },
    {
      "name": "stream table left join - join key not in projection",
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='test_topic', value_format='JSON', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='test_table', value_format='JSON', key='ID');",
        "CREATE STREAM LEFT_JOIN as SELECT name, value, f1, f2 FROM test t left join test_table tt on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "zero", "F2": 0}, "timestamp": 0},
        {"topic": "test_table", "key": "10", "value": {"ID": 10, "F1": "100", "F2": 5}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "blah", "VALUE": 50}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 10000},
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 15000},
        {"topic": "test_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 15000}
      ],
      "outputs": [
        {"topic": "LEFT_JOIN", "key": "0", "value": {"NAME": "blah", "VALUE": 50, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "LEFT_JOIN", "key": "0", "value": {"NAME": "foo", "VALUE": 100, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "LEFT_JOIN", "key": "0", "value": {"NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "LEFT_JOIN", "key": "90", "value": {"NAME": "ninety", "VALUE": 90, "F1": null, "F2": null}, "timestamp": 15000}
      ],
      "post": {
        "sources": [
          {"name": "LEFT_JOIN", "type": "stream", "keyField": null}
        ]
      }
    },
    {
      "name": "stream table left join - right join key in projection",
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='test_topic', value_format='JSON', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='test_table', value_format='JSON', key='ID');",
        "CREATE STREAM LEFT_JOIN as SELECT tt.id, name, value, f1, f2 FROM test t left join test_table tt on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "zero", "F2": 0}, "timestamp": 0},
        {"topic": "test_table", "key": "10", "value": {"ID": 10, "F1": "100", "F2": 5}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "blah", "VALUE": 50}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 10000},
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 15000},
        {"topic": "test_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 15000}
      ],
      "outputs": [
        {"topic": "LEFT_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "blah", "VALUE": 50, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "LEFT_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "LEFT_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "LEFT_JOIN", "key": "90", "value": {"TT_ID": null, "NAME": "ninety", "VALUE": 90, "F1": null, "F2": null}, "timestamp": 15000}
      ],
      "post": {
        "comments": [
          "key field is null because field 'TT_ID' does not always match the key of the output record due to it being an outer join"
        ],
        "sources": [
          {"name": "LEFT_JOIN", "type": "stream", "keyField": null}
        ]
      }
    },
    {
      "name": "stream table inner join",
      "format": ["AVRO", "JSON"],
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='test_topic', value_format='{FORMAT}', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='test_table', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM INNER_JOIN as SELECT t.id, name, value, f1, f2 FROM test t join test_table tt on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "zero", "F2": 0}, "timestamp": 0},
        {"topic": "test_table", "key": "10", "value": {"ID": 10, "F1": "100", "F2": 5}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "blah", "VALUE": 50}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 10000},
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 15000},
        {"topic": "test_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 15000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "blah", "VALUE": 50, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 15000}
      ],
      "post": {
        "sources": [
          {"name": "INNER_JOIN", "type": "stream", "keyField": "T_ID"}
        ]
      }
    },
    {
      "name": "stream table inner join - join key not in projection",
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='test_topic', value_format='JSON', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='test_table', value_format='JSON', key='ID');",
        "CREATE STREAM INNER_JOIN as SELECT name, value, f1, f2 FROM test t join test_table tt on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "zero", "F2": 0}, "timestamp": 0},
        {"topic": "test_table", "key": "10", "value": {"ID": 10, "F1": "100", "F2": 5}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "blah", "VALUE": 50}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 10000},
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 15000},
        {"topic": "test_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 15000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"NAME": "blah", "VALUE": 50, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"NAME": "foo", "VALUE": 100, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 15000}
      ],
      "post": {
        "sources": [
          {"name": "INNER_JOIN", "type": "stream", "keyField": null}
        ]
      }
    },
    {
      "name": "stream table inner join - right join key in projection",
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='test_topic', value_format='JSON', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='test_table', value_format='JSON', key='ID');",
        "CREATE STREAM INNER_JOIN as SELECT tt.id, name, value, f1, f2 FROM test t join test_table tt on t.id = tt.id;"
      ],
      "inputs": [
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "zero", "F2": 0}, "timestamp": 0},
        {"topic": "test_table", "key": "10", "value": {"ID": 10, "F1": "100", "F2": 5}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "blah", "VALUE": 50}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 10000},
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 15000},
        {"topic": "test_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 15000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "blah", "VALUE": 50, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 15000}
      ],
      "post": {
        "issues": [
          "key field has incorrect name - should be TT_ID as right join key always matches record key. See https://github.com/confluentinc/ksql/issues/2741."
        ],
        "sources": [
          {"name": "INNER_JOIN", "type": "stream", "keyField": null}
        ]
      }
    },
    {
      "name": "join using ROWKEY in the criteria",
      "format": ["AVRO", "JSON"],
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='test_topic', value_format='{FORMAT}', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='test_table', value_format='{FORMAT}', key='ID');",
        "CREATE STREAM INNER_JOIN as SELECT t.id, name, value, f1, f2 FROM test t join test_table tt on t.ROWKEY = tt.ROWKEY;"
      ],
      "inputs": [
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "zero", "F2": 0}, "timestamp": 0},
        {"topic": "test_table", "key": "10", "value": {"ID": 10, "F1": "100", "F2": 5}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "blah", "VALUE": 50}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 10000},
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 15000},
        {"topic": "test_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 15000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "blah", "VALUE": 50, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 15000}
      ],
      "post": {
        "sources": [
          {"name": "INNER_JOIN", "type": "stream", "keyField": "T_ID"}
        ]
      }
    },
    {
      "name": "join using ROWKEY in the criteria - no source key fields",
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST_STREAM (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT t.id, name, value, f1, f2 FROM test t left join TEST_STREAM tt WITHIN 11 seconds ON t.rowkey = tt.rowkey;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"ID": 10, "NAME": "100", "VALUE": 5}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "right_topic", "key": "100", "value": {"ID": 100, "F1": "newblah", "F2": 150}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 30000}
      ],
      "outputs": [
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "zero", "VALUE": 0, "F1": null, "F2": null}, "timestamp": 0},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "zero", "VALUE": 0, "F1": "blah", "F2": 50}, "timestamp": 10000},
        {"topic": "LEFT_OUTER_JOIN", "key": "10", "value": {"T_ID": 10, "NAME": "100", "VALUE": 5, "F1": null, "F2": null}, "timestamp": 11000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "blah", "F2": 50}, "timestamp": 13000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "LEFT_OUTER_JOIN", "key": "90", "value": {"T_ID": 90, "NAME": "ninety", "VALUE": 90, "F1": null, "F2": null}, "timestamp": 17000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "bar", "VALUE": 99, "F1": null, "F2": null}, "timestamp": 30000}
      ],
      "post": {
        "sources": [
          {"name": "LEFT_OUTER_JOIN", "type": "stream", "keyField": null}
        ]
      }
    },
    {
      "name": "join using ROWKEY in the criteria - join key not in projection",
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='test_topic', value_format='JSON', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='test_table', value_format='JSON', key='ID');",
        "CREATE STREAM INNER_JOIN as SELECT name, value, f1, f2 FROM test t join test_table tt on t.ROWKEY = tt.ROWKEY;"
      ],
      "inputs": [
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "zero", "F2": 0}, "timestamp": 0},
        {"topic": "test_table", "key": "10", "value": {"ID": 10, "F1": "100", "F2": 5}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "blah", "VALUE": 50}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 10000},
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 15000},
        {"topic": "test_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 15000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"NAME": "blah", "VALUE": 50, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"NAME": "foo", "VALUE": 100, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 15000}
      ],
      "post": {
        "sources": [
          {"name": "INNER_JOIN", "type": "stream", "keyField": null}
        ]
      }
    },
    {
      "name": "join using ROWKEY in the criteria - right join key in projection",
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='test_topic', value_format='JSON', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='test_table', value_format='JSON', key='ID');",
        "CREATE STREAM INNER_JOIN as SELECT tt.id, name, value, f1, f2 FROM test t join test_table tt on t.ROWKEY = tt.ROWKEY;"
      ],
      "inputs": [
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "zero", "F2": 0}, "timestamp": 0},
        {"topic": "test_table", "key": "10", "value": {"ID": 10, "F1": "100", "F2": 5}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "blah", "VALUE": 50}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 10000},
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 15000},
        {"topic": "test_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 15000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "blah", "VALUE": 50, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "foo", "VALUE": 100, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"TT_ID": 0, "NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 15000}
      ],
      "post": {
        "issues": [
          "key field has incorrect name - should be TT_ID as right join key always matches record key. See https://github.com/confluentinc/ksql/issues/2741."
        ],
        "sources": [
          {"name": "INNER_JOIN", "type": "stream", "keyField": null}
        ]
      }
    },
    {
      "name": "join using ROWKEY in the criteria - left rowkey in projection",
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='test_topic', value_format='JSON', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='test_table', value_format='JSON', key='ID');",
        "CREATE STREAM INNER_JOIN as SELECT t.rowkey AS ID, name, value, f1, f2 FROM test t join test_table tt on t.ROWKEY = tt.ROWKEY;"
      ],
      "inputs": [
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "zero", "F2": 0}, "timestamp": 0},
        {"topic": "test_table", "key": "10", "value": {"ID": 10, "F1": "100", "F2": 5}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "blah", "VALUE": 50}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 10000},
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 15000},
        {"topic": "test_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 15000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"ID": "0", "NAME": "blah", "VALUE": 50, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"ID": "0", "NAME": "foo", "VALUE": 100, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"ID": "0", "NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 15000}
      ],
      "post": {
        "issues": [
          "key field has incorrect name - should be ID. See https://github.com/confluentinc/ksql/issues/2743."
        ],
        "sources": [
          {"name": "INNER_JOIN", "type": "stream", "keyField": null}
        ]
      }
    },
    {
      "name": "join using ROWKEY in the criteria - right rowkey in projection",
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='test_topic', value_format='JSON', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='test_table', value_format='JSON', key='ID');",
        "CREATE STREAM INNER_JOIN as SELECT tt.rowkey AS ID, name, value, f1, f2 FROM test t join test_table tt on t.ROWKEY = tt.ROWKEY;"
      ],
      "inputs": [
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "zero", "F2": 0}, "timestamp": 0},
        {"topic": "test_table", "key": "10", "value": {"ID": 10, "F1": "100", "F2": 5}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "blah", "VALUE": 50}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 10000},
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 15000},
        {"topic": "test_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 15000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"ID": "0", "NAME": "blah", "VALUE": 50, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"ID": "0", "NAME": "foo", "VALUE": 100, "F1": "zero", "F2": 0}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"ID": "0", "NAME": "bar", "VALUE": 99, "F1": "a", "F2": 10}, "timestamp": 15000}
      ],
      "post": {
        "issues": [
          "key field has incorrect name - should be ID as right rowkey always matches record key. See https://github.com/confluentinc/ksql/issues/2741."
        ],
        "sources": [
          {"name": "INNER_JOIN", "type": "stream", "keyField": null}
        ]
      }
    },
    {
      "name": "multiple join keys in projection",
      "statements": [
        "CREATE STREAM TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='test_topic', value_format='JSON', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='test_table', value_format='JSON', key='ID');",
        "CREATE STREAM INNER_JOIN as SELECT t.ID AS ID1, t.ID AS ID2, t.rowkey AS ID3, tt.ID AS ID4, tt.ROWKEY AS ID5 FROM test t join test_table tt on t.ROWKEY = tt.ROWKEY;"
      ],
      "inputs": [
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "zero", "F2": 0}, "timestamp": 0},
        {"topic": "test_table", "key": "10", "value": {"ID": 10, "F1": "100", "F2": 5}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "blah", "VALUE": 50}, "timestamp": 10000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 10000},
        {"topic": "test_table", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "test_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 15000},
        {"topic": "test_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 15000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"ID1": 0, "ID2": 0, "ID3": "0", "ID4": 0, "ID5": "0"}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"ID1": 0, "ID2": 0, "ID3": "0", "ID4": 0, "ID5": "0"}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "0", "value": {"ID1": 0, "ID2": 0, "ID3": "0", "ID4": 0, "ID5": "0"}, "timestamp": 15000}
      ],
      "post": {
        "issues": [
          "There are multiple copies of the key field in the projection.",
          "KSQL should avoid unnecessary repartition steps when GROUPing BY or PARTITIONing BY or JOINing on _any_ of them.",
          "see: https://github.com/confluentinc/ksql/issues/2742"
        ],
        "sources": [
          {"name": "INNER_JOIN", "type": "stream", "keyField": "ID1"}
        ]
      }
    },
    {
      "name": "table join pipeline",
      "format": ["JSON"],
      "statements": [
        "CREATE TABLE TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='{FORMAT}', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='{FORMAT}', key='ID');",
        "CREATE TABLE TEST_TABLE_2 (ID bigint, F3 varchar) WITH (kafka_topic='right_topic_2', value_format='{FORMAT}', key='ID');",
        "CREATE TABLE INNER_JOIN WITH (PARTITIONS=4) as SELECT t.id, name, value, f1, f2 FROM test t join TEST_TABLE tt on t.id = tt.id;",
        "CREATE TABLE INNER_JOIN_2 AS SELECT t_id, name, f1, f3 FROM inner_join tt join TEST_TABLE_2 t ON t.id = tt.t_id;"
      ],
      "topics": [
        {
          "name": "INNER_JOIN",
          "format": "JSON",
          "partitions": 4
        }
      ],
      "inputs": [
        {"topic": "INNER_JOIN", "key": "0", "value": {"T_ID": 0, "NAME": "X", "VALUE": 0, "F1": "yo dawg", "F2": 50}, "timestamp": 0},
        {"topic": "right_topic_2", "key": "0", "value": {"ID": 0, "F3": "I heard you like joins"}, "timestamp": 10000},
        {"topic": "INNER_JOIN", "key": "100", "value": {"T_ID": 100, "NAME": "X", "VALUE": 0, "F1": "KSQL has table-table joins", "F2": 50}, "timestamp": 15000},
        {"topic": "right_topic_2", "key": "100", "value": {"ID": 100, "F3": "so now you can join your join"}, "timestamp": 20000}
      ],
      "outputs": [
        {"topic": "INNER_JOIN_2", "key": "0", "value": {"T_ID": 0, "NAME": "X", "F1": "yo dawg", "F3": "I heard you like joins"}, "timestamp": 10000},
        {"topic": "INNER_JOIN_2", "key": "100", "value": {"T_ID": 100, "NAME": "X", "F1": "KSQL has table-table joins", "F3": "so now you can join your join"}, "timestamp": 20000}
      ]
    },
    {
      "name": "table table join with where clause",
      "statements": [
        "CREATE TABLE TEST (ID bigint, NAME varchar, VALUE bigint) WITH (kafka_topic='left_topic', value_format='JSON', key='ID');",
        "CREATE TABLE TEST_TABLE (ID bigint, F1 varchar, F2 bigint) WITH (kafka_topic='right_topic', value_format='JSON', key='ID');",
        "CREATE TABLE OUTPUT as SELECT t.id, name, tt.f1, f2 FROM test t JOIN test_table tt ON t.id = tt.id WHERE t.value > 10 AND tt.f2 > 5;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "zero", "VALUE": 0}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "blah", "F2": 4}, "timestamp": 10000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "foo", "VALUE": 100}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"ID": 0, "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "left_topic", "key": "0", "value": {"ID": 0, "NAME": "bar", "VALUE": 99}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"ID": 90, "NAME": "ninety", "VALUE": 90}, "timestamp": 17000},
        {"topic": "right_topic", "key": "90", "value": {"ID": 0, "F1": "b", "F2": 10}, "timestamp": 18000},
        {"topic": "right_topic", "key": "90", "value": null, "timestamp": 19000}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": null, "timestamp": 10000},
        {"topic": "OUTPUT", "key": "0", "value": null, "timestamp": 13000},
        {"topic": "OUTPUT", "key": "0", "value": {"T_ID": 0, "NAME": "foo", "F1": "a", "F2": 10}, "timestamp": 15000},
        {"topic": "OUTPUT", "key": "0", "value": {"T_ID": 0, "NAME": "bar", "F1": "a", "F2": 10}, "timestamp": 16000},
        {"topic": "OUTPUT", "key": "90", "value": {"T_ID": 90, "NAME": "ninety", "F1": "b", "F2": 10}, "timestamp": 18000},
        {"topic": "OUTPUT", "key": "90", "value": null, "timestamp": 19000}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "table", "keyField": "T_ID"}
        ]
      }
    },
    {
      "name": "to table using something other than ROWKEY",
      "statements": [
        "CREATE STREAM S (ID bigint) WITH (kafka_topic='S', value_format='JSON');",
        "CREATE TABLE NO_KEY (ID bigint, NAME string) WITH (kafka_topic='NO_KEY', value_format='JSON');",
        "CREATE STREAM OUTPUT as SELECT s.id, name FROM S JOIN NO_KEY t ON s.id = t.id;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Source table (T) has no key column defined. Only 'ROWKEY' is supported in the join criteria."
      }
    },
    {
      "name": "stream to table when neither have key field and joining by table ROWKEY",
      "statements": [
        "CREATE STREAM S (ID bigint) WITH (kafka_topic='S', value_format='JSON');",
        "CREATE TABLE NO_KEY (ID bigint, NAME string) WITH (kafka_topic='NO_KEY', value_format='JSON');",
        "CREATE STREAM OUTPUT as SELECT s.id, name FROM S JOIN NO_KEY t ON s.id = t.ROWKEY;"
      ],
      "inputs": [
        {"topic": "NO_KEY", "key": "0", "value": {"ID": 0, "name": "bob"}, "timestamp": 0},
        {"topic": "S", "key": "0", "value": {"ID": 0}, "timestamp": 10}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"S_ID": 0, "NAME": "bob"}, "timestamp": 10}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "keyField": "S_ID"}
        ]
      }
    },
    {
      "name": "stream to table when table does not have key field and joining by table ROWKEY",
      "statements": [
        "CREATE STREAM S (ID bigint) WITH (kafka_topic='S', value_format='JSON', key='ID');",
        "CREATE TABLE NO_KEY (ID bigint, NAME string) WITH (kafka_topic='NO_KEY', value_format='JSON');",
        "CREATE STREAM OUTPUT as SELECT s.id, name FROM S JOIN NO_KEY t ON s.id = t.ROWKEY;"
      ],
      "inputs": [
        {"topic": "NO_KEY", "key": "0", "value": {"ID": 0, "name": "bob"}, "timestamp": 0},
        {"topic": "S", "key": "0", "value": {"ID": 0}, "timestamp": 10}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"S_ID": 0, "NAME": "bob"}, "timestamp": 10}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "keyField": "S_ID"}
        ]
      }
    },
    {
      "name": "stream to stream wrapped single field value schema on inputs",
      "statements": [
        "CREATE STREAM S1 (ID bigint) WITH (kafka_topic='S1', value_format='JSON');",
        "CREATE STREAM S2 (ID bigint) WITH (kafka_topic='S2', value_format='JSON');",
        "CREATE STREAM OUTPUT as SELECT s1.id id1, s2.id id2 FROM S1 JOIN S2 WITHIN 1 second ON s1.ROWKEY = s2.ROWKEY;"
      ],
      "inputs": [
        {"topic": "S1", "key": "0", "value": {"ID": 1}, "timestamp": 0},
        {"topic": "S2", "key": "0", "value": {"ID": 2}, "timestamp": 10},
        {"topic": "S1", "key": "0", "value": {"ID": null}, "timestamp": 20},
        {"topic": "S2", "key": "0", "value": {"ID": null}, "timestamp": 30}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"ID1": 1, "ID2": 2}, "timestamp": 10},
        {"topic": "OUTPUT", "key": "0", "value": {"ID1": null, "ID2": 2}, "timestamp": 20},
        {"topic": "OUTPUT", "key": "0", "value": {"ID1": 1, "ID2": null}, "timestamp": 30},
        {"topic": "OUTPUT", "key": "0", "value": {"ID1": null, "ID2": null}, "timestamp": 30}
      ]
    },
    {
      "name": "stream to stream unwrapped single field value schema on inputs",
      "issues": [
        "With the current implementation the null values are ignored by KS.",
        "This is probably not what we want. We could treat null values as a null ID for streams.",
        "Though this would not make sense for tables, where null is a tombstone"
      ],
      "statements": [
        "CREATE STREAM S1 (ID bigint) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='S1', value_format='JSON');",
        "CREATE STREAM S2 (ID bigint) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='S2', value_format='JSON');",
        "CREATE STREAM OUTPUT as SELECT s1.id id1, s2.id id2 FROM S1 JOIN S2 WITHIN 1 second ON s1.ROWKEY = s2.ROWKEY;"
      ],
      "inputs": [
        {"topic": "S1", "key": "0", "value": 1, "timestamp": 0},
        {"topic": "S2", "key": "0", "value": 2, "timestamp": 10},
        {"topic": "S1", "key": "0", "value": null, "timestamp": 20},
        {"topic": "S2", "key": "0", "value": null, "timestamp": 30}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"ID1": 1, "ID2": 2}, "timestamp": 10}
      ]
    },
    {
      "name": "stream to stream unwrapped single field value schema on inputs and output",
      "issues": [
        "With the current implementation the null values are ignored by KS.",
        "This is probably not what we want. We could treat null values as a null ID for streams.",
        "Though this would not make sense for tables, where null is a tombstone"
      ],
      "statements": [
        "CREATE STREAM S1 (ID bigint) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='S1', value_format='JSON');",
        "CREATE STREAM S2 (ID bigint) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='S2', value_format='JSON');",
        "CREATE STREAM OUTPUT WITH (WRAP_SINGLE_VALUE=false) AS SELECT s1.id id FROM S1 JOIN S2 WITHIN 1 second ON s1.ROWKEY = s2.ROWKEY;"
      ],
      "inputs": [
        {"topic": "S1", "key": "0", "value": 1, "timestamp": 0},
        {"topic": "S2", "key": "0", "value": 2, "timestamp": 10},
        {"topic": "S1", "key": "0", "value": null, "timestamp": 20},
        {"topic": "S2", "key": "0", "value": null, "timestamp": 30}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": 1, "timestamp": 10}
      ]
    },
    {
      "name": "stream to table wrapped single field value schema on inputs",
      "statements": [
        "CREATE STREAM S (ID bigint) WITH (kafka_topic='S', value_format='JSON');",
        "CREATE TABLE T (ID bigint) WITH (kafka_topic='T', value_format='JSON');",
        "CREATE STREAM OUTPUT as SELECT s.id id1, t.id id2 FROM S JOIN T ON S.ROWKEY = T.ROWKEY;"
      ],
      "inputs": [
        {"topic": "T", "key": "0", "value": {"ID": 2}, "timestamp": 0},
        {"topic": "S", "key": "0", "value": {"ID": 1}, "timestamp": 10},
        {"topic": "S", "key": "0", "value": {"ID": null}, "timestamp": 20},
        {"topic": "T", "key": "0", "value": {"ID": null}, "timestamp": 30},
        {"topic": "S", "key": "0", "value": {"ID": null}, "timestamp": 40},
        {"topic": "T", "key": "0", "value": null, "timestamp": 50},
        {"topic": "S", "key": "0", "value": {"ID": 1}, "timestamp": 60}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"ID1": 1, "ID2": 2}, "timestamp": 10},
        {"topic": "OUTPUT", "key": "0", "value": {"ID1": null, "ID2": 2}, "timestamp": 20},
        {"topic": "OUTPUT", "key": "0", "value": {"ID1": null, "ID2": null}, "timestamp": 40}
      ]
    },
    {
      "name": "stream to table unwrapped single field value schema on inputs",
      "issues": [
        "With the current implementation the null values of the stream are ignored by KS.",
        "This is probably not what we want. We could treat null values as a null ID for streams.",
        "Though this would not make sense for tables, where null is a tombstone"
      ],
      "statements": [
        "CREATE STREAM S (ID bigint) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='S', value_format='JSON');",
        "CREATE TABLE T (ID bigint) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='T', value_format='JSON');",
        "CREATE STREAM OUTPUT as SELECT s.id id1, t.id id2 FROM S JOIN T ON S.ROWKEY = T.ROWKEY;"
      ],
      "inputs": [
        {"topic": "T", "key": "0", "value": 2, "timestamp": 0},
        {"topic": "S", "key": "0", "value": 1, "timestamp": 10},
        {"topic": "S", "key": "0", "value": null, "timestamp": 20},
        {"topic": "T", "key": "0", "value": null, "timestamp": 30},
        {"topic": "S", "key": "0", "value": null, "timestamp": 40}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"ID1": 1, "ID2": 2}, "timestamp": 10}
      ]
    },
    {
      "name": "stream to table unwrapped single field value schema on inputs and output",
      "issues": [
        "With the current implementation the null values of the stream are ignored by KS.",
        "This is probably not what we want. We could treat null values as a null ID for streams.",
        "Though this would not make sense for tables, where null is a tombstone."
      ],
      "statements": [
        "CREATE STREAM S (ID bigint) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='S', value_format='JSON');",
        "CREATE TABLE T (ID bigint) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='T', value_format='JSON');",
        "CREATE STREAM OUTPUT WITH (WRAP_SINGLE_VALUE=false) AS SELECT s.id id FROM S JOIN T ON S.ROWKEY = T.ROWKEY;"
      ],
      "inputs": [
        {"topic": "T", "key": "0", "value": 2, "timestamp": 0},
        {"topic": "S", "key": "0", "value": 1, "timestamp": 10},
        {"topic": "S", "key": "0", "value": null, "timestamp": 20},
        {"topic": "T", "key": "0", "value": null, "timestamp": 30},
        {"topic": "S", "key": "0", "value": null, "timestamp": 40}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": 1, "timestamp": 10}
      ]
    },
    {
      "name": "table to table wrapped single field value schema on inputs",
      "statements": [
        "CREATE TABLE T1 (ID bigint) WITH (kafka_topic='T1', value_format='JSON');",
        "CREATE TABLE T2 (ID bigint) WITH (kafka_topic='T2', value_format='JSON');",
        "CREATE TABLE OUTPUT as SELECT t1.id id1, t2.id id2 FROM T1 JOIN T2 ON T1.ROWKEY = T2.ROWKEY;"
      ],
      "inputs": [
        {"topic": "T1", "key": "0", "value": {"ID": 1}, "timestamp": 0},
        {"topic": "T2", "key": "0", "value": {"ID": 2}, "timestamp": 10},
        {"topic": "T1", "key": "0", "value": {"ID": null}, "timestamp": 20},
        {"topic": "T2", "key": "0", "value": {"ID": null}, "timestamp": 30},
        {"topic": "T1", "key": "0", "value": {"ID": null}, "timestamp": 40},
        {"topic": "T1", "key": "0", "value": null, "timestamp": 50},
        {"topic": "T2", "key": "0", "value": null, "timestamp": 60}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"ID1": 1, "ID2": 2}, "timestamp": 10},
        {"topic": "OUTPUT", "key": "0", "value": {"ID1": null, "ID2": 2}, "timestamp": 20},
        {"topic": "OUTPUT", "key": "0", "value": {"ID1": null, "ID2": null}, "timestamp": 30},
        {"topic": "OUTPUT", "key": "0", "value": {"ID1": null, "ID2": null}, "timestamp": 40},
        {"topic": "OUTPUT", "key": "0", "value": null, "timestamp": 50}
      ]
    },
    {
      "name": "table to table unwrapped single field value schema on inputs",
      "statements": [
        "CREATE TABLE T1 (ID bigint) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='T1', value_format='JSON');",
        "CREATE TABLE T2 (ID bigint) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='T2', value_format='JSON');",
        "CREATE TABLE OUTPUT as SELECT t1.id id1, t2.id id2 FROM T1 JOIN T2 ON T1.ROWKEY = T2.ROWKEY;"
      ],
      "inputs": [
        {"topic": "T1", "key": "0", "value": 1, "timestamp": 0},
        {"topic": "T2", "key": "0", "value": 2, "timestamp": 10},
        {"topic": "T1", "key": "0", "value": null, "timestamp": 20},
        {"topic": "T2", "key": "0", "value": null, "timestamp": 30},
        {"topic": "T1", "key": "0", "value": null, "timestamp": 40}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"ID1": 1, "ID2": 2}, "timestamp": 10},
        {"topic": "OUTPUT", "key": "0", "value": null, "timestamp": 20}
      ]
    },
    {
      "name": "table to table unwrapped single field value schema on inputs and output",
      "statements": [
        "CREATE TABLE T1 (ID bigint) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='T1', value_format='JSON');",
        "CREATE TABLE T2 (ID bigint) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='T2', value_format='JSON');",
        "CREATE TABLE OUTPUT WITH (WRAP_SINGLE_VALUE=false) AS SELECT t1.id id FROM T1 JOIN T2 ON T1.ROWKEY = T2.ROWKEY;"
      ],
      "inputs": [
        {"topic": "T1", "key": "0", "value": 1, "timestamp": 0},
        {"topic": "T2", "key": "0", "value": 2, "timestamp": 10},
        {"topic": "T1", "key": "0", "value": null, "timestamp": 20},
        {"topic": "T2", "key": "0", "value": null, "timestamp": 30},
        {"topic": "T1", "key": "0", "value": null, "timestamp": 40}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": 1, "timestamp": 10},
        {"topic": "OUTPUT", "key": "0", "value": null, "timestamp": 20}
      ]
    },
    {
      "name": "stream stream left join - invalid join field - contains literal",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON t.id = 0;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid comparison expression '0' in join '(T.ID = 0)'. Joins must only contain a field comparison."
      }
    },
    {
      "name": "stream stream left join - invalid join field on lhs- contains literal",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON 0 = t.id;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid comparison expression '0' in join '(0 = T.ID)'. Joins must only contain a field comparison."
      }
    },
    {
      "name": "stream stream left join - invalid join field - contains function",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON t.id = test_udf(tt.id);"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid comparison expression 'TEST_UDF(TT.ID)' in join '(T.ID = TEST_UDF(TT.ID))'. Joins must only contain a field comparison."
      }
    },
    {
      "name": "stream stream left join - invalid join field - contains CAST",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON t.id = CAST(tt.id AS BIGINT);"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid comparison expression 'CAST(TT.ID AS BIGINT)' in join '(T.ID = CAST(TT.ID AS BIGINT))'. Joins must only contain a field comparison."
      }
    },
    {
      "name": "stream stream left join - invalid join field - contains subscript",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON t.id = tt.id[0];"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid comparison expression 'TT.ID[0]' in join '(T.ID = TT.ID[0])'. Joins must only contain a field comparison."
      }
    },
    {
      "name": "stream stream left join - invalid join field - contains subexpression",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON t.id = (tt.id = 0);"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid comparison expression '(TT.ID = 0)' in join '(T.ID = (TT.ID = 0))'. Joins must only contain a field comparison."
      }
    },
    {
      "name": "stream stream left join - invalid join field - contains arithmetic binary expression",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON t.id = tt.id + 1;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid comparison expression '(TT.ID + 1)' in join '(T.ID = (TT.ID + 1))'. Joins must only contain a field comparison."
      }
    },
    {
      "name": "stream stream left join - invalid join field - contains IS NULL expression",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON t.id = (tt.id IS NULL);"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid comparison expression '(TT.ID IS NULL)' in join '(T.ID = (TT.ID IS NULL))'. Joins must only contain a field comparison."
      }
    },
    {
      "name": "stream stream left join - invalid join field - contains IS NOT NULL expression",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON t.id = (tt.id IS NOT NULL);"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid comparison expression '(TT.ID IS NOT NULL)' in join '(T.ID = (TT.ID IS NOT NULL))'. Joins must only contain a field comparison."
      }
    },
    {
      "name": "stream stream left join - invalid join field - contains logical binary expression",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON t.id = (tt.id AND tt.f1);"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid comparison expression '(TT.ID AND TT.F1)' in join '(T.ID = (TT.ID AND TT.F1))'. Joins must only contain a field comparison."
      }
    },
    {
      "name": "stream stream left join - invalid join field - contains not expression",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON t.id = (NOT tt.id);"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid comparison expression '(NOT TT.ID)' in join '(T.ID = (NOT TT.ID))'. Joins must only contain a field comparison."
      }
    },
    {
      "name": "stream stream left join - invalid join field - contains arithmetic unary expression",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON t.id = -tt.id;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid comparison expression '-TT.ID' in join '(T.ID = -TT.ID)'. Joins must only contain a field comparison."
      }
    },
    {
      "name": "stream stream left join - invalid join field - contains LIKE expression",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON t.id = (tt.id LIKE '%x');"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid comparison expression '(TT.ID LIKE '%x')' in join '(T.ID = (TT.ID LIKE '%x'))'. Joins must only contain a field comparison."
      }
    },
    {
      "name": "stream stream left join - invalid join field - contains CASE expression",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON t.id = (CASE WHEN 1 THEN 2 END);"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid comparison expression '(CASE WHEN 1 THEN 2 END)' in join '(T.ID = (CASE WHEN 1 THEN 2 END))'. Joins must only contain a field comparison."
      }
    },
    {
      "name": "stream stream left join - invalid join field - contains IN expression",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON t.id = (tt.id IN (1, 2, 3));"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid comparison expression '(TT.ID IN (1, 2, 3))' in join '(T.ID = (TT.ID IN (1, 2, 3)))'. Joins must only contain a field comparison."
      }
    },
    {
      "name": "stream stream left join - invalid join field - contains BETWEEN expression",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON t.id = (tt.id BETWEEN 1 AND 3);"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid comparison expression '(TT.ID BETWEEN 1 AND 3)' in join '(T.ID = (TT.ID BETWEEN 1 AND 3))'. Joins must only contain a field comparison."
      }
    },
    {
      "name": "stream stream left join - invalid left join expression - field does not exist",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON t.iid= tt.id;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid join criteria (T.IID = TT.ID). Column T.IID does not exist."
      }
    },
    {
      "name": "stream stream left join - invalid right join expression - field does not exist",
      "statements": [
        "CREATE STREAM TEST1 (ID bigint) WITH (kafka_topic='left_topic', value_format='JSON');",
        "CREATE STREAM TEST2 (ID bigint) WITH (kafka_topic='right_topic', value_format='JSON');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT * FROM test1 t left join test2 tt ON t.id= tt.iid;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid join criteria (T.ID = TT.IID). Column TT.IID does not exist."
      }
    },
    {
      "name": "unqualified join criteria",
      "statements": [
        "CREATE STREAM TEST (LEFT_ID bigint, NAME varchar) WITH (kafka_topic='left_topic', value_format='JSON', key='LEFT_ID');",
        "CREATE STREAM TEST_STREAM (RIGHT_ID bigint, F1 varchar) WITH (kafka_topic='right_topic', value_format='JSON', key='RIGHT_ID');",
        "CREATE STREAM LEFT_OUTER_JOIN as SELECT t.left_id, name, f1 FROM test t left join TEST_STREAM tt WITHIN 11 seconds ON left_id = right_id;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": "0", "value": {"LEFT_ID": 0, "NAME": "zero"}, "timestamp": 0},
        {"topic": "right_topic", "key": "0", "value": {"RIGHT_ID": 0, "F1": "blah"}, "timestamp": 10000},
        {"topic": "left_topic", "key": "10", "value": {"LEFT_ID": 10, "NAME": "100"}, "timestamp": 11000},
        {"topic": "left_topic", "key": "0", "value": {"LEFT_ID": 0, "NAME": "foo"}, "timestamp": 13000},
        {"topic": "right_topic", "key": "0", "value": {"RIGHT_ID": 0, "F1": "a"}, "timestamp": 15000},
        {"topic": "right_topic", "key": "100", "value": {"RIGHT_ID": 100, "F1": "newblah"}, "timestamp": 16000},
        {"topic": "left_topic", "key": "90", "value": {"LEFT_ID": 90, "NAME": "ninety"}, "timestamp": 17000},
        {"topic": "left_topic", "key": "0", "value": {"LEFT_ID": 0, "NAME": "bar"}, "timestamp": 30000}
      ],
      "outputs": [
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"LEFT_ID": 0, "NAME": "zero", "F1": null}, "timestamp": 0},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"LEFT_ID": 0, "NAME": "zero", "F1": "blah"}, "timestamp": 10000},
        {"topic": "LEFT_OUTER_JOIN", "key": "10", "value": {"LEFT_ID": 10, "NAME": "100", "F1": null}, "timestamp": 11000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"LEFT_ID": 0, "NAME": "foo", "F1": "blah"}, "timestamp": 13000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"LEFT_ID": 0, "NAME": "foo", "F1": "a"}, "timestamp": 15000},
        {"topic": "LEFT_OUTER_JOIN", "key": "90", "value": {"LEFT_ID": 90, "NAME": "ninety", "F1": null}, "timestamp": 17000},
        {"topic": "LEFT_OUTER_JOIN", "key": "0", "value": {"LEFT_ID": 0, "NAME": "bar", "F1": null}, "timestamp": 30000}
      ],
      "post": {
        "sources": [
          {"name": "LEFT_OUTER_JOIN", "type": "stream", "keyField": "LEFT_ID"}
        ]
      }
    }
  ]
}
