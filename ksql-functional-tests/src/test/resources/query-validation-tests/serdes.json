{
  "comments": [
    "Test cases covering the different schemas supported."
  ],
  "tests": [
    {
      "name": "deserialize anonymous primitive - value - DELIMITED",
      "comments": "DELIMITED supports anonymous primitives by default",
      "statements": [
        "CREATE STREAM INPUT (foo INT) WITH (kafka_topic='input_topic', value_format='DELIMITED');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "value": "10"},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": "10"},
        {"topic": "OUTPUT", "value": null}
      ]
    },
    {
      "name": "deserialize anonymous primitive - value",
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE STREAM INPUT (foo INT) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "input_topic",
          "schema": "int",
          "format": "{FORMAT}"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": 10},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": 10}},
        {"topic": "OUTPUT", "value": null}
      ]
    },
    {
      "name": "deserialize anonymous primitive - value - with coercion",
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE STREAM INPUT (foo STRING) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "input_topic",
          "schema": "int",
          "format": "{FORMAT}"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": 10}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": "10"}}
      ]
    },
    {
      "name": "deserialize nested primitive - value",
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE STREAM INPUT (foo INT) WITH (WRAP_SINGLE_VALUE=true, kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "input_topic",
          "schema": {"name": "ignored", "type": "record", "fields": [{"name": "FOO", "type": "int"}]},
          "format": "{FORMAT}"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": 10}},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": 10}},
        {"topic": "OUTPUT", "value": null}
      ]
    },
    {
      "name": "deserialize anonymous array - value - DELIMITED",
      "statements": [
        "CREATE STREAM INPUT (foo ARRAY<STRING>) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='input_topic', value_format='DELIMITED');"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "'WRAP_SINGLE_VALUE' can not be used with format 'DELIMITED' as it does not support wrapping"
      }
    },
    {
      "name": "deserialize anonymous array - value",
      "comments": [
        "see github issue https://github.com/confluentinc/ksql/issues/1351"
      ],
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE STREAM INPUT (foo ARRAY<STRING>) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "input_topic",
          "schema": {"type": "array", "items": ["null", "string"]},
          "format": "{FORMAT}"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": ["a", "b", "c"]},
        {"topic": "input_topic", "value": ["a", "b", null]},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": ["a", "b", "c"]}},
        {"topic": "OUTPUT", "value": {"FOO": ["a", "b", null]}},
        {"topic": "OUTPUT", "value": null}
      ]
    },
    {
      "name": "deserialize anonymous array - value - with coercion",
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE STREAM INPUT (foo ARRAY<STRING>) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "input_topic",
          "schema": {"type": "array", "items": ["null", "string"]},
          "format": "{FORMAT}"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": [1, 2, 3]}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": ["1", "2", "3"]}}
      ]
    },
    {
      "name": "deserialize nested array - value",
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE STREAM INPUT (foo ARRAY<STRING>) WITH (WRAP_SINGLE_VALUE=true, kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "input_topic",
          "schema": {"name": "ignored", "type": "record", "fields": [{"name": "FOO", "type": ["null", {"type":  "array", "items": ["null", "string"]}]}]},
          "format": "{FORMAT}"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": ["a", "b", "c"]}},
        {"topic": "input_topic", "value": {"FOO": ["a", "b", null]}},
        {"topic": "input_topic", "value": {"FOO": null}},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": ["a", "b", "c"]}},
        {"topic": "OUTPUT", "value": {"FOO": ["a", "b", null]}},
        {"topic": "OUTPUT", "value": {"FOO": null}},
        {"topic": "OUTPUT", "value": null}
      ]
    },
    {
      "name": "deserialize anonymous array - value - non-nullable - AVRO",
      "statements": [
        "CREATE STREAM INPUT (foo ARRAY<STRING>) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='input_topic', value_format='AVRO');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "input_topic",
          "schema": {"type": "array", "items": "string"},
          "format": "AVRO"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": ["a", "b", "c"]}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": ["a", "b", "c"]}}
      ]
    },
    {
      "name": "deserialize anonymous map - value - DELIMITED",
      "statements": [
        "CREATE STREAM INPUT (foo MAP<STRING, INT>) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='input_topic', value_format='DELIMITED');"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "'WRAP_SINGLE_VALUE' can not be used with format 'DELIMITED' as it does not support wrapping"
      }
    },
    {
      "name": "deserialize anonymous map - value",
      "statements": [
        "CREATE STREAM INPUT (foo MAP<STRING, INT>) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "format": ["AVRO", "JSON"],
      "topics": [
        {
          "name": "input_topic",
          "schema": {"type": "map", "values": ["null", "int"]},
          "format": "{FORMAT}"
        },
        {
          "name": "OUTPUT",
          "schema": {"type": "record", "name": "ignored", "fields": [{"name": "FOO", "type": ["null",{"type": "map", "values": ["null", "int"]}]}]},
          "format": "{FORMAT}"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"a": 1, "b": 2, "c": 3}},
        {"topic": "input_topic", "value": {"a": 1, "b": 2, "c": null}},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": {"a": 1, "b": 2, "c": 3}}},
        {"topic": "OUTPUT", "value": {"FOO": {"a": 1, "b": 2, "c": null}}},
        {"topic": "OUTPUT", "value": null}
      ],
      "post": {
        "sources": [
          {
            "name": "INPUT",
            "type": "stream",
            "valueSchema": "STRUCT<ROWTIME BIGINT, ROWKEY STRING, FOO MAP<STRING, INT>>"
          }
        ]
      }
    },
    {
      "name": "deserialize anonymous map - value - with coercion - AVRO",
      "statements": [
        "CREATE STREAM INPUT (foo MAP<STRING, STRING>) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='input_topic', value_format='AVRO');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "input_topic",
          "schema": {"type": "map", "values": ["null", "int"]},
          "format": "AVRO"
        },
        {
          "name": "OUTPUT",
          "schema": {"type": "record", "name": "ignored", "fields": [{"name": "FOO", "type": ["null",{"type": "map", "values": ["null", "int"]}]}]},
          "format": "AVRO"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"a": 1, "b": 2, "c": 3}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": {"a": "1", "b": "2", "c": "3"}}}
      ],
      "post": {
        "sources": [
          {
            "name": "INPUT",
            "type": "stream",
            "valueSchema": "STRUCT<ROWTIME BIGINT, ROWKEY STRING, FOO MAP<STRING, STRING>>"
          }
        ]
      }
    },
    {
      "name": "deserialize nested map - value",
      "statements": [
        "CREATE STREAM INPUT (foo MAP<STRING, INT>) WITH (WRAP_SINGLE_VALUE=true, kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "format": ["AVRO", "JSON"],
      "topics": [
        {
          "name": "input_topic",
          "schema": {"name": "ignored", "type": "record", "fields": [{"name": "FOO", "type": ["null",{"type": "map", "values": ["null", "int"]}]}]},
          "format": "{FORMAT}"
        },
        {
          "name": "OUTPUT",
          "schema": {"type": "record", "name": "ignored", "fields": [{"name": "FOO", "type": ["null",{"type": "map", "values": ["null", "int"]}]}]},
          "format": "{FORMAT}"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": {"a": 1, "b": 2, "c": 3}}},
        {"topic": "input_topic", "value": {"FOO": {"a": 1, "b": 2, "c": null}}},
        {"topic": "input_topic", "value": {"FOO": null}},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": {"a": 1, "b": 2, "c": 3}}},
        {"topic": "OUTPUT", "value": {"FOO": {"a": 1, "b": 2, "c": null}}},
        {"topic": "OUTPUT", "value": {"FOO": null}},
        {"topic": "OUTPUT", "value": null}
      ],
      "post": {
        "sources": [
          {
            "name": "INPUT",
            "type": "stream",
            "valueSchema": "STRUCT<ROWTIME BIGINT, ROWKEY STRING, FOO MAP<STRING, INT>>"
          }
        ]
      }
    },
    {
      "name": "deserialize anonymous map - value - non-nullable - AVRO",
      "statements": [
        "CREATE STREAM INPUT (foo MAP<STRING, INT>) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='input_topic', value_format='AVRO');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "input_topic",
          "schema": {"type": "map", "values": "int"},
          "format": "AVRO"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"a": 1, "b": 2, "c": 3}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": {"a": 1, "b": 2, "c": 3}}}
      ],
      "post": {
        "sources": [
          {
            "name": "INPUT",
            "type": "stream",
            "valueSchema": "STRUCT<ROWTIME BIGINT, ROWKEY STRING, FOO MAP<STRING, INT>>"
          }
        ]
      }
    },
    {
      "name": "deserialization should pick up value wrapping from config",
      "statements": [
        "CREATE STREAM INPUT (foo STRING) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT foo, foo as foo2 FROM INPUT;"
      ],
      "properties": {
        "ksql.persistence.wrap.single.values": "false"
      },
      "inputs": [
        {"topic": "input_topic", "value": "bar"}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": "bar", "FOO2": "bar"}}
      ]
    },
    {
      "name": "deserialization should default to wrapped values",
      "statements": [
        "CREATE STREAM INPUT (foo STRING) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
       "inputs": [
        {"topic": "input_topic", "value": {"FOO": "bar"}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": "bar"}}
      ]
    },
    {
      "name": "C* should throw for multi-field schema if WRAP_SINGLE_VALUE=true",
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE STREAM INPUT (f0 STRING, f1 STRING) WITH (WRAP_SINGLE_VALUE=true, kafka_topic='input_topic', value_format='{FORMAT}');"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "'WRAP_SINGLE_VALUE' is only valid for single-field value schemas"
      }
    },
    {
      "name": "C* should throw for multi-field schema if WRAP_SINGLE_VALUE=false",
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE TABLE INPUT (f0 STRING, f1 STRING) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='input_topic', value_format='{FORMAT}');"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "'WRAP_SINGLE_VALUE' is only valid for single-field value schemas"
      }
    },
    {
      "name": "serialize anonymous primitive - value",
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE STREAM INPUT (foo BOOLEAN) WITH (kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE STREAM OUTPUT WITH (WRAP_SINGLE_VALUE=false) AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "OUTPUT",
          "schema": "boolean",
          "format": "{FORMAT}"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": true}},
        {"topic": "input_topic", "value": {"FOO": null}},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": true},
        {"topic": "OUTPUT", "value": null},
        {"topic": "OUTPUT", "value": null}
      ]
    },
    {
      "name": "serialize nested primitive - value",
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE STREAM INPUT (foo BOOLEAN) WITH (kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE STREAM OUTPUT WITH (WRAP_SINGLE_VALUE=true) AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "OUTPUT",
          "schema": {"name": "ignored", "type": "record", "fields": [{"name": "FOO", "type": ["null","boolean"]}]},
          "format": "{FORMAT}"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": true}},
        {"topic": "input_topic", "value": {"FOO": null}},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": true}},
        {"topic": "OUTPUT", "value": {"FOO": null}},
        {"topic": "OUTPUT", "value": null}
      ]
    },
    {
      "name": "serialize anonymous array - value",
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE STREAM INPUT (foo ARRAY<BIGINT>) WITH (kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE STREAM OUTPUT WITH (WRAP_SINGLE_VALUE=false) AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "OUTPUT",
          "schema": {"type": "array", "items": ["null", "long"]},
          "format": "{FORMAT}"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": [12, 34, 999]}},
        {"topic": "input_topic", "value": {"FOO": [12, 34, null]}},
        {"topic": "input_topic", "value": {"FOO": null}},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": [12, 34, 999]},
        {"topic": "OUTPUT", "value": [12, 34, null]},
        {"topic": "OUTPUT", "value": null},
        {"topic": "OUTPUT", "value": null}
      ]
    },
    {
      "name": "serialize nested array - value",
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE STREAM INPUT (foo ARRAY<BIGINT>) WITH (kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE STREAM OUTPUT WITH (WRAP_SINGLE_VALUE=true) AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "OUTPUT",
          "schema": {"name": "ignored", "type": "record", "fields": [{"name": "FOO", "type": ["null",{"type": "array", "items": ["null", "long"]}]}]},
          "format": "{FORMAT}"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": [12, 34, 999]}},
        {"topic": "input_topic", "value": {"FOO": [12, 34, null]}},
        {"topic": "input_topic", "value": {"FOO": null}},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": [12, 34, 999]}},
        {"topic": "OUTPUT", "value": {"FOO": [12, 34, null]}},
        {"topic": "OUTPUT", "value": {"FOO": null}},
        {"topic": "OUTPUT", "value": null}
      ]
    },
    {
      "name": "serialize anonymous map - value",
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE STREAM INPUT (foo MAP<STRING, DOUBLE>) WITH (kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE STREAM OUTPUT WITH (WRAP_SINGLE_VALUE=false) AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "OUTPUT",
          "schema": {"type": "map", "values": ["null", "double"]},
          "format": "{FORMAT}"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": {"a": 1.1, "b": 2.2, "c": 3.456}}},
        {"topic": "input_topic", "value": {"FOO": {"a": 1.1, "b": 2.2, "c": null}}},
        {"topic": "input_topic", "value": {"FOO": null}},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"a": 1.1, "b": 2.2, "c": 3.456}},
        {"topic": "OUTPUT", "value": {"a": 1.1, "b": 2.2, "c": null}},
        {"topic": "OUTPUT", "value": null},
        {"topic": "OUTPUT", "value": null}
      ]
    },
    {
      "name": "serialize nested map - value",
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE STREAM INPUT (foo MAP<STRING, DOUBLE>) WITH (kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE STREAM OUTPUT WITH (WRAP_SINGLE_VALUE=true) AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "OUTPUT",
          "schema": {"name": "ignored", "type": "record", "fields": [{"name": "FOO", "type": ["null",{"type": "map", "values": ["null", "double"]}]}]},
          "format": "{FORMAT}"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": {"a": 1.1, "b": 2.2, "c": 3.456}}},
        {"topic": "input_topic", "value": {"FOO": {"a": 1.1, "b": 2.2, "c": null}}},
        {"topic": "input_topic", "value": {"FOO": null}},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": {"a": 1.1, "b": 2.2, "c": 3.456}}},
        {"topic": "OUTPUT", "value": {"FOO": {"a": 1.1, "b": 2.2, "c": null}}},
        {"topic": "OUTPUT", "value": {"FOO": null}},
        {"topic": "OUTPUT", "value": null}
      ]
    },
    {
      "name": "serialize anonymous struct - value",
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE STREAM INPUT (foo STRUCT<F0 INT>) WITH (kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE STREAM OUTPUT WITH (WRAP_SINGLE_VALUE=false) AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "OUTPUT",
          "schema": {"type": "record", "name": "ignored", "fields": [{"name": "F0", "type": ["null", "int"]}]},
          "format": "{FORMAT}"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": {"F0": 1}}},
        {"topic": "input_topic", "value": {"FOO": {"F0": null}}},
        {"topic": "input_topic", "value": {"FOO": null}},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"F0": 1}},
        {"topic": "OUTPUT", "value": {"F0": null}},
        {"topic": "OUTPUT", "value": null},
        {"topic": "OUTPUT", "value": null}
      ]
    },
    {
      "name": "serialize nested struct - value",
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE STREAM INPUT (foo STRUCT<F0 INT>) WITH (kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE STREAM OUTPUT WITH (WRAP_SINGLE_VALUE=true) AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "OUTPUT",
          "schema": {"name": "ignored", "type": "record", "fields": [
            {"name": "FOO", "type": ["null", {"name": "ignored2", "type": "record", "fields": [{"name": "F0", "type": ["null", "int"]}]}]}
          ]},
          "format": "{FORMAT}"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": {"F0": 1}}},
        {"topic": "input_topic", "value": {"FOO": {"F0": null}}},
        {"topic": "input_topic", "value": {"FOO": null}},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": {"F0": 1}}},
        {"topic": "OUTPUT", "value": {"FOO": {"F0": null}}},
        {"topic": "OUTPUT", "value": {"FOO": null}},
        {"topic": "OUTPUT", "value": null}
      ]
    },
    {
      "name": "serialization should pick up value wrapping from config",
      "statements": [
        "CREATE STREAM INPUT (foo STRING, foo2 STRING) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT foo FROM INPUT;"
      ],
      "properties": {
        "ksql.persistence.wrap.single.values": "false"
      },
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": "bar", "FOO2": "blar"}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": "bar"}
      ]
    },
    {
      "name": "serialization should default to wrapped values",
      "statements": [
        "CREATE STREAM INPUT (foo STRING) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": "bar"}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": "bar"}}
      ]
    },
    {
      "name": "C*AS should throw for multi-field schema if WRAP_SINGLE_VALUE=true",
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE STREAM INPUT (f0 STRING, f1 STRING) WITH (kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE STREAM OUTPUT WITH(WRAP_SINGLE_VALUE=true) AS SELECT * FROM INPUT;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "'WRAP_SINGLE_VALUE' is only valid for single-field value schemas"
      }
    },
    {
      "name": "C*AS should throw for multi-field schema if WRAP_SINGLE_VALUE=false",
      "format": ["JSON", "AVRO"],
      "statements": [
        "CREATE TABLE INPUT (f0 STRING, f1 STRING) WITH (kafka_topic='input_topic', value_format='{FORMAT}');",
        "CREATE TABLE OUTPUT WITH(WRAP_SINGLE_VALUE=true) AS SELECT * FROM INPUT;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "'WRAP_SINGLE_VALUE' is only valid for single-field value schemas"
      }
    }
  ]
}