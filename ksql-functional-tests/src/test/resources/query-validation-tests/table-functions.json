{
  "comments": [
    "Tests applicable to table functions in general - we use EXPLODE here but we could use any table table function"
  ],
  "tests": [
    {
      "name": "table function as last select",
      "statements": [
        "CREATE STREAM TEST (ID BIGINT, MY_ARR ARRAY<BIGINT>) WITH (kafka_topic='test_topic', KEY='ID', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, EXPLODE(MY_ARR) VAL FROM TEST;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "0", "value": {"ID":  0, "MY_ARR": [1, 2]}},
        {"topic": "test_topic", "key": "1", "value": {"ID":  1, "MY_ARR": [3, 4]}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"ID":  0, "VAL": 1}},
        {"topic": "OUTPUT", "key": "0", "value": {"ID":  0, "VAL": 2}},
        {"topic": "OUTPUT", "key": "1", "value": {"ID":  1, "VAL": 3}},
        {"topic": "OUTPUT", "key": "1", "value": {"ID":  1, "VAL": 4}}
      ]
    },
    {
      "name": "table function as first select",
      "statements": [
        "CREATE STREAM TEST (ID BIGINT, MY_ARR ARRAY<BIGINT>) WITH (kafka_topic='test_topic', KEY='ID', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT EXPLODE(MY_ARR) AS VAL, ID FROM TEST;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "0", "value": {"ID":  0, "MY_ARR": [1, 2]}},
        {"topic": "test_topic", "key": "1", "value": {"ID":  1, "MY_ARR": [3, 4]}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"VAL": 1, "ID":  0}},
        {"topic": "OUTPUT", "key": "0", "value": {"VAL": 2, "ID":  0}},
        {"topic": "OUTPUT", "key": "1", "value": {"VAL": 3, "ID":  1}},
        {"topic": "OUTPUT", "key": "1", "value": {"VAL": 4, "ID":  1}}
      ]
    },
    {
      "name": "table function with non selected columns",
      "statements": [
        "CREATE STREAM TEST (FOO BIGINT, ID BIGINT, MY_ARR ARRAY<BIGINT>, BAR BIGINT) WITH (kafka_topic='test_topic', KEY='ID', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT EXPLODE(MY_ARR) AS VAL, ID FROM TEST;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "0", "value": {"ID":  0, "MY_ARR": [1, 2]}},
        {"topic": "test_topic", "key": "1", "value": {"ID":  1, "MY_ARR": [3, 4]}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"VAL": 1, "ID":  0}},
        {"topic": "OUTPUT", "key": "0", "value": {"VAL": 2, "ID":  0}},
        {"topic": "OUTPUT", "key": "1", "value": {"VAL": 3, "ID":  1}},
        {"topic": "OUTPUT", "key": "1", "value": {"VAL": 4, "ID":  1}}
      ]
    },
    {
      "name": "table function with no other selected columns",
      "statements": [
        "CREATE STREAM TEST (FOO BIGINT, ID BIGINT, MY_ARR ARRAY<BIGINT>, BAR BIGINT) WITH (kafka_topic='test_topic', KEY='ID', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT EXPLODE(MY_ARR) AS VAL FROM TEST;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "0", "value": {"ID":  0, "MY_ARR": [1, 2]}},
        {"topic": "test_topic", "key": "1", "value": {"ID":  1, "MY_ARR": [3, 4]}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"VAL": 1}},
        {"topic": "OUTPUT", "key": "0", "value": {"VAL": 2}},
        {"topic": "OUTPUT", "key": "1", "value": {"VAL": 3}},
        {"topic": "OUTPUT", "key": "1", "value": {"VAL": 4}}
      ]
    },
    {
      "name": "table function with no alias",
      "statements": [
        "CREATE STREAM TEST (FOO BIGINT, ID BIGINT, MY_ARR ARRAY<BIGINT>, BAR BIGINT) WITH (kafka_topic='test_topic', KEY='ID', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT EXPLODE(MY_ARR) FROM TEST;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "0", "value": {"ID":  0, "MY_ARR": [1, 2]}},
        {"topic": "test_topic", "key": "1", "value": {"ID":  1, "MY_ARR": [3, 4]}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": 1}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": 2}},
        {"topic": "OUTPUT", "key": "1", "value": {"KSQL_COL_0": 3}},
        {"topic": "OUTPUT", "key": "1", "value": {"KSQL_COL_0": 4}}
      ]
    },
    {
      "name": "table function shouldn't be in FROM clause",
      "statements": [
        "CREATE STREAM TEST (ID BIGINT, MY_ARR ARRAY<BIGINT>) WITH (kafka_topic='test_topic', KEY='ID', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT * FROM EXPLODE(MY_ARR);"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.parser.exception.ParseFailedException"
      }
    },
    {
      "name": "multiple table functions",
      "statements": [
        "CREATE STREAM TEST (MY_ARR1 ARRAY<BIGINT>, MY_ARR2 ARRAY<BIGINT>, BAR BIGINT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT EXPLODE(MY_ARR1), EXPLODE(MY_ARR2) FROM TEST;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "0", "value": {"ID":  0, "MY_ARR1": [1, 2], "MY_ARR2": [10, 11, 12]}},
        {"topic": "test_topic", "key": "1", "value": {"ID":  1, "MY_ARR1": [3, 4], "MY_ARR2": [20]}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": 1, "KSQL_COL_1": 10}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": 2, "KSQL_COL_1": 11}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": null, "KSQL_COL_1": 12}},
        {"topic": "OUTPUT", "key": "1", "value": {"KSQL_COL_0": 3, "KSQL_COL_1": 20}},
        {"topic": "OUTPUT", "key": "1", "value": {"KSQL_COL_0": 4, "KSQL_COL_1": null}}
      ]
    },
    {
      "name": "table functions with complex expressions",
      "statements": [
        "CREATE STREAM TEST (F0 INT, F1 INT, F2 INT, F3 INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT F0, EXPLODE(AS_ARRAY(ABS(F1 + F2), ABS(F2 + F3), ABS(F3 + F1))) FROM TEST;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "0", "value": {"ID":  0, "F0": 1, "F1": 10, "F2": 11, "F3":  12}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"F0": 1, "KSQL_COL_1": 21}},
        {"topic": "OUTPUT", "key": "0", "value": {"F0": 1, "KSQL_COL_1": 23}},
        {"topic": "OUTPUT", "key": "0", "value": {"F0": 1, "KSQL_COL_1": 22}}
      ]
    },
    {
      "name": "test_udtf - simple params",
      "statements": [
        "CREATE STREAM TEST (F0 INT, F1 BIGINT, F2 DOUBLE, F3 BOOLEAN, F4 STRING, F5 DECIMAL(20, 10), F6 STRUCT<A VARCHAR>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT TEST_UDTF(F0, F1, F2, F3, F4, F5, F6) FROM TEST;"
      ],
      "inputs": [
        {
          "topic": "test_topic", "key": "0", "value": {"F0": 1, "F1": 2, "F2": 3.1, "F3": true, "F4": "foo", "F5": 123.456, "F6": {"A": "bar"}}
        }
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "1"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "2"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "3.1"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "true"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "foo"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "123.456"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "Struct{A=bar}"}}
      ]
    },
    {
      "name": "test_udtf - array params",
      "statements": [
        "CREATE STREAM TEST (F0 ARRAY<INT>, F1 ARRAY<BIGINT>, F2 ARRAY<DOUBLE>, F3 ARRAY<BOOLEAN>, F4 ARRAY<STRING>, F5 ARRAY<DECIMAL(20, 10)>, F6 ARRAY<STRUCT<A VARCHAR>>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT TEST_UDTF(F0, F1, F2, F3, F4, F5, F6) FROM TEST;"
      ],
      "inputs": [
        {
          "topic": "test_topic", "key": "0", "value": {"F0": [1], "F1": [2], "F2": [3.1], "F3": [true], "F4": ["foo"], "F5": [123.456], "F6": [{"A": "bar"}]}
        }
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "1"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "2"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "3.1"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "true"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "foo"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "123.456"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "Struct{A=bar}"}}
      ]
    },
    {
      "name": "test_udtf - map params",
      "statements": [
        "CREATE STREAM TEST (F0 MAP<STRING, INT>, F1 MAP<STRING, BIGINT>, F2 MAP<STRING, DOUBLE>, F3 MAP<STRING, BOOLEAN>, F4 MAP<STRING, STRING>, F5 MAP<STRING, DECIMAL(20, 10)>, F6 MAP<STRING, STRUCT<A VARCHAR>>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT TEST_UDTF(F0, F1, F2, F3, F4, F5, F6) FROM TEST;"
      ],
      "inputs": [
        {
          "topic": "test_topic", "key": "0", "value": {"F0": {"k": 1}, "F1": {"k": 2}, "F2": {"k": 3.1}, "F3": {"k": true}, "F4": {"k": "foo"}, "F5": {"k": 123.456}, "F6": {"k": {"A": "bar"}}}
        }
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "1"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "2"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "3.1"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "true"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "foo"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "123.456"}},
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": "Struct{A=bar}"}}
      ]
    },
    {
      "name": "test_udtf - return vals",
      "statements": [
        "CREATE STREAM TEST (F0 INT, F1 BIGINT, F2 DOUBLE, F3 BOOLEAN, F4 STRING, F5 DECIMAL(20, 10), F6 STRUCT<A VARCHAR>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT TEST_UDTF(F0), TEST_UDTF(F1), TEST_UDTF(F2), TEST_UDTF(F3), TEST_UDTF(F4), TEST_UDTF(F5), TEST_UDTF(F6) FROM TEST;"
      ],
      "inputs": [
        {
          "topic": "test_topic", "key": "0", "value": {"F0": 1, "F1": 2, "F2": 3.1, "F3": true, "F4": "foo", "F5": 123.456, "F6": {"A": "bar"}}
        }
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"KSQL_COL_0": 1, "KSQL_COL_1": 2, "KSQL_COL_2": 3.1, "KSQL_COL_3": true, "KSQL_COL_4": "foo", "KSQL_COL_5": 123.456, "KSQL_COL_6": {"A": "bar"}}}
      ],
      "post": {
        "sources": [
          {
            "name": "OUTPUT",
            "type": "stream",
            "valueSchema": "STRUCT<KSQL_COL_0 INT, KSQL_COL_1 BIGINT, KSQL_COL_2 DOUBLE, KSQL_COL_3 BOOLEAN, KSQL_COL_4 STRING, KSQL_COL_5 DECIMAL(30, 10), KSQL_COL_6 STRUCT<A VARCHAR>>"
          }
        ]
      }
    },
    {
      "name": "table function with where clause",
      "statements": [
        "CREATE STREAM TEST (F0 INT, F1 ARRAY<INT>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT F0, EXPLODE(F1) VAL FROM TEST WHERE F0 <> 1;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "0", "value": {"F0": 0, "F1": [1, 2, 3]}},
        {"topic": "test_topic", "key": "0", "value": {"F0": 1, "F1": [4, 5, 6]}},
        {"topic": "test_topic", "key": "0", "value": {"F0": 2, "F1": [7, 8, 9]}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "0", "value": {"F0": 0, "VAL": 1}},
        {"topic": "OUTPUT", "key": "0", "value": {"F0": 0, "VAL": 2}},
        {"topic": "OUTPUT", "key": "0", "value": {"F0": 0, "VAL": 3}},
        {"topic": "OUTPUT", "key": "0", "value": {"F0": 2, "VAL": 7}},
        {"topic": "OUTPUT", "key": "0", "value": {"F0": 2, "VAL": 8}},
        {"topic": "OUTPUT", "key": "0", "value": {"F0": 2, "VAL": 9}}
      ]
    }
  ]
}