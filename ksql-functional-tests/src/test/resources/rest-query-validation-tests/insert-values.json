{
  "comments": [
    "Tests covering the INSERT VALUES functionality"
  ],
  "tests": [
    {
      "name": "explicitly supply all column values",
      "statements": [
        "CREATE STREAM TEST (ID INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "INSERT INTO TEST (ROWTIME, ROWKEY, ID) VALUES (1234, 'key', 10);"
      ],
      "inputs": [
      ],
      "outputs": [
        {"topic": "test_topic", "timestamp": 1234, "key": "key", "value": {"ID": 10}}
      ],
      "responses": [
        {"@type": "currentStatus", "statementText": "{STATEMENT}"}
      ]
    },
    {
      "name": "explicitly supply values out of order",
      "statements": [
        "CREATE STREAM TEST (ID INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "INSERT INTO TEST (ID, ROWTIME, ROWKEY) VALUES (10, 1234, 'key');"
      ],
      "inputs": [
      ],
      "outputs": [
        {"topic": "test_topic", "timestamp": 1234, "key": "key", "value": {"ID": 10}}
      ]
    },
    {
      "name": "explicitly supply default set of column values",
      "statements": [
        "CREATE STREAM TEST (ID INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "INSERT INTO TEST (ROWKEY, ID) VALUES ('key', 10);"
      ],
      "inputs": [
      ],
      "outputs": [
        {"topic": "test_topic", "key": "key", "value": {"ID": 10}}
      ]
    },
    {
      "name": "implicitly supply default set of column values",
      "statements": [
        "CREATE STREAM TEST (ID INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "INSERT INTO TEST VALUES ('key', 10);"
      ],
      "inputs": [
      ],
      "outputs": [
        {"topic": "test_topic", "key": "key", "value": {"ID": 10}}
      ]
    },
    {
      "name": "should insert nulls for any fields not provided",
      "statements": [
        "CREATE STREAM TEST (ID INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "INSERT INTO TEST (ROWKEY) VALUES ('10');"
      ],
      "inputs": [
      ],
      "outputs": [
        {"topic": "test_topic", "key": "10", "value": {"ID": null}}
      ]
    },
    {
      "name": "should fail on mismatch between explicit columns and value counts",
      "statements": [
        "CREATE STREAM TEST (ID INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "INSERT INTO TEST (ROWKEY, ID) VALUES ('10');"
      ],
      "expectedError": {
        "type": "io.confluent.ksql.rest.entity.KsqlStatementErrorMessage",
        "message": "Failed to prepare statement: Expected number columns and values to match: [ROWKEY, ID], ['10']",
        "status": 400
      }
    }
  ]
}