{
  "comments": [
    "Tests covering static queries of (materialized) aggregate tables"
  ],
  "tests": [
    {
      "name": "non-windowed single key lookup",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10';",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='missing';"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "11", "value": {}},
        {"topic": "test_topic", "key": "10", "value": {}}
      ],
      "responses": [
        {"@type": "currentStatus"},
        {"@type": "currentStatus"},
        {
          "@type": "rows",
          "schema": "`ROWKEY` STRING KEY, `COUNT` BIGINT",
          "rows": [["10", 1]]
        },
        {"@type": "rows", "rows": []}
      ]
    },
    {
      "name": "non-windowed with projection",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT ROWKEY AS ID, COUNT(1) AS COUNT FROM INPUT GROUP BY ROWKEY;",
        "SELECT COUNT, CONCAT(ID, 'x') AS ID, COUNT * 2 FROM AGGREGATE WHERE ROWKEY='10';"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "11", "value": {}},
        {"topic": "test_topic", "key": "10", "value": {}}
      ],
      "responses": [
        {"@type": "currentStatus"},
        {"@type": "currentStatus"},
        {"@type": "rows", "rows": [
          ["10", 1, "10x", 2]
        ]}
      ]
    },
    {
      "name": "windowed with projection",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT ROWKEY AS ID, COUNT(1) AS COUNT FROM INPUT WINDOW TUMBLING(SIZE 1 SECOND) GROUP BY ROWKEY;",
        "SELECT COUNT, CONCAT(ID, 'x') AS ID, COUNT * 2 FROM AGGREGATE WHERE ROWKEY='10' AND WindowStart=12000;"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 12345, "key": "11", "value": {}},
        {"topic": "test_topic", "timestamp": 11345, "key": "10", "value": {}},
        {"topic": "test_topic", "timestamp": 12345, "key": "10", "value": {}}
      ],
      "responses": [
        {"@type": "currentStatus"},
        {"@type": "currentStatus"},
        {"@type": "rows", "rows": [
          ["10", 12000, 1, "10x", 2]
        ]}
      ]
    },
    {
      "name": "tumbling windowed single key lookup with exact window start",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT WINDOW TUMBLING(SIZE 1 SECOND) GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10' AND WindowStart=12000;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10' AND WindowStart=13000;"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 12345, "key": "11", "value": {}},
        {"topic": "test_topic", "timestamp": 11345, "key": "10", "value": {}},
        {"topic": "test_topic", "timestamp": 12345, "key": "10", "value": {}}
      ],
      "responses": [
        {"@type": "currentStatus"},
        {"@type": "currentStatus"},
        {
          "@type": "rows",
          "schema": "`ROWKEY` STRING KEY, `WINDOWSTART` BIGINT KEY, `COUNT` BIGINT",
          "rows": [["10", 12000, 1]]
        },
        {"@type": "rows", "rows": []}
      ]
    },
    {
      "name": "hopping windowed single key lookup with exact window start",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT WINDOW HOPPING(SIZE 10 SECOND, ADVANCE BY 1 SECONDS) GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10' AND WindowStart=12000;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10' AND WindowStart=13000;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10' AND WindowStart=14000;"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 10345, "key": "11", "value": {}},
        {"topic": "test_topic", "timestamp": 10345, "key": "10", "value": {}},
        {"topic": "test_topic", "timestamp": 13345, "key": "10", "value": {}}
      ],
      "responses": [
        {"@type": "currentStatus"},
        {"@type": "currentStatus"},
        {
          "@type": "rows",
          "schema": "`ROWKEY` STRING KEY, `WINDOWSTART` BIGINT KEY, `COUNT` BIGINT",
          "rows": [["10", 12000, 1]]
        },
        {
          "@type": "rows",
          "schema": "`ROWKEY` STRING KEY, `WINDOWSTART` BIGINT KEY, `COUNT` BIGINT",
          "rows": [["10", 13000, 1]]
        },
        {"@type": "rows", "rows": []}
      ]
    },
    {
      "name": "session windowed single key lookup with exact window start",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT WINDOW SESSION(10 SECOND) GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10' AND WindowStart=12345;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10' AND WindowStart=12000;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10' AND WindowStart=13000;"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 12345, "key": "11", "value": {}},
        {"topic": "test_topic", "timestamp": 12345, "key": "10", "value": {}},
        {"topic": "test_topic", "timestamp": 12366, "key": "10", "value": {}}
      ],
      "responses": [
        {"@type": "currentStatus"},
        {"@type": "currentStatus"},
        {
          "@type": "rows",
          "schema": "`ROWKEY` STRING KEY, `WINDOWSTART` BIGINT KEY, `WINDOWEND` BIGINT KEY, `COUNT` BIGINT",
          "rows": [["10", 12345, 12366, 2]]
        },
        {"@type": "rows", "rows": []},
        {"@type": "rows", "rows": []}
      ]
    },
    {
      "name": "tumbling windowed single key lookup with window start range",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT WINDOW TUMBLING(SIZE 1 SECOND) GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WHERE 11111 <= WindowStart AND WindowStart < 14144 AND ROWKEY='10';",
        "SELECT * FROM AGGREGATE WHERE WindowStart >= 17000 AND 11234756356 > WindowStart AND ROWKEY='10';"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 12001, "key": "11", "value": {}},
        {"topic": "test_topic", "timestamp": 12345, "key": "10", "value": {}},
        {"topic": "test_topic", "timestamp": 12211, "key": "10", "value": {}},
        {"topic": "test_topic", "timestamp": 14253, "key": "10", "value": {}},
        {"topic": "test_topic", "timestamp": 15364, "key": "10", "value": {}}
      ],
      "responses": [
        {"@type": "currentStatus"},
        {"@type": "currentStatus"},
        {
          "@type": "rows",
          "schema": "`ROWKEY` STRING KEY, `WINDOWSTART` BIGINT KEY, `COUNT` BIGINT",
          "rows": [
            ["10", 12000, 2],
            ["10", 14000, 1]
          ]
        },
        {"@type": "rows", "rows": []}
      ]
    },
    {
      "name": "hopping windowed single key lookup with window start range",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT WINDOW HOPPING(SIZE 5 SECOND, ADVANCE BY 1 SECONDS) GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10' AND 6001 <= WindowStart AND WindowStart < 12000;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10' AND 13001 <= WindowStart AND WindowStart < 11234756356;"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 10021, "key": "11", "value": {}},
        {"topic": "test_topic", "timestamp": 10345, "key": "10", "value": {}},
        {"topic": "test_topic", "timestamp": 13251, "key": "10", "value": {}}
      ],
      "responses": [
        {"@type": "currentStatus"},
        {"@type": "currentStatus"},
        {
          "@type": "rows",
          "rows": [
            ["10", 7000, 1],
            ["10", 8000, 1],
            ["10", 9000, 2],
            ["10", 10000, 2],
            ["10", 11000, 1]
          ]
        },
        {"@type": "rows", "rows": []}
      ]
    },
    {
      "name": "session windowed single key lookup with window start range",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT WINDOW SESSION(10 SECOND) GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10' AND 8001 <= WindowStart AND WindowStart < 19444;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10' AND 8001 <= WindowStart AND WindowStart < 11234756356;"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 12345, "key": "11", "value": {}},
        {"topic": "test_topic", "timestamp": 12345, "key": "10", "value": {}},
        {"topic": "test_topic", "timestamp": 13456, "key": "10", "value": {}},
        {"topic": "test_topic", "timestamp": 24456, "key": "10", "value": {}}
      ],
      "responses": [
        {"@type": "currentStatus"},
        {"@type": "currentStatus"},
        {
          "@type": "rows",
          "rows": [
            ["10", 12345, 13456, 2]
          ]
        },
        {
          "@type": "rows",
          "rows": [
            ["10", 12345, 13456, 2],
            ["10", 24456, 24456, 1]
          ]
        }
      ]
    },
    {
      "name": "text datetime window bounds",
      "enabled": false,
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT WINDOW TUMBLING(SIZE 1 SECOND) GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10' AND WindowStart='2020-02-23T23:45:12.000';"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 1582501512456, "key": "11", "value": {}},
        {"topic": "test_topic", "timestamp": 1582501512456, "key": "10", "value": {}}
      ],
      "responses": [
        {"@type": "currentStatus"},
        {"@type": "currentStatus"},
        {"@type": "rows", "rows": [
          ["10", 1582501512000, 1]
        ]}
      ]
    },
    {
      "name": "aliased table",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE A WHERE '10'=ROWKEY;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "10", "value": {}}
      ],
      "responses": [
        {"@type": "currentStatus"},
        {"@type": "currentStatus"},
        {
          "@type": "rows",
          "schema": "`ROWKEY` STRING KEY, `COUNT` BIGINT",
          "rows": [["10", 1]]
        }
      ]
    },
    {
      "name": "multiple aggregate columns",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT, SUM(CAST(ROWKEY AS INT)) AS SUM FROM INPUT GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10';"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "10", "value": {}}
      ],
      "responses": [
        {"@type": "currentStatus"},
        {"@type": "currentStatus"},
        {
          "@type": "rows",
          "schema": "`ROWKEY` STRING KEY, `COUNT` BIGINT, `SUM` INTEGER",
          "rows": [["10", 1,10]]
        }
      ]
    },
    {
      "name": "having clause on aggregate",
      "statements": [
        "CREATE STREAM INPUT (X INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT SUM(X) AS SUM FROM INPUT GROUP BY ROWKEY HAVING SUM(X) < 10;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10';",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='missing';"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "10", "value": {"X": 9}},
        {"topic": "test_topic", "key": "missing", "value": {"X": 10}}
      ],
      "responses": [
        {"@type": "currentStatus"},
        {"@type": "currentStatus"},
        {"@type": "rows", "rows": [["10", 9]]},
        {"@type": "rows", "rows": []}
      ]
    },
    {
      "name": "fail on unsupported query feature: join",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE A JOIN INPUT I ON A.ROWKEY=I.ROWKEY WHERE A.ROWKEY='10';"
      ],
      "expectedError": {
        "type": "io.confluent.ksql.rest.entity.KsqlStatementErrorMessage",
        "message": "Static queries do not support joins.",
        "status": 400
      }
    },
    {
      "name": "fail on unsupported query feature: window",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WINDOW TUMBLING (SIZE 1 SECOND) WHERE ROWKEY='10';"
      ],
      "expectedError": {
        "type": "io.confluent.ksql.rest.entity.KsqlStatementErrorMessage",
        "message": "Static queries do not support WINDOW clauses.",
        "status": 400
      }
    },
    {
      "name": "fail on unsupported query feature: group by",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10' GROUP BY ROWKEY;"
      ],
      "expectedError": {
        "type": "io.confluent.ksql.rest.entity.KsqlStatementErrorMessage",
        "message": "Static queries do not support GROUP BY clauses",
        "status": 400
      }
    },
    {
      "name": "fail on unsupported query feature: where multiple rowkeys",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10' OR ROWKEY='11';"
      ],
      "expectedError": {
        "type": "io.confluent.ksql.rest.entity.KsqlStatementErrorMessage",
        "message": "Only AND expressions are supported: ((AGGREGATE.ROWKEY = '10') OR (AGGREGATE.ROWKEY = '11'))",
        "status": 400
      }
    },
    {
      "name": "fail on unsupported query feature: where rowkey range",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WHERE '0'<ROWKEY AND ROWKEY<'100';"
      ],
      "expectedError": {
        "type": "io.confluent.ksql.rest.entity.KsqlStatementErrorMessage",
        "message": "Multiple bounds on ROWKEY",
        "status": 400
      }
    },
    {
      "name": "fail on unsupported query feature: where rowkey not equals",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY != '100';"
      ],
      "expectedError": {
        "type": "io.confluent.ksql.rest.entity.KsqlStatementErrorMessage",
        "message": "ROWKEY bound must currently be '='.",
        "status": 400
      }
    },
    {
      "name": "fail on unsupported query feature: where rowkey not string",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY = 100;"
      ],
      "expectedError": {
        "type": "io.confluent.ksql.rest.entity.KsqlStatementErrorMessage",
        "message": "ROWKEY must be comparsed to STRING literal.",
        "status": 400
      }
    },
    {
      "name": "fail on unsupported query feature: where not on rowkey",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WHERE COUNT = 100;"
      ],
      "expectedError": {
        "type": "io.confluent.ksql.rest.entity.KsqlStatementErrorMessage",
        "message": "WHERE clause on unsupported field: COUNT",
        "status": 400
      }
    },
    {
      "name": "fail on unsupported query feature: not materialized aggregate",
      "statements": [
        "CREATE TABLE X (ID INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "SELECT * FROM X WHERE ROWKEY = '100';"
      ],
      "expectedError": {
        "type": "io.confluent.ksql.rest.entity.KsqlStatementErrorMessage",
        "message": "Table 'X' is not materialized. KSQL currently only supports static queries on materialized aggregate tables. i.e. those created by a 'CREATE TABLE AS SELECT <fields> FROM <sources> GROUP BY <key>' style statement.",
        "status": 400
      }
    },
    {
      "name": "fail on windowed table if no window start bounds provided",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT WINDOW TUMBLING(SIZE 1 SECOND) GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10';"
      ],
      "expectedError": {
        "type": "io.confluent.ksql.rest.entity.KsqlStatementErrorMessage",
        "message": "WHERE clause missing WINDOWSTART",
        "status": 400
      }
    },
    {
      "name": "fail if WINDOWSTART used in non-windowed static query",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE WHERE ROWKEY='10' AND WINDOWSTART=10;"
      ],
      "expectedError": {
        "type": "io.confluent.ksql.rest.entity.KsqlStatementErrorMessage",
        "message": "Field 'AGGREGATE.WINDOWSTART' cannot be resolved",
        "status": 400
      }
    }
  ]
}