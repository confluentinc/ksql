{
  "comments": [
    "Tests covering Push queries"
  ],
  "tests": [
    {
      "name": "non-windowed stream - STRING key",
      "statements": [
        "CREATE STREAM INPUT (ID INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "SELECT * FROM INPUT EMIT CHANGES LIMIT 2;"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 12345, "key": "11", "value": {"id": 100}},
        {"topic": "test_topic", "timestamp": 12365, "key": "11", "value": {"id": 101}}
      ],
      "responses": [
        {"admin": {"@type": "currentStatus"}},
        {"query": [
          {"header":{"schema":"`ROWTIME` BIGINT, `ROWKEY` STRING, `ID` INTEGER"}},
          {"row":{"columns":[12345, "11", 100]}},
          {"row":{"columns":[12365, "11", 101]}},
          {"finalMessage":"Limit Reached"}
        ]}
      ]
    },
    {
      "name": "non-windowed stream - INT key",
      "statements": [
        "CREATE STREAM INPUT (ROWKEY INT KEY, ID INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "SELECT * FROM INPUT EMIT CHANGES LIMIT 2;"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 12345, "key": 11, "value": {"id": 100}},
        {"topic": "test_topic", "timestamp": 12365, "key": 11, "value": {"id": 101}}
      ],
      "responses": [
        {"admin": {"@type": "currentStatus"}},
        {"query": [
          {"header":{"schema":"`ROWTIME` BIGINT, `ROWKEY` INTEGER, `ID` INTEGER"}},
          {"row":{"columns":[12345, 11, 100]}},
          {"row":{"columns":[12365, 11, 101]}},
          {"finalMessage":"Limit Reached"}
        ]}
      ]
    },
    {
      "name": "non-windowed stream - BIGINT key",
      "statements": [
        "CREATE STREAM INPUT (ROWKEY BIGINT KEY, ID INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "SELECT * FROM INPUT EMIT CHANGES LIMIT 2;"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 12345, "key": 11, "value": {"id": 100}},
        {"topic": "test_topic", "timestamp": 12365, "key": 11, "value": {"id": 101}}
      ],
      "responses": [
        {"admin": {"@type": "currentStatus"}},
        {"query": [
          {"header":{"schema":"`ROWTIME` BIGINT, `ROWKEY` BIGINT, `ID` INTEGER"}},
          {"row":{"columns":[12345, 11, 100]}},
          {"row":{"columns":[12365, 11, 101]}},
          {"finalMessage":"Limit Reached"}
        ]}
      ]
    },
    {
      "name": "non-windowed stream - DOUBLE key",
      "statements": [
        "CREATE STREAM INPUT (ROWKEY DOUBLE KEY, ID INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "SELECT * FROM INPUT EMIT CHANGES LIMIT 2;"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 12345, "key": 11.0, "value": {"id": 100}},
        {"topic": "test_topic", "timestamp": 12365, "key": 11.0, "value": {"id": 101}}
      ],
      "responses": [
        {"admin": {"@type": "currentStatus"}},
        {"query": [
          {"header":{"schema":"`ROWTIME` BIGINT, `ROWKEY` DOUBLE, `ID` INTEGER"}},
          {"row":{"columns":[12345, 11.0, 100]}},
          {"row":{"columns":[12365, 11.0, 101]}},
          {"finalMessage":"Limit Reached"}
        ]}
      ]
    },
    {
      "name": "windowed table - STRING key",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT WINDOW TUMBLING(SIZE 1 SECOND) GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE EMIT CHANGES LIMIT 2;"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 12345, "key": "11", "value": {"id": 100}},
        {"topic": "test_topic", "timestamp": 12365, "key": "11", "value": {"id": 101}}
      ],
      "responses": [
        {"admin": {"@type": "currentStatus"}},
        {"admin": {"@type": "currentStatus"}},
        {"query": [
          {"header":{"schema":"`ROWTIME` BIGINT, `WINDOWSTART` BIGINT, `WINDOWEND` BIGINT, `ROWKEY` STRING, `COUNT` BIGINT"}},
          {"row":{"columns":[12345, 12000, 13000, "11", 1]}},
          {"row":{"columns":[12365, 12000, 13000, "11", 2]}},
          {"finalMessage":"Limit Reached"}
        ]}
      ]
    },
    {
      "name": "windowed table - INT key",
      "statements": [
        "CREATE STREAM INPUT (ROWKEY INT KEY, IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT WINDOW TUMBLING(SIZE 1 SECOND) GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE EMIT CHANGES LIMIT 2;"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 12345, "key": 11, "value": {"id": 100}},
        {"topic": "test_topic", "timestamp": 12365, "key": 11, "value": {"id": 101}}
      ],
      "responses": [
        {"admin": {"@type": "currentStatus"}},
        {"admin": {"@type": "currentStatus"}},
        {"query": [
          {"header":{"schema":"`ROWTIME` BIGINT, `WINDOWSTART` BIGINT, `WINDOWEND` BIGINT, `ROWKEY` INTEGER, `COUNT` BIGINT"}},
          {"row":{"columns":[12345, 12000, 13000, 11, 1]}},
          {"row":{"columns":[12365, 12000, 13000, 11, 2]}},
          {"finalMessage":"Limit Reached"}
        ]}
      ]
    },
    {
      "name": "windowed table - BIGINT key",
      "statements": [
        "CREATE STREAM INPUT (ROWKEY BIGINT KEY, IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT WINDOW TUMBLING(SIZE 1 SECOND) GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE EMIT CHANGES LIMIT 2;"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 12345, "key": 11, "value": {"id": 100}},
        {"topic": "test_topic", "timestamp": 12365, "key": 11, "value": {"id": 101}}
      ],
      "responses": [
        {"admin": {"@type": "currentStatus"}},
        {"admin": {"@type": "currentStatus"}},
        {"query": [
          {"header":{"schema":"`ROWTIME` BIGINT, `WINDOWSTART` BIGINT, `WINDOWEND` BIGINT, `ROWKEY` BIGINT, `COUNT` BIGINT"}},
          {"row":{"columns":[12345, 12000, 13000, 11, 1]}},
          {"row":{"columns":[12365, 12000, 13000, 11, 2]}},
          {"finalMessage":"Limit Reached"}
        ]}
      ]
    },
    {
      "name": "windowed table - DOUBLE key",
      "statements": [
        "CREATE STREAM INPUT (ROWKEY DOUBLE KEY, IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT WINDOW TUMBLING(SIZE 1 SECOND) GROUP BY ROWKEY;",
        "SELECT * FROM AGGREGATE EMIT CHANGES LIMIT 2;"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 12345, "key": 11.1, "value": {"id": 100}},
        {"topic": "test_topic", "timestamp": 12365, "key": 11.1, "value": {"id": 101}}
      ],
      "responses": [
        {"admin": {"@type": "currentStatus"}},
        {"admin": {"@type": "currentStatus"}},
        {"query": [
          {"header":{"schema":"`ROWTIME` BIGINT, `WINDOWSTART` BIGINT, `WINDOWEND` BIGINT, `ROWKEY` DOUBLE, `COUNT` BIGINT"}},
          {"row":{"columns":[12345, 12000, 13000, 11.1, 1]}},
          {"row":{"columns":[12365, 12000, 13000, 11.1, 2]}},
          {"finalMessage":"Limit Reached"}
        ]}
      ]
    },
    {
      "name": "join on STRING key",
      "statements": [
        "CREATE STREAM INPUT_1 (ROWKEY STRING KEY, ID INT) WITH (kafka_topic='test_topic_1', value_format='JSON');",
        "CREATE STREAM INPUT_2 (ROWKEY STRING KEY, ID INT) WITH (kafka_topic='test_topic_2', value_format='JSON');",
        "SELECT * FROM INPUT_1 I1 JOIN INPUT_2 I2 WITHIN 60 SECONDS ON I1.ROWKEY = I2.ROWKEY EMIT CHANGES LIMIT 1;"
      ],
      "inputs": [
        {"topic": "test_topic_1", "timestamp": 12345, "key": "x", "value": {"id": 100}},
        {"topic": "test_topic_2", "timestamp": 12365, "key": "x", "value": {"id": 101}}
      ],
      "responses": [
        {"admin": {"@type": "currentStatus"}},
        {"admin": {"@type": "currentStatus"}},
        {"query": [
          {"header":{"schema":"`I1_ROWTIME` BIGINT, `I1_ROWKEY` STRING, `I1_ID` INTEGER, `I2_ROWTIME` BIGINT, `I2_ROWKEY` STRING, `I2_ID` INTEGER"}},
          {"row":{"columns":[12345, "x", 100, 12365, "x", 101]}},
          {"finalMessage":"Limit Reached"}
        ]}
      ]
    },
    {
      "name": "join on non-STRING key",
      "statements": [
        "CREATE STREAM INPUT_1 (ROWKEY DOUBLE KEY, ID INT) WITH (kafka_topic='test_topic_1', value_format='JSON');",
        "CREATE STREAM INPUT_2 (ROWKEY DOUBLE KEY, ID INT) WITH (kafka_topic='test_topic_2', value_format='JSON');",
        "SELECT * FROM INPUT_1 I1 JOIN INPUT_2 I2 WITHIN 60 SECONDS ON I1.ROWKEY = I2.ROWKEY EMIT CHANGES LIMIT 1;"
      ],
      "inputs": [
        {"topic": "test_topic_1", "timestamp": 12345, "key": 11.1, "value": {"id": 100}},
        {"topic": "test_topic_2", "timestamp": 12365, "key": 11.1, "value": {"id": 101}}
      ],
      "responses": [
        {"admin": {"@type": "currentStatus"}},
        {"admin": {"@type": "currentStatus"}},
        {"query": [
          {"header":{"schema":"`I1_ROWTIME` BIGINT, `I1_ROWKEY` DOUBLE, `I1_ID` INTEGER, `I2_ROWTIME` BIGINT, `I2_ROWKEY` DOUBLE, `I2_ID` INTEGER"}},
          {"row":{"columns":[12345, 11.1, 100, 12365, 11.1, 101]}},
          {"finalMessage":"Limit Reached"}
        ]}
      ]
    },
    {
      "name": "imported windowed stream - BIGINT KEY",
      "statements": [
        "CREATE STREAM INPUT (ROWKEY BIGINT KEY, ID INT) WITH (kafka_topic='test_topic', value_format='JSON', WINDOW_TYPE='Session');",
        "SELECT * FROM INPUT EMIT CHANGES LIMIT 1;"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 34555, "key": 11, "value": {"id": 100}, "window": {"start": 12345, "end": 34555, "type": "session"}}
      ],
      "responses": [
        {"admin": {"@type": "currentStatus"}},
        {"query": [
          {"header":{"schema":"`ROWTIME` BIGINT, `WINDOWSTART` BIGINT, `WINDOWEND` BIGINT, `ROWKEY` BIGINT, `ID` INTEGER"}},
          {"row":{"columns":[34555, 12345, 34555, 11, 100]}},
          {"finalMessage":"Limit Reached"}
        ]}
      ]
    },
    {
      "name": "imported windowed table - DOUBLE KEY",
      "statements": [
        "CREATE TABLE INPUT (ROWKEY DOUBLE KEY, ID INT) WITH (kafka_topic='test_topic', value_format='JSON', WINDOW_TYPE='Tumbling', WINDOW_SIZE='1 SECOND');",
        "SELECT * FROM INPUT WHERE ROWKEY = 11.1 AND WINDOWSTART=12000 EMIT CHANGES LIMIT 1;"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 12345, "key": 11.1, "value": {"id": 100}, "window": {"start": 11000, "end": 12000, "type": "time"}},
        {"topic": "test_topic", "timestamp": 12345, "key": 10.1, "value": {"id": 100}, "window": {"start": 12000, "end": 13000, "type": "time"}},
        {"topic": "test_topic", "timestamp": 12345, "key": 11.1, "value": {"id": 100}, "window": {"start": 12000, "end": 13000, "type": "time"}}
      ],
      "responses": [
        {"admin": {"@type": "currentStatus"}},
        {"query": [
          {"header":{"schema":"`ROWTIME` BIGINT, `WINDOWSTART` BIGINT, `WINDOWEND` BIGINT, `ROWKEY` DOUBLE, `ID` INTEGER"}},
          {"row":{"columns":[12345, 12000, 13000, 11.1, 100]}},
          {"finalMessage":"Limit Reached"}
        ]}
      ]
    },
    {
      "name": "windowed table - access window bounds in select",
      "statements": [
        "CREATE STREAM INPUT (IGNORED INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE TABLE AGGREGATE AS SELECT COUNT(1) AS COUNT FROM INPUT WINDOW TUMBLING(SIZE 1 SECOND) GROUP BY ROWKEY;",
        "SELECT TIMESTAMPTOSTRING(WINDOWSTART, 'yyyy-MM-dd HH:mm:ss Z', 'UTC') AS WSTART, TIMESTAMPTOSTRING(WINDOWEND, 'yyyy-MM-dd HH:mm:ss Z', 'UTC') AS WEND, COUNT FROM AGGREGATE EMIT CHANGES LIMIT 2;"
      ],
      "inputs": [
        {"topic": "test_topic", "timestamp": 1580223282123, "key": "11", "value": {"id": 100}},
        {"topic": "test_topic", "timestamp": 1580223282456, "key": "11", "value": {"id": 101}}
      ],
      "responses": [
        {"admin": {"@type": "currentStatus"}},
        {"admin": {"@type": "currentStatus"}},
        {"query": [
          {"header":{"schema":"`WSTART` STRING, `WEND` STRING, `COUNT` BIGINT"}},
          {"row":{"columns":["2020-01-28 14:54:42 +0000", "2020-01-28 14:54:43 +0000", 1]}},
          {"row":{"columns":["2020-01-28 14:54:42 +0000", "2020-01-28 14:54:43 +0000", 2]}},
          {"finalMessage":"Limit Reached"}
        ]}
      ]
    },
    {
      "name": "windowed join",
      "statements": [
        "CREATE STREAM S1 (ROWKEY INT KEY, ID bigint) WITH (kafka_topic='left_topic', value_format='JSON', WINDOW_TYPE='Hopping', WINDOW_SIZE='5 SECONDS');",
        "CREATE STREAM S2 (ROWKEY INT KEY, ID bigint) WITH (kafka_topic='right_topic', value_format='JSON', WINDOW_TYPE='Tumbling', WINDOW_SIZE='2 SECOND');",
        "CREATE STREAM OUTPUT as SELECT * FROM S1 JOIN S2 WITHIN 1 MINUTE ON S1.ROWKEY = S2.ROWKEY;",
        "SELECT * FROM OUTPUT EMIT CHANGES LIMIT 2;"
      ],
      "inputs": [
        {"topic": "left_topic", "key": 1, "value": {"ID": 1}, "timestamp": 0, "window": {"start": 0, "end": 5000, "type": "time"}},
        {"topic": "left_topic", "key": 1, "value": {"ID": 2}, "timestamp": 1000, "window": {"start": 1000, "end": 6000, "type": "time"}},
        {"topic": "left_topic", "key": 1, "value": {"ID": 3}, "timestamp": 2000, "window": {"start": 2000, "end": 7000, "type": "time"}},
        {"topic": "right_topic", "key": 1, "value": {"ID": 4}, "timestamp": 0, "window": {"start": 0, "end": 2000, "type": "time"}},
        {"topic": "right_topic", "key": 1, "value": {"ID": 5}, "timestamp": 2000, "window": {"start": 2000, "end": 4000, "type": "time"}}
      ],
      "responses": [
        {"admin": {"@type": "currentStatus"}},
        {"admin": {"@type": "currentStatus"}},
        {"admin": {"@type": "currentStatus"}},
        {"query": [
          {"header":{"schema":"`ROWTIME` BIGINT, `WINDOWSTART` BIGINT, `WINDOWEND` BIGINT, `ROWKEY` INTEGER, `S1_ROWTIME` BIGINT, `S1_WINDOWSTART` BIGINT, `S1_WINDOWEND` BIGINT, `S1_ROWKEY` INTEGER, `S1_ID` BIGINT, `S2_ROWTIME` BIGINT, `S2_WINDOWSTART` BIGINT, `S2_WINDOWEND` BIGINT, `S2_ROWKEY` INTEGER, `S2_ID` BIGINT"}},
          {"row":{"columns":[0, 0, 5000, 1, 0, 0, 5000, 1, 1, 0, 0, 2000, 1, 4]}},
          {"row":{"columns":[2000, 2000, 7000, 1, 2000, 2000, 7000, 1, 3, 2000, 2000, 4000, 1, 5]}},
          {"finalMessage":"Limit Reached"}
        ]}
      ]
    }
  ]
}