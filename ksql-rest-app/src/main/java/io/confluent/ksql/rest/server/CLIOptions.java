/**
 * Copyright 2017 Confluent Inc.
 **/
package io.confluent.ksql.rest.server;

import com.github.rvesse.airline.HelpOption;
import com.github.rvesse.airline.SingleCommand;
import com.github.rvesse.airline.annotations.Arguments;
import com.github.rvesse.airline.annotations.Command;
import com.github.rvesse.airline.annotations.Option;
import com.github.rvesse.airline.annotations.restrictions.Once;
import com.github.rvesse.airline.annotations.restrictions.Required;
import com.github.rvesse.airline.help.Help;
import com.github.rvesse.airline.parser.errors.ParseException;

import javax.inject.Inject;
import java.io.IOException;

@Command(name = "KSQL-Server", description = "KSQL Cluster")
public class CLIOptions {

  private static final String QUICKSTART_OPTION_NAME = "--quickstart";

  // Only here so that the help message generated by Help.help() is accurate
  @Inject
  public HelpOption help;

  @Once
  @Required
  @Arguments(
      title = "properties-file",
      description = "A file specifying properties for the KSQL Server, KSQL, and its underlying Kafka Streams instance(s)"
  )
  private String propertiesFile;
  public String getPropertiesFile() {
    return propertiesFile;
  }

  @Option(
      name = QUICKSTART_OPTION_NAME,
      description = "Whether to serve a quickstart file (located in the resources directory) at /quickstart.html"
  )
  private boolean quickstart;
  public boolean getQuickstart() {
    return quickstart;
  }

  public static CLIOptions parse(String[] args) throws IOException {

    SingleCommand<CLIOptions> optionsParser = SingleCommand.singleCommand(CLIOptions.class);

    // If just a help flag is given, an exception will be thrown due to missing required options; hence, this workaround
    for (String arg : args) {
      if ("--help".equals(arg) || "-h".equals(arg)) {
        Help.help(optionsParser.getCommandMetadata());
        return null;
      }
    }

    try {
      return optionsParser.parse(args);
    } catch (ParseException exception) {
      if (exception.getMessage() != null) {
        System.err.println(exception.getMessage());
      } else {
        System.err.println("Options parsing failed for an unknown reason");
      }
      System.err.println("See the -h or --help flags for usage information");
      return null;
    }
  }
}
