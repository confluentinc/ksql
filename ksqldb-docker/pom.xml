<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2018 Confluent Inc.
  ~
  ~ Licensed under the Confluent Community License (the "License"); you may not use
  ~ this file except in compliance with the License.  You may obtain a copy of the
  ~ License at
  ~
  ~ http://www.confluent.io/confluent-community-license
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OF ANY KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>ksqldb-parent</artifactId>
    <groupId>io.confluent.ksql</groupId>
    <version>7.0.0-0</version>
  </parent>

  <artifactId>ksqldb-docker</artifactId>

  <properties>
    <air.main.basedir>${project.parent.basedir}</air.main.basedir>
    <docker.skip-build>${skip.docker.build}</docker.skip-build>
    <docker.skip-test>${skip.docker.test}</docker.skip-test>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.confluent.ksql</groupId>
      <artifactId>ksqldb-rest-app</artifactId>
      <version>${io.confluent.ksql.version}</version>
    </dependency>

    <dependency>
      <groupId>io.confluent.ksql</groupId>
      <artifactId>ksqldb-cli</artifactId>
      <version>${io.confluent.ksql.version}</version>
    </dependency>

    <dependency>
      <groupId>io.confluent.ksql</groupId>
      <artifactId>ksqldb-functional-tests</artifactId>
      <version>${io.confluent.ksql.version}</version>
    </dependency>

    <dependency>
      <groupId>io.confluent.ksql</groupId>
      <artifactId>ksqldb-tools</artifactId>
      <version>${io.confluent.ksql.version}</version>
    </dependency>

    <!-- Need to explicitly add dependencies with classifier as they are not automatically pulled
         in. -->
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>${kafka.version}</version>
      <classifier>test</classifier>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka_${kafka.scala.version}</artifactId>
      <classifier>test</classifier>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>compile</scope>
    </dependency>

  </dependencies>


  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/assembly/package.xml</descriptor>
          </descriptors>
          <attach>false</attach>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>create-licenses</id>
            <configuration>
              <mainClass>io.confluent.licenses.LicenseFinder</mainClass>
              <arguments>
                <!-- Note use of development instead of package so we pick up all dependencies.
                     This assumes both subprojects will be packaged together. -->
                <argument>-i ${project.build.directory}/${project.build.finalName}-package/share/java/acl</argument>
                <argument>-o ${project.parent.basedir}/licenses/overrides</argument>
                <argument>-f</argument>
                <argument>-h ${project.build.directory}/${project.build.finalName}-package/share/doc/${project.name}/licenses.html</argument>
                <argument>-l ${project.build.directory}/${project.build.finalName}-package/share/doc/${project.name}/licenses</argument>
                <argument>-n ${project.build.directory}/${project.build.finalName}-package/share/doc/${project.name}/notices</argument>
                <argument>-t ${project.name}</argument>
                <argument>-x connect-api-${ce.kafka.version}.jar,connect-json-${ce.kafka.version}.jar,connect-runtime-${ce.kafka.version}.jar,control-center-${io.confluent.blueway.version}.jar,licenses-${io.confluent.license-file-generator.version}.jar,confluent-licensing-new-${ce.kafka.version}.jar,control-center-frontend-${io.confluent.blueway-fe.version}.jar,confluent-command-${io.confluent.blueway.version}.jar</argument>
              </arguments>
            </configuration>
            <phase>package</phase>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <includeProjectDependencies>true</includeProjectDependencies>
          <includePluginDependencies>true</includePluginDependencies>
          <executableDependency>
            <groupId>io.confluent</groupId>
            <artifactId>licenses</artifactId>
          </executableDependency>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>licenses</artifactId>
            <version>${io.confluent.license-file-generator.version}</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
</project>
