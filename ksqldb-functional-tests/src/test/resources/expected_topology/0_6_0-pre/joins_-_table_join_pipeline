{
  "ksql.extension.dir" : "ext",
  "ksql.streams.cache.max.bytes.buffering" : "0",
  "ksql.security.extension.class" : null,
  "ksql.transient.prefix" : "transient_",
  "ksql.persistence.wrap.single.values" : "true",
  "ksql.authorization.cache.expiry.time.secs" : "30",
  "ksql.schema.registry.url" : "",
  "ksql.streams.default.deserialization.exception.handler" : "io.confluent.ksql.errors.LogMetricAndContinueExceptionHandler",
  "ksql.output.topic.name.prefix" : "",
  "ksql.streams.auto.offset.reset" : "earliest",
  "ksql.connect.url" : "http://localhost:8083",
  "ksql.service.id" : "some.ksql.service.id",
  "ksql.internal.topic.min.insync.replicas" : "1",
  "ksql.streams.shutdown.timeout.ms" : "300000",
  "ksql.internal.topic.replicas" : "1",
  "ksql.insert.into.values.enabled" : "true",
  "ksql.streams.default.production.exception.handler" : "io.confluent.ksql.errors.ProductionExceptionHandlerUtil$LogAndFailProductionExceptionHandler",
  "ksql.access.validator.enable" : "auto",
  "ksql.streams.bootstrap.servers" : "localhost:0",
  "ksql.streams.commit.interval.ms" : "2000",
  "ksql.metric.reporters" : "",
  "ksql.streams.auto.commit.interval.ms" : "0",
  "ksql.metrics.extension" : null,
  "ksql.streams.topology.optimization" : "all",
  "ksql.execution.plan.enable" : "false",
  "ksql.query.pull.streamsstore.rebalancing.timeout.ms" : "10000",
  "ksql.streams.num.stream.threads" : "4",
  "ksql.authorization.cache.max.entries" : "10000",
  "ksql.metrics.tags.custom" : "",
  "ksql.pull.queries.enable" : "true",
  "ksql.udfs.enabled" : "true",
  "ksql.udf.enable.security.manager" : "true",
  "ksql.connect.worker.config" : "",
  "ksql.query.pull.routing.timeout.ms" : "30000",
  "ksql.sink.window.change.log.additional.retention" : "1000000",
  "ksql.udf.collect.metrics" : "false",
  "ksql.persistent.prefix" : "query_",
  "ksql.query.persistent.active.limit" : "2147483647"
}
CONFIGS_END
CTAS_INNER_JOIN_2_1.KafkaTopic_Left.Source = STRUCT<T_ID BIGINT, NAME VARCHAR, VALUE BIGINT, F1 VARCHAR, F2 BIGINT> NOT NULL
CTAS_INNER_JOIN_2_1.KafkaTopic_Right.Source = STRUCT<ID BIGINT, F3 VARCHAR> NOT NULL
CTAS_INNER_JOIN_2_1.INNER_JOIN_2 = STRUCT<T_ID BIGINT, NAME VARCHAR, F1 VARCHAR, F3 VARCHAR> NOT NULL
SCHEMAS_END
Topologies:
   Sub-topology: 0
    Source: KSTREAM-SOURCE-0000000000 (topics: [INNER_JOIN])
      --> KTABLE-SOURCE-0000000001
    Source: KSTREAM-SOURCE-0000000004 (topics: [right_topic_2])
      --> KTABLE-SOURCE-0000000005
    Processor: KTABLE-SOURCE-0000000001 (stores: [KafkaTopic_Left-Reduce])
      --> KTABLE-TRANSFORMVALUES-0000000002
      <-- KSTREAM-SOURCE-0000000000
    Processor: KTABLE-SOURCE-0000000005 (stores: [KafkaTopic_Right-Reduce])
      --> KTABLE-TRANSFORMVALUES-0000000006
      <-- KSTREAM-SOURCE-0000000004
    Processor: KTABLE-TRANSFORMVALUES-0000000002 (stores: [])
      --> PrependAliasLeft
      <-- KTABLE-SOURCE-0000000001
    Processor: KTABLE-TRANSFORMVALUES-0000000006 (stores: [])
      --> PrependAliasRight
      <-- KTABLE-SOURCE-0000000005
    Processor: PrependAliasLeft (stores: [])
      --> KTABLE-JOINTHIS-0000000009
      <-- KTABLE-TRANSFORMVALUES-0000000002
    Processor: PrependAliasRight (stores: [])
      --> KTABLE-JOINOTHER-0000000010
      <-- KTABLE-TRANSFORMVALUES-0000000006
    Processor: KTABLE-JOINOTHER-0000000010 (stores: [KafkaTopic_Left-Reduce])
      --> KTABLE-MERGE-0000000008
      <-- PrependAliasRight
    Processor: KTABLE-JOINTHIS-0000000009 (stores: [KafkaTopic_Right-Reduce])
      --> KTABLE-MERGE-0000000008
      <-- PrependAliasLeft
    Processor: KTABLE-MERGE-0000000008 (stores: [])
      --> Project
      <-- KTABLE-JOINTHIS-0000000009, KTABLE-JOINOTHER-0000000010
    Processor: Project (stores: [])
      --> KTABLE-TOSTREAM-0000000012
      <-- KTABLE-MERGE-0000000008
    Processor: KTABLE-TOSTREAM-0000000012 (stores: [])
      --> KSTREAM-SINK-0000000013
      <-- Project
    Sink: KSTREAM-SINK-0000000013 (topic: INNER_JOIN_2)
      <-- KTABLE-TOSTREAM-0000000012

