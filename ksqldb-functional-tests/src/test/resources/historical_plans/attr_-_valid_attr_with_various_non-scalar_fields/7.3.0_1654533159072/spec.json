{
  "version" : "7.3.0",
  "timestamp" : 1654533159072,
  "path" : "query-validation-tests/attr.json",
  "schemas" : {
    "CTAS_OUT_0.Aggregate.Project" : {
      "schema" : "`K` INTEGER KEY, `LI` ARRAY<INTEGER>, `S` STRUCT<`A` STRING, `B` INTEGER>",
      "keyFormat" : {
        "format" : "KAFKA"
      },
      "valueFormat" : {
        "format" : "JSON"
      }
    },
    "CTAS_OUT_0.OUT" : {
      "schema" : "`K` INTEGER KEY, `LI` ARRAY<INTEGER>, `S` STRUCT<`A` STRING, `B` INTEGER>",
      "keyFormat" : {
        "format" : "KAFKA"
      },
      "valueFormat" : {
        "format" : "JSON"
      }
    },
    "CTAS_OUT_0.Aggregate.GroupBy" : {
      "schema" : "`K` INTEGER KEY, `K` INTEGER, `LI` ARRAY<INTEGER>, `S` STRUCT<`A` STRING, `B` INTEGER>",
      "keyFormat" : {
        "format" : "KAFKA"
      },
      "valueFormat" : {
        "format" : "JSON"
      }
    },
    "CTAS_OUT_0.Aggregate.Aggregate.Materialize" : {
      "schema" : "`K` INTEGER KEY, `K` INTEGER, `LI` ARRAY<INTEGER>, `S` STRUCT<`A` STRING, `B` INTEGER>, `KSQL_AGG_VARIABLE_0` ARRAY<STRUCT<`VALUE` ARRAY<INTEGER>, `COUNT` INTEGER>>, `KSQL_AGG_VARIABLE_1` ARRAY<STRUCT<`VALUE` STRUCT<`A` STRING, `B` INTEGER>, `COUNT` INTEGER>>",
      "keyFormat" : {
        "format" : "KAFKA"
      },
      "valueFormat" : {
        "format" : "JSON"
      }
    },
    "CTAS_OUT_0.KsqlTopic.Source" : {
      "schema" : "`K` INTEGER KEY, `LI` ARRAY<INTEGER>, `S` STRUCT<`A` STRING, `B` INTEGER>",
      "keyFormat" : {
        "format" : "KAFKA"
      },
      "valueFormat" : {
        "format" : "JSON"
      }
    }
  },
  "testCase" : {
    "name" : "valid attr with various non-scalar fields",
    "inputs" : [ {
      "topic" : "in",
      "key" : 1,
      "value" : {
        "s" : {
          "A" : "a",
          "B" : 1
        },
        "li" : [ 1, 2, 3 ]
      }
    }, {
      "topic" : "in",
      "key" : 1,
      "value" : {
        "s" : {
          "A" : "a",
          "B" : 1
        },
        "li" : [ 1, 2, 3 ]
      }
    }, {
      "topic" : "in",
      "key" : 1,
      "value" : {
        "s" : {
          "A" : "a",
          "B" : 1
        },
        "li" : [ 1, 2, 3 ]
      }
    } ],
    "outputs" : [ {
      "topic" : "OUT",
      "key" : 1,
      "value" : {
        "S" : {
          "A" : "a",
          "B" : 1
        },
        "LI" : [ 1, 2, 3 ]
      }
    }, {
      "topic" : "OUT",
      "key" : 1,
      "value" : {
        "S" : {
          "A" : "a",
          "B" : 1
        },
        "LI" : [ 1, 2, 3 ]
      }
    }, {
      "topic" : "OUT",
      "key" : 1,
      "value" : {
        "S" : {
          "A" : "a",
          "B" : 1
        },
        "LI" : [ 1, 2, 3 ]
      }
    } ],
    "topics" : [ {
      "name" : "in",
      "replicas" : 1,
      "numPartitions" : 4
    }, {
      "name" : "OUT",
      "replicas" : 1,
      "numPartitions" : 4
    } ],
    "statements" : [ "CREATE STREAM input (k INT KEY, li ARRAY<INT>, s STRUCT<A STRING, B INT>) WITH (kafka_topic='in', value_format='JSON');", "CREATE TABLE out AS SELECT k, ATTR(li) AS li, ATTR(s) AS s FROM input GROUP BY k;" ],
    "post" : {
      "sources" : [ {
        "name" : "INPUT",
        "type" : "STREAM",
        "schema" : "`K` INTEGER KEY, `LI` ARRAY<INTEGER>, `S` STRUCT<`A` STRING, `B` INTEGER>",
        "keyFormat" : {
          "format" : "KAFKA"
        },
        "valueFormat" : "JSON",
        "keyFeatures" : [ ],
        "valueFeatures" : [ ],
        "isSource" : false
      }, {
        "name" : "OUT",
        "type" : "TABLE",
        "schema" : "`K` INTEGER KEY, `LI` ARRAY<INTEGER>, `S` STRUCT<`A` STRING, `B` INTEGER>",
        "keyFormat" : {
          "format" : "KAFKA"
        },
        "valueFormat" : "JSON",
        "keyFeatures" : [ ],
        "valueFeatures" : [ ],
        "isSource" : false
      } ],
      "topics" : {
        "topics" : [ {
          "name" : "in",
          "keyFormat" : {
            "format" : "KAFKA"
          },
          "valueFormat" : {
            "format" : "JSON"
          },
          "partitions" : 4
        }, {
          "name" : "_confluent-ksql-some.ksql.service.idquery_CTAS_OUT_0-Aggregate-Aggregate-Materialize-changelog",
          "keyFormat" : {
            "format" : "KAFKA"
          },
          "valueFormat" : {
            "format" : "JSON"
          }
        }, {
          "name" : "OUT",
          "keyFormat" : {
            "format" : "KAFKA"
          },
          "valueFormat" : {
            "format" : "JSON"
          },
          "partitions" : 4
        } ]
      }
    }
  }
}