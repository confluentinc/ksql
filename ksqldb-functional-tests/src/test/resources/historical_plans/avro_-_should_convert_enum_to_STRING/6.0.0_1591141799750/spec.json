{
  "version" : "6.0.0",
  "timestamp" : 1591141799750,
  "path" : "query-validation-tests/avro.json",
  "schemas" : {
    "CSAS_OUTPUT_0.KsqlTopic.Source" : {
      "schema" : "`C1` STRING"
    },
    "CSAS_OUTPUT_0.OUTPUT" : {
      "schema" : "`C1` STRING"
    }
  },
  "testCase" : {
    "name" : "should convert enum to STRING",
    "inputs" : [ {
      "topic" : "input",
      "key" : "",
      "value" : {
        "c1" : "SPADES"
      }
    } ],
    "outputs" : [ {
      "topic" : "OUTPUT",
      "key" : null,
      "value" : {
        "C1" : "SPADES"
      }
    } ],
    "topics" : [ {
      "name" : "input",
      "schema" : {
        "type" : "record",
        "name" : "blah",
        "fields" : [ {
          "name" : "c1",
          "type" : {
            "type" : "enum",
            "name" : "Suit",
            "symbols" : [ "SPADES", "HEARTS", "DIAMONDS", "CLUBS" ]
          }
        } ]
      },
      "format" : "AVRO",
      "replicas" : 1,
      "numPartitions" : 1
    }, {
      "name" : "OUTPUT",
      "replicas" : 1,
      "numPartitions" : 4
    } ],
    "statements" : [ "CREATE STREAM INPUT WITH (kafka_topic='input', value_format='AvRo');", "CREATE STREAM OUTPUT AS SELECT * FROM input;" ],
    "post" : {
      "sources" : [ {
        "name" : "INPUT",
        "type" : "STREAM",
        "schema" : "`C1` STRING",
        "keyFormat" : {
          "format" : "KAFKA"
        }
      }, {
        "name" : "OUTPUT",
        "type" : "STREAM",
        "schema" : "`C1` STRING",
        "keyFormat" : {
          "format" : "KAFKA"
        }
      } ],
      "topics" : {
        "topics" : [ {
          "name" : "input",
          "keyFormat" : {
            "format" : "KAFKA"
          },
          "valueFormat" : {
            "format" : "AVRO"
          },
          "partitions" : 1
        }, {
          "name" : "OUTPUT",
          "keyFormat" : {
            "format" : "KAFKA"
          },
          "valueFormat" : {
            "format" : "AVRO"
          },
          "partitions" : 4
        } ]
      }
    }
  }
}