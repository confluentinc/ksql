{
  "version" : "6.1.0",
  "timestamp" : 1593191100221,
  "path" : "query-validation-tests/case-expression.json",
  "schemas" : {
    "CTAS_RUSSELL_3K_HOURLY_0.KsqlTopic.Source" : "STRUCT<QUANTITY INT, PRICE INT, BUY BOOLEAN> NOT NULL",
    "CTAS_RUSSELL_3K_HOURLY_0.Aggregate.GroupBy" : "STRUCT<TICKERID VARCHAR, ROWTIME BIGINT, QUANTITY INT, BUY BOOLEAN, PRICE INT, KSQL_INTERNAL_COL_5 INT, KSQL_INTERNAL_COL_6 INT> NOT NULL",
    "CTAS_RUSSELL_3K_HOURLY_0.Aggregate.Aggregate.Materialize" : "STRUCT<TICKERID VARCHAR, ROWTIME BIGINT, QUANTITY INT, BUY BOOLEAN, PRICE INT, KSQL_AGG_VARIABLE_0 BIGINT, KSQL_AGG_VARIABLE_1 INT, KSQL_AGG_VARIABLE_2 INT, KSQL_AGG_VARIABLE_3 INT, KSQL_AGG_VARIABLE_4 INT, KSQL_AGG_VARIABLE_5 INT> NOT NULL",
    "CTAS_RUSSELL_3K_HOURLY_0.RUSSELL_3K_HOURLY" : "STRUCT<TRADECOUNT BIGINT, TRADEVOLUMN INT, MINBUYPRICE INT, MAXBUYPRICE INT, MINSELLPRICE INT, MAXSELLPRICE INT> NOT NULL"
  },
  "testCase" : {
    "name" : "as param to UDAF",
    "inputs" : [ {
      "topic" : "test_topic",
      "key" : "AEIS",
      "value" : {
        "userId" : "bob67",
        "quantity" : 76,
        "price" : 120125102,
        "buy" : true
      }
    }, {
      "topic" : "test_topic",
      "key" : "AEIS",
      "value" : {
        "userId" : "bob67",
        "quantity" : 10,
        "price" : 100125102,
        "buy" : false
      }
    } ],
    "outputs" : [ {
      "topic" : "RUSSELL_3K_HOURLY",
      "key" : "AEIS",
      "value" : {
        "TRADECOUNT" : 1,
        "TRADEVOLUMN" : 76,
        "MINBUYPRICE" : 120125102,
        "MAXBUYPRICE" : 120125102,
        "MINSELLPRICE" : null,
        "MAXSELLPRICE" : null
      },
      "window" : {
        "start" : 0,
        "end" : 3600000,
        "type" : "TIME"
      }
    }, {
      "topic" : "RUSSELL_3K_HOURLY",
      "key" : "AEIS",
      "value" : {
        "TRADECOUNT" : 2,
        "TRADEVOLUMN" : 86,
        "MINBUYPRICE" : 120125102,
        "MAXBUYPRICE" : 120125102,
        "MINSELLPRICE" : 100125102,
        "MAXSELLPRICE" : 100125102
      },
      "window" : {
        "start" : 0,
        "end" : 3600000,
        "type" : "TIME"
      }
    } ],
    "topics" : [ {
      "name" : "RUSSELL_3K_HOURLY",
      "replicas" : 1,
      "numPartitions" : 4
    }, {
      "name" : "test_topic",
      "replicas" : 1,
      "numPartitions" : 4
    } ],
    "statements" : [ "CREATE STREAM russell_3k_trades (tickerId VARCHAR KEY, quantity INT, price INT, buy BOOLEAN) WITH (kafka_topic='test_topic',value_format='json');", "CREATE TABLE russell_3k_hourly AS SELECT tickerId, count(*) as tradeCount, sum(quantity) as tradeVolumn, min(CASE WHEN buy THEN price ELSE null END) as minBuyPrice, max(CASE WHEN buy THEN price ELSE null END) as maxBuyPrice, min(CASE WHEN buy THEN null ELSE price END) as minSellPrice, max(CASE WHEN buy THEN null ELSE price END) as maxSellPrice FROM russell_3k_trades WINDOW TUMBLING (SIZE 1 HOUR) GROUP BY tickerId;" ],
    "post" : {
      "topics" : {
        "topics" : [ {
          "name" : "RUSSELL_3K_HOURLY",
          "keyFormat" : {
            "formatInfo" : {
              "format" : "KAFKA"
            },
            "windowInfo" : {
              "type" : "TUMBLING",
              "size" : 3600.000000000
            }
          },
          "valueFormat" : {
            "format" : "JSON"
          },
          "partitions" : 4
        }, {
          "name" : "_confluent-ksql-some.ksql.service.idquery_CTAS_RUSSELL_3K_HOURLY_0-Aggregate-Aggregate-Materialize-changelog",
          "keyFormat" : {
            "formatInfo" : {
              "format" : "KAFKA"
            },
            "windowInfo" : {
              "type" : "TUMBLING",
              "size" : 3600.000000000
            }
          },
          "valueFormat" : {
            "format" : "JSON"
          }
        }, {
          "name" : "test_topic",
          "keyFormat" : {
            "formatInfo" : {
              "format" : "KAFKA"
            }
          },
          "valueFormat" : {
            "format" : "JSON"
          },
          "partitions" : 4
        } ]
      }
    }
  }
}