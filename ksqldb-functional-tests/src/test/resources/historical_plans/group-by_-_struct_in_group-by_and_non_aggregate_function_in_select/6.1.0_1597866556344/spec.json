{
  "version" : "6.1.0",
  "timestamp" : 1597866556344,
  "path" : "query-validation-tests/group-by.json",
  "schemas" : {
    "CTAS_OUTPUT_0.Aggregate.GroupBy" : {
      "schema" : "`A` STRING KEY, `COL1` STRUCT<`A` STRING, `B` INTEGER>, `ROWTIME` BIGINT",
      "serdeOptions" : [ ]
    },
    "CTAS_OUTPUT_0.KsqlTopic.Source" : {
      "schema" : "`ID` INTEGER KEY, `COL1` STRUCT<`A` STRING, `B` INTEGER>",
      "serdeOptions" : [ ]
    },
    "CTAS_OUTPUT_0.Aggregate.Aggregate.Materialize" : {
      "schema" : "`A` STRING KEY, `COL1` STRUCT<`A` STRING, `B` INTEGER>, `ROWTIME` BIGINT, `KSQL_AGG_VARIABLE_0` BIGINT",
      "serdeOptions" : [ ]
    },
    "CTAS_OUTPUT_0.OUTPUT" : {
      "schema" : "`NEW_KEY` STRING KEY, `VV` STRING, `COUNT` BIGINT",
      "serdeOptions" : [ ]
    }
  },
  "testCase" : {
    "name" : "struct in group-by and non aggregate function in select",
    "inputs" : [ {
      "topic" : "test_topic",
      "key" : 0,
      "value" : {
        "col1" : {
          "a" : "lala",
          "b" : 1
        }
      }
    }, {
      "topic" : "test_topic",
      "key" : 1,
      "value" : {
        "col1" : {
          "a" : "lala",
          "b" : 2
        }
      }
    }, {
      "topic" : "test_topic",
      "key" : 2,
      "value" : {
        "col1" : {
          "a" : "wonderland",
          "b" : 3
        }
      }
    }, {
      "topic" : "test_topic",
      "key" : 3,
      "value" : {
        "col1" : {
          "a" : "lamb",
          "b" : 4
        }
      }
    }, {
      "topic" : "test_topic",
      "key" : 4,
      "value" : {
        "col1" : null
      }
    } ],
    "outputs" : [ {
      "topic" : "OUTPUT",
      "key" : "lala",
      "value" : {
        "VV" : "lala",
        "COUNT" : 1
      }
    }, {
      "topic" : "OUTPUT",
      "key" : "lala",
      "value" : {
        "VV" : "lala",
        "COUNT" : 2
      }
    }, {
      "topic" : "OUTPUT",
      "key" : "wonderland",
      "value" : {
        "VV" : "wonderland",
        "COUNT" : 1
      }
    }, {
      "topic" : "OUTPUT",
      "key" : "lamb",
      "value" : {
        "VV" : "lamb",
        "COUNT" : 1
      }
    } ],
    "topics" : [ {
      "name" : "OUTPUT",
      "replicas" : 1,
      "numPartitions" : 4
    }, {
      "name" : "test_topic",
      "replicas" : 1,
      "numPartitions" : 4
    } ],
    "statements" : [ "CREATE STREAM INPUT (id INT KEY, col1 STRUCT<a VARCHAR, b INT>) WITH (kafka_topic='test_topic', value_format='json');", "CREATE TABLE OUTPUT AS SELECT col1->a AS NEW_KEY, AS_VALUE(col1->a) as VV, COUNT(*) AS COUNT FROM INPUT GROUP BY col1->a;" ],
    "post" : {
      "sources" : [ {
        "name" : "OUTPUT",
        "type" : "TABLE",
        "schema" : "`NEW_KEY` STRING KEY, `VV` STRING, `COUNT` BIGINT",
        "keyFormat" : {
          "format" : "KAFKA"
        },
        "serdeOptions" : [ ]
      }, {
        "name" : "INPUT",
        "type" : "STREAM",
        "schema" : "`ID` INTEGER KEY, `COL1` STRUCT<`A` STRING, `B` INTEGER>",
        "keyFormat" : {
          "format" : "KAFKA"
        },
        "serdeOptions" : [ ]
      } ],
      "topics" : {
        "topics" : [ {
          "name" : "test_topic",
          "keyFormat" : {
            "formatInfo" : {
              "format" : "KAFKA"
            }
          },
          "valueFormat" : {
            "format" : "JSON"
          },
          "partitions" : 4
        }, {
          "name" : "_confluent-ksql-some.ksql.service.idquery_CTAS_OUTPUT_0-Aggregate-GroupBy-repartition",
          "keyFormat" : {
            "formatInfo" : {
              "format" : "KAFKA"
            }
          },
          "valueFormat" : {
            "format" : "JSON"
          }
        }, {
          "name" : "_confluent-ksql-some.ksql.service.idquery_CTAS_OUTPUT_0-Aggregate-Aggregate-Materialize-changelog",
          "keyFormat" : {
            "formatInfo" : {
              "format" : "KAFKA"
            }
          },
          "valueFormat" : {
            "format" : "JSON"
          }
        }, {
          "name" : "OUTPUT",
          "keyFormat" : {
            "formatInfo" : {
              "format" : "KAFKA"
            }
          },
          "valueFormat" : {
            "format" : "JSON"
          },
          "partitions" : 4
        } ]
      }
    }
  }
}