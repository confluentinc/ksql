{
  "plan" : [ {
    "@type" : "ksqlPlanV1",
    "statementText" : "CREATE STREAM S1 (ID INTEGER KEY, V BIGINT) WITH (KAFKA_TOPIC='left_topic', KEY_FORMAT='JSON_SR', VALUE_FORMAT='JSON', WINDOW_SIZE='5 SECONDS', WINDOW_TYPE='Hopping');",
    "ddlCommand" : {
      "@type" : "createStreamV1",
      "sourceName" : "S1",
      "schema" : "`ID` INTEGER KEY, `V` BIGINT",
      "topicName" : "left_topic",
      "formats" : {
        "keyFormat" : {
          "format" : "JSON_SR"
        },
        "valueFormat" : {
          "format" : "JSON"
        },
        "keyFeatures" : [ "UNWRAP_SINGLES" ]
      },
      "windowInfo" : {
        "type" : "HOPPING",
        "size" : 5.000000000
      },
      "orReplace" : false
    }
  }, {
    "@type" : "ksqlPlanV1",
    "statementText" : "CREATE STREAM S2 (ID INTEGER KEY, V BIGINT) WITH (KAFKA_TOPIC='right_topic', KEY_FORMAT='JSON_SR', VALUE_FORMAT='JSON', WINDOW_SIZE='2 SECOND', WINDOW_TYPE='Tumbling');",
    "ddlCommand" : {
      "@type" : "createStreamV1",
      "sourceName" : "S2",
      "schema" : "`ID` INTEGER KEY, `V` BIGINT",
      "topicName" : "right_topic",
      "formats" : {
        "keyFormat" : {
          "format" : "JSON_SR"
        },
        "valueFormat" : {
          "format" : "JSON"
        },
        "keyFeatures" : [ "UNWRAP_SINGLES" ]
      },
      "windowInfo" : {
        "type" : "TUMBLING",
        "size" : 2.000000000
      },
      "orReplace" : false
    }
  }, {
    "@type" : "ksqlPlanV1",
    "statementText" : "CREATE STREAM OUTPUT AS SELECT\n  *,\n  S1.ROWTIME S1_ROWTIME,\n  S2.ROWTIME S2_ROWTIME\nFROM S1 S1\nINNER JOIN S2 S2 WITHIN 1 MINUTES ON ((S1.ID = S2.ID))\nEMIT CHANGES",
    "ddlCommand" : {
      "@type" : "createStreamV1",
      "sourceName" : "OUTPUT",
      "schema" : "`S1_ID` INTEGER KEY, `S1_WINDOWSTART` BIGINT, `S1_WINDOWEND` BIGINT, `S1_V` BIGINT, `S2_ID` INTEGER, `S2_WINDOWSTART` BIGINT, `S2_WINDOWEND` BIGINT, `S2_V` BIGINT, `S1_ROWTIME` BIGINT, `S2_ROWTIME` BIGINT",
      "topicName" : "OUTPUT",
      "formats" : {
        "keyFormat" : {
          "format" : "JSON_SR"
        },
        "valueFormat" : {
          "format" : "JSON"
        },
        "keyFeatures" : [ "UNWRAP_SINGLES" ]
      },
      "windowInfo" : {
        "type" : "HOPPING",
        "size" : 5.000000000
      },
      "orReplace" : false
    },
    "queryPlan" : {
      "sources" : [ "S1", "S2" ],
      "sink" : "OUTPUT",
      "physicalPlan" : {
        "@type" : "streamSinkV1",
        "properties" : {
          "queryContext" : "OUTPUT"
        },
        "source" : {
          "@type" : "streamSelectV1",
          "properties" : {
            "queryContext" : "Project"
          },
          "source" : {
            "@type" : "streamStreamJoinV1",
            "properties" : {
              "queryContext" : "Join"
            },
            "joinType" : "INNER",
            "leftInternalFormats" : {
              "keyFormat" : {
                "format" : "JSON_SR"
              },
              "valueFormat" : {
                "format" : "JSON"
              },
              "keyFeatures" : [ "UNWRAP_SINGLES" ]
            },
            "rightInternalFormats" : {
              "keyFormat" : {
                "format" : "JSON_SR"
              },
              "valueFormat" : {
                "format" : "JSON"
              },
              "keyFeatures" : [ "UNWRAP_SINGLES" ]
            },
            "leftSource" : {
              "@type" : "streamSelectV1",
              "properties" : {
                "queryContext" : "PrependAliasLeft"
              },
              "source" : {
                "@type" : "streamSelectKeyV2",
                "properties" : {
                  "queryContext" : "LeftSourceKeyed"
                },
                "source" : {
                  "@type" : "windowedStreamSourceV1",
                  "properties" : {
                    "queryContext" : "KafkaTopic_Left/Source"
                  },
                  "topicName" : "left_topic",
                  "formats" : {
                    "keyFormat" : {
                      "format" : "JSON_SR"
                    },
                    "valueFormat" : {
                      "format" : "JSON"
                    },
                    "keyFeatures" : [ "UNWRAP_SINGLES" ]
                  },
                  "windowInfo" : {
                    "type" : "HOPPING",
                    "size" : 5.000000000
                  },
                  "sourceSchema" : "`ID` INTEGER KEY, `V` BIGINT"
                },
                "keyExpression" : "ID"
              },
              "keyColumnNames" : [ "S1_ID" ],
              "selectExpressions" : [ "V AS S1_V", "ROWTIME AS S1_ROWTIME", "ID AS S1_ID", "WINDOWSTART AS S1_WINDOWSTART", "WINDOWEND AS S1_WINDOWEND" ]
            },
            "rightSource" : {
              "@type" : "streamSelectV1",
              "properties" : {
                "queryContext" : "PrependAliasRight"
              },
              "source" : {
                "@type" : "streamSelectKeyV2",
                "properties" : {
                  "queryContext" : "RightSourceKeyed"
                },
                "source" : {
                  "@type" : "windowedStreamSourceV1",
                  "properties" : {
                    "queryContext" : "KafkaTopic_Right/Source"
                  },
                  "topicName" : "right_topic",
                  "formats" : {
                    "keyFormat" : {
                      "format" : "JSON_SR"
                    },
                    "valueFormat" : {
                      "format" : "JSON"
                    },
                    "keyFeatures" : [ "UNWRAP_SINGLES" ]
                  },
                  "windowInfo" : {
                    "type" : "TUMBLING",
                    "size" : 2.000000000
                  },
                  "sourceSchema" : "`ID` INTEGER KEY, `V` BIGINT"
                },
                "keyExpression" : "ID"
              },
              "keyColumnNames" : [ "S2_ID" ],
              "selectExpressions" : [ "V AS S2_V", "ROWTIME AS S2_ROWTIME", "ID AS S2_ID", "WINDOWSTART AS S2_WINDOWSTART", "WINDOWEND AS S2_WINDOWEND" ]
            },
            "beforeMillis" : 60.000000000,
            "afterMillis" : 60.000000000,
            "keyColName" : "S1_ID"
          },
          "keyColumnNames" : [ "S1_ID" ],
          "selectExpressions" : [ "S1_WINDOWSTART AS S1_WINDOWSTART", "S1_WINDOWEND AS S1_WINDOWEND", "S1_V AS S1_V", "S2_ID AS S2_ID", "S2_WINDOWSTART AS S2_WINDOWSTART", "S2_WINDOWEND AS S2_WINDOWEND", "S2_V AS S2_V", "S1_ROWTIME AS S1_ROWTIME", "S2_ROWTIME AS S2_ROWTIME" ]
        },
        "formats" : {
          "keyFormat" : {
            "format" : "JSON_SR"
          },
          "valueFormat" : {
            "format" : "JSON"
          },
          "keyFeatures" : [ "UNWRAP_SINGLES" ]
        },
        "topicName" : "OUTPUT"
      },
      "queryId" : "CSAS_OUTPUT_0"
    }
  } ],
  "configs" : {
    "ksql.extension.dir" : "ext",
    "ksql.streams.cache.max.bytes.buffering" : "0",
    "ksql.security.extension.class" : null,
    "metric.reporters" : "",
    "ksql.transient.prefix" : "transient_",
    "ksql.query.status.running.threshold.seconds" : "300",
    "ksql.streams.default.deserialization.exception.handler" : "io.confluent.ksql.errors.LogMetricAndContinueExceptionHandler",
    "ksql.output.topic.name.prefix" : "",
    "ksql.query.pull.enable.standby.reads" : "false",
    "ksql.persistence.default.format.key" : "KAFKA",
    "ksql.query.error.max.queue.size" : "10",
    "ksql.variable.substitution.enable" : "true",
    "ksql.internal.topic.min.insync.replicas" : "1",
    "ksql.streams.shutdown.timeout.ms" : "300000",
    "ksql.internal.topic.replicas" : "1",
    "ksql.insert.into.values.enabled" : "true",
    "ksql.key.format.enabled" : "false",
    "ksql.query.pull.max.allowed.offset.lag" : "9223372036854775807",
    "ksql.query.pull.max.qps" : "2147483647",
    "ksql.access.validator.enable" : "auto",
    "ksql.streams.bootstrap.servers" : "localhost:0",
    "ksql.query.pull.metrics.enabled" : "false",
    "ksql.create.or.replace.enabled" : "true",
    "ksql.metrics.extension" : null,
    "ksql.hidden.topics" : "_confluent.*,__confluent.*,_schemas,__consumer_offsets,__transaction_state,connect-configs,connect-offsets,connect-status,connect-statuses",
    "ksql.cast.strings.preserve.nulls" : "true",
    "ksql.authorization.cache.max.entries" : "10000",
    "ksql.pull.queries.enable" : "true",
    "ksql.multicol.key.format.enabled" : "false",
    "ksql.suppress.enabled" : "false",
    "ksql.sink.window.change.log.additional.retention" : "1000000",
    "ksql.readonly.topics" : "_confluent.*,__confluent.*,_schemas,__consumer_offsets,__transaction_state,connect-configs,connect-offsets,connect-status,connect-statuses",
    "ksql.query.persistent.active.limit" : "2147483647",
    "ksql.persistence.wrap.single.values" : null,
    "ksql.authorization.cache.expiry.time.secs" : "30",
    "ksql.query.retry.backoff.initial.ms" : "15000",
    "ksql.schema.registry.url" : "",
    "ksql.properties.overrides.denylist" : "",
    "ksql.streams.auto.offset.reset" : "earliest",
    "ksql.connect.url" : "http://localhost:8083",
    "ksql.service.id" : "some.ksql.service.id",
    "ksql.complex.key.format.enabled" : "false",
    "ksql.streams.default.production.exception.handler" : "io.confluent.ksql.errors.ProductionExceptionHandlerUtil$LogAndFailProductionExceptionHandler",
    "ksql.streams.commit.interval.ms" : "2000",
    "ksql.streams.auto.commit.interval.ms" : "0",
    "ksql.streams.topology.optimization" : "all",
    "ksql.query.retry.backoff.max.ms" : "900000",
    "ksql.streams.num.stream.threads" : "4",
    "ksql.timestamp.throw.on.invalid" : "false",
    "ksql.metrics.tags.custom" : "",
    "ksql.persistence.default.format.value" : null,
    "ksql.udfs.enabled" : "true",
    "ksql.udf.enable.security.manager" : "true",
    "ksql.connect.worker.config" : "",
    "ksql.udf.collect.metrics" : "false",
    "ksql.query.pull.thread.pool.size" : "100",
    "ksql.persistent.prefix" : "query_",
    "ksql.metastore.backup.location" : "",
    "ksql.error.classifier.regex" : "",
    "ksql.suppress.buffer.size.bytes" : "-1"
  }
}