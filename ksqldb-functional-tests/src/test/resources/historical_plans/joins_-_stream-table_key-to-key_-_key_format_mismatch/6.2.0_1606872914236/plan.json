{
  "plan" : [ {
    "@type" : "ksqlPlanV1",
    "statementText" : "CREATE TABLE T (ID INTEGER PRIMARY KEY, VAL STRING) WITH (KAFKA_TOPIC='t', KEY_FORMAT='KAFKA', VALUE_FORMAT='JSON');",
    "ddlCommand" : {
      "@type" : "createTableV1",
      "sourceName" : "T",
      "schema" : "`ID` INTEGER KEY, `VAL` STRING",
      "topicName" : "t",
      "formats" : {
        "keyFormat" : {
          "format" : "KAFKA"
        },
        "valueFormat" : {
          "format" : "JSON"
        }
      },
      "orReplace" : false
    }
  }, {
    "@type" : "ksqlPlanV1",
    "statementText" : "CREATE STREAM S (ID INTEGER KEY, FOO INTEGER) WITH (KAFKA_TOPIC='s', KEY_FORMAT='DELIMITED', VALUE_FORMAT='JSON');",
    "ddlCommand" : {
      "@type" : "createStreamV1",
      "sourceName" : "S",
      "schema" : "`ID` INTEGER KEY, `FOO` INTEGER",
      "topicName" : "s",
      "formats" : {
        "keyFormat" : {
          "format" : "DELIMITED"
        },
        "valueFormat" : {
          "format" : "JSON"
        }
      },
      "orReplace" : false
    }
  }, {
    "@type" : "ksqlPlanV1",
    "statementText" : "CREATE STREAM OUTPUT AS SELECT\n  S.ID S_ID,\n  T.VAL VAL\nFROM S S\nINNER JOIN T T ON ((S.ID = T.ID))\nEMIT CHANGES",
    "ddlCommand" : {
      "@type" : "createStreamV1",
      "sourceName" : "OUTPUT",
      "schema" : "`S_ID` INTEGER KEY, `VAL` STRING",
      "topicName" : "OUTPUT",
      "formats" : {
        "keyFormat" : {
          "format" : "DELIMITED"
        },
        "valueFormat" : {
          "format" : "JSON"
        }
      },
      "orReplace" : false
    },
    "queryPlan" : {
      "sources" : [ "S", "T" ],
      "sink" : "OUTPUT",
      "physicalPlan" : {
        "@type" : "streamSinkV1",
        "properties" : {
          "queryContext" : "OUTPUT"
        },
        "source" : {
          "@type" : "streamSelectV1",
          "properties" : {
            "queryContext" : "Project"
          },
          "source" : {
            "@type" : "streamTableJoinV1",
            "properties" : {
              "queryContext" : "Join"
            },
            "joinType" : "INNER",
            "internalFormats" : {
              "keyFormat" : {
                "format" : "DELIMITED"
              },
              "valueFormat" : {
                "format" : "JSON"
              }
            },
            "leftSource" : {
              "@type" : "streamSelectV1",
              "properties" : {
                "queryContext" : "PrependAliasLeft"
              },
              "source" : {
                "@type" : "streamSourceV1",
                "properties" : {
                  "queryContext" : "KafkaTopic_Left/Source"
                },
                "topicName" : "s",
                "formats" : {
                  "keyFormat" : {
                    "format" : "DELIMITED"
                  },
                  "valueFormat" : {
                    "format" : "JSON"
                  }
                },
                "sourceSchema" : "`ID` INTEGER KEY, `FOO` INTEGER"
              },
              "keyColumnNames" : [ "S_ID" ],
              "selectExpressions" : [ "FOO AS S_FOO", "ROWTIME AS S_ROWTIME", "ID AS S_ID" ]
            },
            "rightSource" : {
              "@type" : "tableSelectV1",
              "properties" : {
                "queryContext" : "PrependAliasRight"
              },
              "source" : {
                "@type" : "tableSelectKeyV1",
                "properties" : {
                  "queryContext" : "RightSourceKeyed"
                },
                "source" : {
                  "@type" : "tableSourceV1",
                  "properties" : {
                    "queryContext" : "KafkaTopic_Right/Source"
                  },
                  "topicName" : "t",
                  "formats" : {
                    "keyFormat" : {
                      "format" : "KAFKA"
                    },
                    "valueFormat" : {
                      "format" : "JSON"
                    }
                  },
                  "sourceSchema" : "`ID` INTEGER KEY, `VAL` STRING",
                  "forceChangelog" : true
                },
                "internalFormats" : {
                  "keyFormat" : {
                    "format" : "DELIMITED"
                  },
                  "valueFormat" : {
                    "format" : "JSON"
                  }
                },
                "keyExpression" : "ID"
              },
              "keyColumnNames" : [ "T_ID" ],
              "selectExpressions" : [ "VAL AS T_VAL", "ROWTIME AS T_ROWTIME", "ID AS T_ID" ]
            },
            "keyColName" : "S_ID"
          },
          "keyColumnNames" : [ "S_ID" ],
          "selectExpressions" : [ "T_VAL AS VAL" ]
        },
        "formats" : {
          "keyFormat" : {
            "format" : "DELIMITED"
          },
          "valueFormat" : {
            "format" : "JSON"
          }
        },
        "topicName" : "OUTPUT"
      },
      "queryId" : "CSAS_OUTPUT_0"
    }
  } ],
  "configs" : {
    "ksql.extension.dir" : "ext",
    "ksql.streams.cache.max.bytes.buffering" : "0",
    "ksql.security.extension.class" : null,
    "metric.reporters" : "",
    "ksql.transient.prefix" : "transient_",
    "ksql.query.status.running.threshold.seconds" : "300",
    "ksql.streams.default.deserialization.exception.handler" : "io.confluent.ksql.errors.LogMetricAndContinueExceptionHandler",
    "ksql.output.topic.name.prefix" : "",
    "ksql.query.pull.enable.standby.reads" : "false",
    "ksql.persistence.default.format.key" : "KAFKA",
    "ksql.query.error.max.queue.size" : "10",
    "ksql.variable.substitution.enable" : "true",
    "ksql.internal.topic.min.insync.replicas" : "1",
    "ksql.streams.shutdown.timeout.ms" : "300000",
    "ksql.internal.topic.replicas" : "1",
    "ksql.insert.into.values.enabled" : "true",
    "ksql.key.format.enabled" : "false",
    "ksql.query.pull.max.allowed.offset.lag" : "9223372036854775807",
    "ksql.query.pull.max.qps" : "2147483647",
    "ksql.access.validator.enable" : "auto",
    "ksql.streams.bootstrap.servers" : "localhost:0",
    "ksql.query.pull.metrics.enabled" : "false",
    "ksql.create.or.replace.enabled" : "true",
    "ksql.metrics.extension" : null,
    "ksql.hidden.topics" : "_confluent.*,__confluent.*,_schemas,__consumer_offsets,__transaction_state,connect-configs,connect-offsets,connect-status,connect-statuses",
    "ksql.cast.strings.preserve.nulls" : "true",
    "ksql.authorization.cache.max.entries" : "10000",
    "ksql.pull.queries.enable" : "true",
    "ksql.suppress.enabled" : "false",
    "ksql.sink.window.change.log.additional.retention" : "1000000",
    "ksql.readonly.topics" : "_confluent.*,__confluent.*,_schemas,__consumer_offsets,__transaction_state,connect-configs,connect-offsets,connect-status,connect-statuses",
    "ksql.query.persistent.active.limit" : "2147483647",
    "ksql.persistence.wrap.single.values" : null,
    "ksql.authorization.cache.expiry.time.secs" : "30",
    "ksql.query.retry.backoff.initial.ms" : "15000",
    "ksql.schema.registry.url" : "",
    "ksql.properties.overrides.denylist" : "",
    "ksql.streams.auto.offset.reset" : "earliest",
    "ksql.connect.url" : "http://localhost:8083",
    "ksql.service.id" : "some.ksql.service.id",
    "ksql.streams.default.production.exception.handler" : "io.confluent.ksql.errors.ProductionExceptionHandlerUtil$LogAndFailProductionExceptionHandler",
    "ksql.streams.commit.interval.ms" : "2000",
    "ksql.streams.auto.commit.interval.ms" : "0",
    "ksql.streams.topology.optimization" : "all",
    "ksql.query.retry.backoff.max.ms" : "900000",
    "ksql.streams.num.stream.threads" : "4",
    "ksql.timestamp.throw.on.invalid" : "false",
    "ksql.metrics.tags.custom" : "",
    "ksql.persistence.default.format.value" : null,
    "ksql.udfs.enabled" : "true",
    "ksql.udf.enable.security.manager" : "true",
    "ksql.connect.worker.config" : "",
    "ksql.udf.collect.metrics" : "false",
    "ksql.query.pull.thread.pool.size" : "100",
    "ksql.persistent.prefix" : "query_",
    "ksql.metastore.backup.location" : "",
    "ksql.error.classifier.regex" : "",
    "ksql.suppress.buffer.size.bytes" : "-1"
  }
}