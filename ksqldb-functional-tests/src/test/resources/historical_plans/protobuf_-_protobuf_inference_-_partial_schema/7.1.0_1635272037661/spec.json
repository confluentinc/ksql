{
  "version" : "7.1.0",
  "timestamp" : 1635272037661,
  "path" : "query-validation-tests/protobuf.json",
  "schemas" : {
    "CSAS_OUTPUT_0.KsqlTopic.Source" : {
      "schema" : "`K` STRING KEY, `c1` BOOLEAN, `c2` INTEGER, `c3` BIGINT, `c4` DOUBLE, `c5` STRING, `c6` DECIMAL(4, 2)",
      "keyFormat" : {
        "format" : "KAFKA"
      },
      "valueFormat" : {
        "format" : "PROTOBUF",
        "properties" : {
          "VALUE_SCHEMA_ID" : "1"
        }
      }
    },
    "CSAS_OUTPUT_0.OUTPUT" : {
      "schema" : "`K` STRING KEY, `c1` BOOLEAN, `c2` INTEGER, `c3` BIGINT, `c4` DOUBLE, `c5` STRING, `c6` DECIMAL(4, 2)",
      "keyFormat" : {
        "format" : "KAFKA"
      },
      "valueFormat" : {
        "format" : "PROTOBUF",
        "properties" : {
          "VALUE_SCHEMA_ID" : "1"
        }
      }
    }
  },
  "testCase" : {
    "name" : "protobuf inference - partial schema",
    "inputs" : [ {
      "topic" : "input",
      "key" : "a",
      "value" : {
        "c1" : true,
        "c2" : 1,
        "c3" : 400000000000,
        "c4" : 1.284765648,
        "c5" : "hello",
        "c6" : 10.01
      }
    } ],
    "outputs" : [ {
      "topic" : "OUTPUT",
      "key" : "a",
      "value" : {
        "c1" : true,
        "c2" : 1,
        "c3" : 400000000000,
        "c4" : 1.284765648,
        "c5" : "hello",
        "c6" : 10.01
      }
    } ],
    "topics" : [ {
      "name" : "input",
      "valueSchema" : "syntax = \"proto3\";\n\nimport \"confluent/type/decimal.proto\";\n\nmessage ConfluentDefault1 {\n  bool c1 = 1;\n  int32 c2 = 2;\n  int64 c3 = 3;\n  double c4 = 4;\n  string c5 = 5;\n  confluent.type.Decimal c6 = 6 [(confluent.field_meta) = {\n    params: [\n      {\n        value: \"4\",\n        key: \"precision\"\n      },\n      {\n        value: \"2\",\n        key: \"scale\"\n      }\n    ]\n  }];\n}\n",
      "valueFormat" : "PROTOBUF",
      "replicas" : 1,
      "numPartitions" : 1
    }, {
      "name" : "OUTPUT",
      "replicas" : 1,
      "numPartitions" : 4
    } ],
    "statements" : [ "CREATE STREAM INPUT (K STRING KEY) WITH (kafka_topic='input', value_format='PROTOBUF');", "CREATE STREAM OUTPUT AS SELECT * FROM input;" ],
    "post" : {
      "sources" : [ {
        "name" : "INPUT",
        "type" : "STREAM",
        "schema" : "`K` STRING KEY, `c1` BOOLEAN, `c2` INTEGER, `c3` BIGINT, `c4` DOUBLE, `c5` STRING, `c6` DECIMAL(4, 2)",
        "keyFormat" : {
          "format" : "KAFKA"
        },
        "valueFormat" : "PROTOBUF",
        "keyFeatures" : [ ],
        "valueFeatures" : [ ],
        "isSource" : false
      }, {
        "name" : "OUTPUT",
        "type" : "STREAM",
        "schema" : "`K` STRING KEY, `c1` BOOLEAN, `c2` INTEGER, `c3` BIGINT, `c4` DOUBLE, `c5` STRING, `c6` DECIMAL(4, 2)",
        "keyFormat" : {
          "format" : "KAFKA"
        },
        "valueFormat" : "PROTOBUF",
        "keyFeatures" : [ ],
        "valueFeatures" : [ ],
        "isSource" : false
      } ],
      "topics" : {
        "topics" : [ {
          "name" : "input",
          "keyFormat" : {
            "format" : "KAFKA"
          },
          "valueFormat" : {
            "format" : "PROTOBUF",
            "properties" : {
              "VALUE_SCHEMA_ID" : "1"
            }
          },
          "partitions" : 1,
          "valueSchema" : "syntax = \"proto3\";\n\nimport \"confluent/type/decimal.proto\";\n\nmessage ConfluentDefault1 {\n  bool c1 = 1;\n  int32 c2 = 2;\n  int64 c3 = 3;\n  double c4 = 4;\n  string c5 = 5;\n  confluent.type.Decimal c6 = 6 [(confluent.field_meta) = {\n    params: [\n      {\n        value: \"4\",\n        key: \"precision\"\n      },\n      {\n        value: \"2\",\n        key: \"scale\"\n      }\n    ]\n  }];\n}\n"
        }, {
          "name" : "OUTPUT",
          "keyFormat" : {
            "format" : "KAFKA"
          },
          "valueFormat" : {
            "format" : "PROTOBUF",
            "properties" : {
              "VALUE_SCHEMA_ID" : "1"
            }
          },
          "partitions" : 4,
          "valueSchema" : "syntax = \"proto3\";\n\nimport \"confluent/type/decimal.proto\";\n\nmessage ConnectDefault1 {\n  bool c1 = 1;\n  int32 c2 = 2;\n  int64 c3 = 3;\n  double c4 = 4;\n  string c5 = 5;\n  confluent.type.Decimal c6 = 6 [(confluent.field_meta) = {\n    params: [\n      {\n        value: \"4\",\n        key: \"precision\"\n      },\n      {\n        value: \"2\",\n        key: \"scale\"\n      }\n    ]\n  }];\n}\n"
        } ]
      }
    }
  }
}