{
  "plan" : [ {
    "@type" : "ksqlPlanV1",
    "statementText" : "CREATE STREAM ORDERS (ORDERTIME BIGINT, ORDERID BIGINT, ITEMID STRUCT<ITEMID BIGINT, NAME STRING, CATEGORY STRUCT<ID BIGINT, NAME STRING>>, ORDERUNITS DOUBLE, ARRAYCOL ARRAY<DOUBLE>, MAPCOL MAP<STRING, DOUBLE>, ADDRESS STRUCT<NUMBER BIGINT, STREET STRING, CITY STRING, STATE STRING, ZIPCODE BIGINT>) WITH (KAFKA_TOPIC='test_topic', VALUE_FORMAT='PROTOBUF');",
    "ddlCommand" : {
      "@type" : "createStreamV1",
      "sourceName" : "ORDERS",
      "schema" : "`ROWKEY` STRING KEY, `ORDERTIME` BIGINT, `ORDERID` BIGINT, `ITEMID` STRUCT<`ITEMID` BIGINT, `NAME` STRING, `CATEGORY` STRUCT<`ID` BIGINT, `NAME` STRING>>, `ORDERUNITS` DOUBLE, `ARRAYCOL` ARRAY<DOUBLE>, `MAPCOL` MAP<STRING, DOUBLE>, `ADDRESS` STRUCT<`NUMBER` BIGINT, `STREET` STRING, `CITY` STRING, `STATE` STRING, `ZIPCODE` BIGINT>",
      "keyField" : null,
      "timestampColumn" : null,
      "topicName" : "test_topic",
      "formats" : {
        "keyFormat" : {
          "format" : "KAFKA",
          "properties" : { }
        },
        "valueFormat" : {
          "format" : "PROTOBUF",
          "properties" : { }
        },
        "options" : [ ]
      },
      "windowInfo" : null
    },
    "queryPlan" : null
  }, {
    "@type" : "ksqlPlanV1",
    "statementText" : "CREATE STREAM S5 AS SELECT\n  (ORDERS.ITEMID->ITEMID * 10) ITEMID,\n  CONCAT(ORDERS.ITEMID->CATEGORY->NAME, '_HELLO') CNAME,\n  LEN(ORDERS.ADDRESS->STATE) STATE_LENGTH\nFROM ORDERS ORDERS\nWHERE ((ORDERS.ADDRESS->STATE LIKE '%1') OR (ORDERS.ADDRESS->STATE LIKE '%9'))\nEMIT CHANGES",
    "ddlCommand" : {
      "@type" : "createStreamV1",
      "sourceName" : "S5",
      "schema" : "`ROWKEY` STRING KEY, `ITEMID` BIGINT, `CNAME` STRING, `STATE_LENGTH` INTEGER",
      "keyField" : null,
      "timestampColumn" : null,
      "topicName" : "S5",
      "formats" : {
        "keyFormat" : {
          "format" : "KAFKA",
          "properties" : { }
        },
        "valueFormat" : {
          "format" : "PROTOBUF",
          "properties" : { }
        },
        "options" : [ ]
      },
      "windowInfo" : null
    },
    "queryPlan" : {
      "sources" : [ "ORDERS" ],
      "sink" : "S5",
      "physicalPlan" : {
        "@type" : "streamSinkV1",
        "properties" : {
          "queryContext" : "S5"
        },
        "source" : {
          "@type" : "streamSelectV1",
          "properties" : {
            "queryContext" : "Project"
          },
          "source" : {
            "@type" : "streamFilterV1",
            "properties" : {
              "queryContext" : "WhereFilter"
            },
            "source" : {
              "@type" : "streamSourceV1",
              "properties" : {
                "queryContext" : "KsqlTopic/Source"
              },
              "topicName" : "test_topic",
              "formats" : {
                "keyFormat" : {
                  "format" : "KAFKA",
                  "properties" : { }
                },
                "valueFormat" : {
                  "format" : "PROTOBUF",
                  "properties" : { }
                },
                "options" : [ ]
              },
              "timestampColumn" : null,
              "sourceSchema" : "`ROWKEY` STRING KEY, `ORDERTIME` BIGINT, `ORDERID` BIGINT, `ITEMID` STRUCT<`ITEMID` BIGINT, `NAME` STRING, `CATEGORY` STRUCT<`ID` BIGINT, `NAME` STRING>>, `ORDERUNITS` DOUBLE, `ARRAYCOL` ARRAY<DOUBLE>, `MAPCOL` MAP<STRING, DOUBLE>, `ADDRESS` STRUCT<`NUMBER` BIGINT, `STREET` STRING, `CITY` STRING, `STATE` STRING, `ZIPCODE` BIGINT>"
            },
            "filterExpression" : "((ADDRESS->STATE LIKE '%1') OR (ADDRESS->STATE LIKE '%9'))"
          },
          "selectExpressions" : [ "(ITEMID->ITEMID * 10) AS ITEMID", "CONCAT(ITEMID->CATEGORY->NAME, '_HELLO') AS CNAME", "LEN(ADDRESS->STATE) AS STATE_LENGTH" ]
        },
        "formats" : {
          "keyFormat" : {
            "format" : "KAFKA",
            "properties" : { }
          },
          "valueFormat" : {
            "format" : "PROTOBUF",
            "properties" : { }
          },
          "options" : [ ]
        },
        "topicName" : "S5"
      },
      "queryId" : "CSAS_S5_0"
    }
  } ],
  "configs" : {
    "ksql.extension.dir" : "ext",
    "ksql.streams.cache.max.bytes.buffering" : "0",
    "ksql.security.extension.class" : null,
    "ksql.transient.prefix" : "transient_",
    "ksql.persistence.wrap.single.values" : "true",
    "ksql.authorization.cache.expiry.time.secs" : "30",
    "ksql.schema.registry.url" : "",
    "ksql.streams.default.deserialization.exception.handler" : "io.confluent.ksql.errors.LogMetricAndContinueExceptionHandler",
    "ksql.output.topic.name.prefix" : "",
    "ksql.streams.auto.offset.reset" : "earliest",
    "ksql.query.pull.enable.standby.reads" : "false",
    "ksql.connect.url" : "http://localhost:8083",
    "ksql.service.id" : "some.ksql.service.id",
    "ksql.internal.topic.min.insync.replicas" : "1",
    "ksql.streams.shutdown.timeout.ms" : "300000",
    "ksql.new.api.enabled" : "false",
    "ksql.streams.state.dir" : "/var/folders/p9/bk8xks6s2lndncftdbq36xh80000gp/T/confluent8393051053551629823",
    "ksql.internal.topic.replicas" : "1",
    "ksql.insert.into.values.enabled" : "true",
    "ksql.query.pull.max.allowed.offset.lag" : "9223372036854775807",
    "ksql.streams.default.production.exception.handler" : "io.confluent.ksql.errors.ProductionExceptionHandlerUtil$LogAndFailProductionExceptionHandler",
    "ksql.access.validator.enable" : "auto",
    "ksql.streams.bootstrap.servers" : "localhost:0",
    "ksql.streams.commit.interval.ms" : "2000",
    "ksql.metric.reporters" : "",
    "ksql.streams.auto.commit.interval.ms" : "0",
    "ksql.metrics.extension" : null,
    "ksql.streams.topology.optimization" : "all",
    "ksql.query.pull.streamsstore.rebalancing.timeout.ms" : "10000",
    "ksql.hidden.topics" : "_confluent.*,__confluent.*,_schemas,__consumer_offsets,__transaction_state,connect-configs,connect-offsets,connect-status,connect-statuses",
    "ksql.streams.num.stream.threads" : "4",
    "ksql.authorization.cache.max.entries" : "10000",
    "ksql.metrics.tags.custom" : "",
    "ksql.pull.queries.enable" : "true",
    "ksql.udfs.enabled" : "true",
    "ksql.udf.enable.security.manager" : "true",
    "ksql.connect.worker.config" : "",
    "ksql.sink.window.change.log.additional.retention" : "1000000",
    "ksql.readonly.topics" : "_confluent.*,__confluent.*,_schemas,__consumer_offsets,__transaction_state,connect-configs,connect-offsets,connect-status,connect-statuses",
    "ksql.udf.collect.metrics" : "false",
    "ksql.persistent.prefix" : "query_",
    "ksql.query.persistent.active.limit" : "2147483647"
  }
}