{
  "version" : "5.5.0",
  "timestamp" : 1581572105430,
  "path" : "query-validation-tests/window-bounds.json",
  "schemas" : {
    "CTAS_S2_0.KsqlTopic.Source" : "STRUCT<ID BIGINT> NOT NULL",
    "CTAS_S2_0.Aggregate.GroupBy" : "STRUCT<KSQL_INTERNAL_COL_0 BIGINT, KSQL_INTERNAL_COL_1 INT> NOT NULL",
    "CTAS_S2_0.Aggregate.Aggregate.Materialize" : "STRUCT<KSQL_INTERNAL_COL_0 BIGINT, KSQL_AGG_VARIABLE_0 BIGINT> NOT NULL",
    "CTAS_S2_0.S2" : "STRUCT<ID BIGINT, KSQL_COL_1 BIGINT, KSQL_COL_2 BIGINT, COUNT BIGINT> NOT NULL"
  },
  "testCase" : {
    "name" : "in expressions",
    "inputs" : [ {
      "topic" : "test_topic",
      "key" : 2,
      "value" : "2",
      "timestamp" : 0
    }, {
      "topic" : "test_topic",
      "key" : 100,
      "value" : "100",
      "timestamp" : 2000
    }, {
      "topic" : "test_topic",
      "key" : 2,
      "value" : "2",
      "timestamp" : 4999
    }, {
      "topic" : "test_topic",
      "key" : 2,
      "value" : "2",
      "timestamp" : 5000
    } ],
    "outputs" : [ {
      "topic" : "S2",
      "key" : 2,
      "value" : "2,0,15000,1",
      "timestamp" : 0,
      "window" : {
        "start" : 0,
        "end" : 30000,
        "type" : "TIME"
      }
    }, {
      "topic" : "S2",
      "key" : 100,
      "value" : "100,0,300,1",
      "timestamp" : 2000,
      "window" : {
        "start" : 0,
        "end" : 30000,
        "type" : "TIME"
      }
    }, {
      "topic" : "S2",
      "key" : 2,
      "value" : "2,0,15000,2",
      "timestamp" : 4999,
      "window" : {
        "start" : 0,
        "end" : 30000,
        "type" : "TIME"
      }
    }, {
      "topic" : "S2",
      "key" : 2,
      "value" : "2,0,15000,3",
      "timestamp" : 5000,
      "window" : {
        "start" : 0,
        "end" : 30000,
        "type" : "TIME"
      }
    } ],
    "topics" : [ {
      "name" : "test_topic",
      "replicas" : 1,
      "numPartitions" : 4
    }, {
      "name" : "S2",
      "replicas" : 1,
      "numPartitions" : 4
    } ],
    "statements" : [ "CREATE STREAM TEST (ROWKEY BIGINT KEY, ID BIGINT) WITH (KAFKA_TOPIC='test_topic', KEY='ID', VALUE_FORMAT='DELIMITED');", "CREATE TABLE S2 AS SELECT\n  TEST.ID ID,\n  (TEST.WINDOWSTART / 2) KSQL_COL_1,\n  (TEST.WINDOWEND / TEST.ID) KSQL_COL_2,\n  COUNT(1) COUNT\nFROM TEST TEST\nWINDOW TUMBLING ( SIZE 30 SECONDS ) \nGROUP BY TEST.ID\nEMIT CHANGES;" ],
    "post" : {
      "sources" : [ {
        "name" : "S2",
        "type" : "TABLE",
        "schema" : "`ROWKEY` BIGINT KEY, `ID` BIGINT, `KSQL_COL_1` BIGINT, `KSQL_COL_2` BIGINT, `COUNT` BIGINT",
        "keyFormat" : {
          "format" : "KAFKA",
          "windowType" : "TUMBLING",
          "windowSize" : 30000
        },
        "serdeOptions" : [ ]
      }, {
        "name" : "TEST",
        "type" : "STREAM",
        "schema" : "`ROWKEY` BIGINT KEY, `ID` BIGINT",
        "keyFormat" : {
          "format" : "KAFKA"
        },
        "serdeOptions" : [ ]
      } ],
      "topics" : {
        "topics" : [ {
          "name" : "_confluent-ksql-some.ksql.service.idquery_CTAS_S2_0-Aggregate-Aggregate-Materialize-changelog",
          "keyFormat" : {
            "formatInfo" : {
              "format" : "KAFKA"
            },
            "windowInfo" : {
              "type" : "TUMBLING",
              "size" : 30.000000000
            }
          },
          "valueFormat" : {
            "format" : "DELIMITED"
          }
        }, {
          "name" : "test_topic",
          "keyFormat" : {
            "formatInfo" : {
              "format" : "KAFKA"
            }
          },
          "valueFormat" : {
            "format" : "DELIMITED"
          },
          "partitions" : 4
        }, {
          "name" : "S2",
          "keyFormat" : {
            "formatInfo" : {
              "format" : "KAFKA"
            },
            "windowInfo" : {
              "type" : "TUMBLING",
              "size" : 30.000000000
            }
          },
          "valueFormat" : {
            "format" : "DELIMITED"
          },
          "partitions" : 4
        } ]
      }
    }
  }
}