{
  "comments": [
    "Tests covering the use of the TRANSFORM_ARRAY function."
  ],
  "tests": [
    {
      "name": "apply lambda function to array",
      "statements": [
        "CREATE STREAM test (ID STRING KEY, numbers ARRAY<INTEGER>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, TRANSFORM_ARRAY(numbers, x => x + 5) AS c FROM test;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": "one", "value": {"numbers": [3, 6]}},
        {"topic": "test_topic", "key": "two", "value": {"numbers": [5, null]}},
        {"topic": "test_topic", "key": "three", "value": {"numbers": null}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "one", "value": {"C":[8, 11]}},
        {"topic": "OUTPUT", "key": "two", "value": {"C":[10, null]}},
        {"topic": "OUTPUT", "key": "three", "value": {"C":null}}
      ]
    },
    {
      "name": "capitalize string",
      "statements": [
        "CREATE STREAM TEST (ID BIGINT KEY, VALUE ARRAY<string>) WITH (kafka_topic='test_topic',value_format='AVRO');",
        "CREATE STREAM OUTPUT as SELECT ID, transform_array(VALUE, x => UCASE(x)) AS LAMBDA FROM TEST;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 0, "value": {"VALUE": ["hello", "these", "are", "my", "strings"]}},
        {"topic": "test_topic", "key": 1, "value": {"VALUE": ["check", null, "null"]}},
        {"topic": "test_topic", "key": 0, "value": {"VALUE": ["ksqldb", "kafka", "streams"]}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 0,"value": {"LAMBDA": ["HELLO", "THESE", "ARE", "MY", "STRINGS"]}},
        {"topic": "OUTPUT", "key": 1,"value": {"LAMBDA": ["CHECK", null, "NULL"]}},
        {"topic": "OUTPUT", "key": 0,"value": {"LAMBDA": ["KSQLDB", "KAFKA", "STREAMS"]}}
      ]
    },
    {
      "name": "case check - input: double, output: string",
      "statements": [
        "CREATE STREAM TEST (ID BIGINT KEY, VALUE ARRAY<double>) WITH (kafka_topic='test_topic', value_format='AVRO');",
        "CREATE STREAM OUTPUT as SELECT ID, TRANSFORM_ARRAY(VALUE, x => CASE WHEN x > 10 THEN 'above 10' ELSE 'TOO LOW' END) as SUM from TEST emit changes;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 0,"value": {"value": [2.32, 12123, 3.123, 4.45]}},
        {"topic": "test_topic", "key": 5,"value": {"value": [11, 13, null]}},
        {"topic": "test_topic", "key": 100,"value": {"value": [10, 5, 4]}},
        {"topic": "test_topic", "key": 100,"value": {"value": [2, 3, 100]}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 0,"value": {"SUM": ["TOO LOW", "above 10", "TOO LOW", "TOO LOW"]}},
        {"topic": "OUTPUT", "key": 5,"value": {"SUM": ["above 10", "above 10", null]}},
        {"topic": "OUTPUT", "key": 100,"value": {"SUM": ["TOO LOW", "TOO LOW", "TOO LOW"]}},
        {"topic": "OUTPUT", "key": 100,"value": {"SUM": ["TOO LOW", "TOO LOW", "above 10"]}}
      ]
    },
    {
      "name": "decimal absolute test",
      "statements": [
        "CREATE STREAM TEST (ID BIGINT KEY, VALUE ARRAY<DECIMAL(3, 2)>) WITH (kafka_topic='test_topic', value_format='AVRO');",
        "CREATE STREAM OUTPUT as SELECT ID, TRANSFORM_ARRAY(VALUE, x => abs(x)) as abs from TEST emit changes;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 0,"value": {"value": [-2.45, 3.67, 1.23]}},
        {"topic": "test_topic", "key": 5,"value": {"value": [-7.45, -1.34, null]}},
        {"topic": "test_topic", "key": 100,"value": {"value": [1.45, 5.68, -4.67]}},
        {"topic": "test_topic", "key": 100,"value": {"value": null}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 0,"value": {"ABS": [2.45, 3.67, 1.23]}},
        {"topic": "OUTPUT", "key": 5,"value": {"ABS": [7.45, 1.34, null]}},
        {"topic": "OUTPUT", "key": 100,"value": {"ABS": [1.45, 5.68, 4.67]}},
        {"topic": "OUTPUT", "key": 100,"value": {"ABS": null}}
      ]
    },
    {
      "name": "array max test",
      "statements": [
        "CREATE STREAM TEST (ID BIGINT KEY, VALUE ARRAY<ARRAY<INTEGER>>) WITH (kafka_topic='test_topic', value_format='AVRO');",
        "CREATE STREAM OUTPUT as SELECT ID, TRANSFORM_ARRAY(VALUE, x => array_max(x)) as max from TEST emit changes;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 0,"value": {"value": [[5, 7, 1], [3, 6, 1]]}},
        {"topic": "test_topic", "key": 5,"value": {"value": [[123, 452, 451, null], [532, 123, 78]]}},
        {"topic": "test_topic", "key": 100,"value": {"value": [[90, 341, 2], [234, 123, 865]]}},
        {"topic": "test_topic", "key": 100,"value": {"value": null}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 0,"value": {"MAX": [7, 6]}},
        {"topic": "OUTPUT", "key": 5,"value": {"MAX": [452, 532]}},
        {"topic": "OUTPUT", "key": 100,"value": {"MAX": [341, 865]}},
        {"topic": "OUTPUT", "key": 100,"value": {"MAX": null}}
      ]
    }
  ]
}