{
  "comments": [
    "AS_VALUE udf is a special UDF introduced as part of KLIP-24: https://github.com/confluentinc/ksql/pull/5115",
    "Its purpose is to indicate that a key column in a projection should result in a value column, not a key column.",
    "When used elsewhere the udf has little affect, though it may affect column namings"
  ],
  "tests": [
    {
      "name": "key column",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, V0 INT, V1 INT) WITH (kafka_topic='input', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, AS_VALUE(ID) AS ID_COPY, V1 FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input", "key": 1, "value": {"V0": 2, "V1": 3}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"ID_COPY": 1, "V1": 3}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "ID INT KEY, ID_COPY INT, V1 INT"}
        ]
      }
    },
    {
      "name": "value column",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, V0 INT, V1 INT) WITH (kafka_topic='input', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, AS_VALUE(V0) FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input", "key": 1, "value": {"V0": 2, "V1": 3}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": 2}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "ID INT KEY, KSQL_COL_0 INT"}
        ]
      }
    },
    {
      "name": "expression",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, V0 INT, V1 INT) WITH (kafka_topic='input', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, AS_VALUE(V0 + V1) FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input", "key": 1, "value": {"V0": 2, "V1": 3}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": 5}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "ID INT KEY, KSQL_COL_0 INT"}
        ]
      }
    },
    {
      "name": "partition by",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, V0 INT, V1 INT) WITH (kafka_topic='input', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT PARTITION BY AS_VALUE(ID);"
      ],
      "inputs": [
        {"topic": "input", "key": 1, "value": {"V0": 2, "V1": 3}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"V0": 2, "V1": 3, "ID": 1}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "KSQL_COL_0 INT KEY, V0 INT, V1 INT, ID INT"}
        ]
      }
    },
    {
      "name": "group by",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, V0 INT, V1 INT) WITH (kafka_topic='input', value_format='JSON');",
        "CREATE TABLE OUTPUT AS SELECT AS_VALUE(ID) AS K, COUNT(1) FROM INPUT GROUP BY AS_VALUE(ID);"
      ],
      "inputs": [
        {"topic": "input", "key": 1, "value": {"V0": 2, "V1": 3}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": 1}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "table", "schema": "K INT KEY, KSQL_COL_0 BIGINT"}
        ]
      }
    },
    {
      "name": "join",
      "statements": [
        "CREATE STREAM I1 (ID INT KEY, V0 INT, V1 INT) WITH (kafka_topic='i1', value_format='JSON');",
        "CREATE TABLE I2 (ID INT PRIMARY KEY, V0 INT, V1 INT) WITH (kafka_topic='i2', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT * FROM I1 JOIN I2 ON AS_VALUE(I1.ID) = I2.ID;"
      ],
      "inputs": [
        {"topic": "i2", "key": 1, "value": {"V0": 2, "V1": 3}},
        {"topic": "i1", "key": 1, "value": {"V0": 2, "V1": 3}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"I1_ID": 1, "I1_V0": 2, "I1_V1": 3, "I2_V0": 2, "I2_V1": 3}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "I2_ID INT KEY, I1_ID INT, I1_V0 INT, I1_V1 INT, I2_V0 INT, I2_V1 INT"}
        ]
      }
    },
    {
      "name": "BOOLEAN",
      "statements": [
        "CREATE STREAM INPUT (ID BOOLEAN KEY, V0 INT, V1 INT) WITH (kafka_topic='input', format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, AS_VALUE(ID) AS ID_COPY, V1 FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input", "key": true, "value": {"V0": 2, "V1": 3}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": true, "value": {"ID_COPY": true, "V1": 3}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "ID BOOLEAN KEY, ID_COPY BOOLEAN, V1 INT"}
        ]
      }
    },{
      "name": "DECIMAL",
      "statements": [
        "CREATE STREAM INPUT (ID DECIMAL(4,2) KEY, V0 INT, V1 INT) WITH (kafka_topic='input', format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, AS_VALUE(ID) AS ID_COPY, V1 FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input", "key": 12.30, "value": {"V0": 2, "V1": 3}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 12.30, "value": {"ID_COPY": 12.30, "V1": 3}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "ID DECIMAL(4,2) KEY, ID_COPY DECIMAL(4,2), V1 INT"}
        ]
      }
    },
    {
      "name": "ARRAY",
      "statements": [
        "CREATE STREAM INPUT (ID ARRAY<VARCHAR> KEY, V0 INT, V1 INT) WITH (kafka_topic='input', format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, AS_VALUE(ID) AS ID_COPY, V1 FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input", "key": ["foo"], "value": {"V0": 2, "V1": 3}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": ["foo"], "value": {"ID_COPY": ["foo"], "V1": 3}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "ID ARRAY<VARCHAR> KEY, ID_COPY ARRAY<VARCHAR>, V1 INT"}
        ]
      }
    },
    {
      "name": "STRUCT",
      "statements": [
        "CREATE STREAM INPUT (ID STRUCT<F1 VARCHAR> KEY, V0 INT, V1 INT) WITH (kafka_topic='input', format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, AS_VALUE(ID) AS ID_COPY, V1 FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input", "key": {"F1": "foo"}, "value": {"V0": 2, "V1": 3}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": {"F1": "foo"}, "value": {"ID_COPY": {"F1": "foo"}, "V1": 3}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "ID STRUCT<F1 VARCHAR> KEY, ID_COPY STRUCT<F1 VARCHAR>, V1 INT"}
        ]
      }
    }
  ]
}