{
  "comments": [
    "Tests covering SQL binary comparisons"
  ],
  "tests": [
    {
      "name": "equals",
      "statements": [
        "CREATE STREAM INPUT (A INT KEY, B BOOLEAN, C BIGINT, D DOUBLE, E DECIMAL(4,3), F STRING, G ARRAY<INT>, H MAP<STRING, INT>, I STRUCT<ID INT>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT A, A = 1, B = true, C = 11, D = 1.1, E = 1.20, F = 'foo', G = ARRAY[1,2], H = MAP('a':=1), I = STRUCT(ID:=2) FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"B": true, "C": 11, "D": 1.1, "E": 1.20, "F": "foo", "G": [1,2], "H": {"a":  1}, "I": {"id": 2}}},
        {"topic": "test_topic", "key": 2, "value": {"B": false, "C": 10, "D": 1.0, "E": 1.21, "F": "Foo", "G": [1], "H": {"b":  1}, "I": {"id": 3}}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": true, "KSQL_COL_1": true, "KSQL_COL_2": true, "KSQL_COL_3": true, "KSQL_COL_4": true, "KSQL_COL_5": true, "KSQL_COL_6": true, "KSQL_COL_7": true, "KSQL_COL_8": true}},
        {"topic": "OUTPUT", "key": 2, "value": {"KSQL_COL_0": false, "KSQL_COL_1": false, "KSQL_COL_2": false, "KSQL_COL_3": false, "KSQL_COL_4": false, "KSQL_COL_5": false, "KSQL_COL_6": false, "KSQL_COL_7": false, "KSQL_COL_8": false}}
      ]
    },
    {
      "name": "not equals",
      "statements": [
        "CREATE STREAM INPUT (A INT KEY, B BOOLEAN, C BIGINT, D DOUBLE, E DECIMAL(4,3), F STRING, G ARRAY<INT>, H MAP<STRING, INT>, I STRUCT<ID INT>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT A, A <> 1, B <> true, C <> 11, D <> 1.1, E <> 1.20, F <> 'foo', G <> ARRAY[1,2], H <> MAP('a':=1), I <> STRUCT(ID:=2) FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"B": true, "C": 11, "D": 1.1, "E": 1.20, "F": "foo", "G": [1,2], "H": {"a":  1}, "I": {"id": 2}}},
        {"topic": "test_topic", "key": 2, "value": {"B": false, "C": 10, "D": 1.0, "E": 1.21, "F": "Foo", "G": [1], "H": {"b":  1}, "I": {"id": 3}}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": false, "KSQL_COL_1": false, "KSQL_COL_2": false, "KSQL_COL_3": false, "KSQL_COL_4": false, "KSQL_COL_5": false, "KSQL_COL_6": false, "KSQL_COL_7": false, "KSQL_COL_8": false}},
        {"topic": "OUTPUT", "key": 2, "value": {"KSQL_COL_0": true, "KSQL_COL_1": true, "KSQL_COL_2": true, "KSQL_COL_3": true, "KSQL_COL_4": true, "KSQL_COL_5": true, "KSQL_COL_6": true, "KSQL_COL_7": true, "KSQL_COL_8": true}}
      ]
    },
    {
      "name": "less than",
      "statements": [
        "CREATE STREAM INPUT (A INT KEY, B BIGINT, C DOUBLE, D DECIMAL(4,3), E STRING) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT A, A < 1, B < 11, C < 1.1, D < 1.20, E < 'foo' FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 0, "value": {"B": 10, "C": 1.0, "D": 1.19, "E": "Foo"}},
        {"topic": "test_topic", "key": 1, "value": {"B": 11, "C": 1.1, "D": 1.20, "E": "foo"}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 0, "value": {"KSQL_COL_0": true, "KSQL_COL_1": true, "KSQL_COL_2": true, "KSQL_COL_3": true, "KSQL_COL_4": true}},
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": false, "KSQL_COL_1": false, "KSQL_COL_2": false, "KSQL_COL_3": false, "KSQL_COL_4": false}}
      ]
    },
    {
      "name": "less than or equal",
      "statements": [
        "CREATE STREAM INPUT (A INT KEY, B BIGINT, C DOUBLE, D DECIMAL(4,3), E STRING) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT A, A <= 1, B <= 11, C <= 1.1, D <= 1.20, E <= 'foo' FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 0, "value": {"B": 10, "C": 1.0, "D": 1.19, "E": "Foo"}},
        {"topic": "test_topic", "key": 1, "value": {"B": 11, "C": 1.1, "D": 1.20, "E": "foo"}},
        {"topic": "test_topic", "key": 2, "value": {"B": 12, "C": 1.11, "D": 1.21, "E": "goo"}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 0, "value": {"KSQL_COL_0": true, "KSQL_COL_1": true, "KSQL_COL_2": true, "KSQL_COL_3": true, "KSQL_COL_4": true}},
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": true, "KSQL_COL_1": true, "KSQL_COL_2": true, "KSQL_COL_3": true, "KSQL_COL_4": true}},
        {"topic": "OUTPUT", "key": 2, "value": {"KSQL_COL_0": false, "KSQL_COL_1": false, "KSQL_COL_2": false, "KSQL_COL_3": false, "KSQL_COL_4": false}}
      ]
    },
    {
      "name": "greater than",
      "statements": [
        "CREATE STREAM INPUT (A INT KEY, B BIGINT, C DOUBLE, D DECIMAL(4,3), E STRING) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT A, A > 1, B > 11, C > 1.1, D > 1.20, E > 'foo' FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"B": 11, "C": 1.1, "D": 1.20, "E": "foo"}},
        {"topic": "test_topic", "key": 2, "value": {"B": 12, "C": 1.11, "D": 1.21, "E": "goo"}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": false, "KSQL_COL_1": false, "KSQL_COL_2": false, "KSQL_COL_3": false, "KSQL_COL_4": false}},
        {"topic": "OUTPUT", "key": 2, "value": {"KSQL_COL_0": true, "KSQL_COL_1": true, "KSQL_COL_2": true, "KSQL_COL_3": true, "KSQL_COL_4": true}}
      ]
    },
    {
      "name": "greater than or equal",
      "statements": [
        "CREATE STREAM INPUT (A INT KEY, B BIGINT, C DOUBLE, D DECIMAL(4,3), E STRING) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT A, A >= 1, B >= 11, C >= 1.1, D >= 1.20, E >= 'foo' FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 0, "value": {"B": 10, "C": 1.0, "D": 1.19, "E": "Foo"}},
        {"topic": "test_topic", "key": 1, "value": {"B": 11, "C": 1.1, "D": 1.20, "E": "foo"}},
        {"topic": "test_topic", "key": 2, "value": {"B": 12, "C": 1.11, "D": 1.21, "E": "goo"}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 0, "value": {"KSQL_COL_0": false, "KSQL_COL_1": false, "KSQL_COL_2": false, "KSQL_COL_3": false, "KSQL_COL_4": false}},
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": true, "KSQL_COL_1": true, "KSQL_COL_2": true, "KSQL_COL_3": true, "KSQL_COL_4": true}},
        {"topic": "OUTPUT", "key": 2, "value": {"KSQL_COL_0": true, "KSQL_COL_1": true, "KSQL_COL_2": true, "KSQL_COL_3": true, "KSQL_COL_4": true}}
      ]
    },
    {
      "name": "between",
      "statements": [
        "CREATE STREAM INPUT (A INT KEY, B BIGINT, C DOUBLE, D DECIMAL(4,3), E STRING) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT A, A BETWEEN 0 AND 2, B BETWEEN 10 AND 12, C BETWEEN 1.0 AND 1.11, D BETWEEN 1.19 AND 1.21, E BETWEEN 'eoo' AND 'goo' FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": -1, "value": {"B": 9, "C": 0.99, "D": 1.18, "E": "doo"}},
        {"topic": "test_topic", "key": 0, "value": {"B": 10, "C": 1.0, "D": 1.19, "E": "eoo"}},
        {"topic": "test_topic", "key": 1, "value": {"B": 11, "C": 1.1, "D": 1.20, "E": "foo"}},
        {"topic": "test_topic", "key": 2, "value": {"B": 12, "C": 1.11, "D": 1.21, "E": "goo"}},
        {"topic": "test_topic", "key": 3, "value": {"B": 13, "C": 1.12, "D": 1.22, "E": "hoo"}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": -1, "value": {"KSQL_COL_0": false, "KSQL_COL_1": false, "KSQL_COL_2": false, "KSQL_COL_3": false, "KSQL_COL_4": false}},
        {"topic": "OUTPUT", "key": 0, "value": {"KSQL_COL_0": true, "KSQL_COL_1": true, "KSQL_COL_2": true, "KSQL_COL_3": true, "KSQL_COL_4": true}},
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": true, "KSQL_COL_1": true, "KSQL_COL_2": true, "KSQL_COL_3": true, "KSQL_COL_4": true}},
        {"topic": "OUTPUT", "key": 2, "value": {"KSQL_COL_0": true, "KSQL_COL_1": true, "KSQL_COL_2": true, "KSQL_COL_3": true, "KSQL_COL_4": true}},
        {"topic": "OUTPUT", "key": 3, "value": {"KSQL_COL_0": false, "KSQL_COL_1": false, "KSQL_COL_2": false, "KSQL_COL_3": false, "KSQL_COL_4": false}}
      ]
    },
    {
      "name": "not between",
      "statements": [
        "CREATE STREAM INPUT (A INT KEY, B BIGINT, C DOUBLE, D DECIMAL(4,3), E STRING) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT A, A NOT BETWEEN 0 AND 2, B NOT BETWEEN 10 AND 12, C NOT BETWEEN 1.0 AND 1.11, D NOT BETWEEN 1.19 AND 1.21, E NOT BETWEEN 'eoo' AND 'goo' FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": -1, "value": {"B": 9, "C": 0.99, "D": 1.18, "E": "doo"}},
        {"topic": "test_topic", "key": 0, "value": {"B": 10, "C": 1.0, "D": 1.19, "E": "eoo"}},
        {"topic": "test_topic", "key": 1, "value": {"B": 11, "C": 1.1, "D": 1.20, "E": "foo"}},
        {"topic": "test_topic", "key": 2, "value": {"B": 12, "C": 1.11, "D": 1.21, "E": "goo"}},
        {"topic": "test_topic", "key": 3, "value": {"B": 13, "C": 1.12, "D": 1.22, "E": "hoo"}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": -1, "value": {"KSQL_COL_0": true, "KSQL_COL_1": true, "KSQL_COL_2": true, "KSQL_COL_3": true, "KSQL_COL_4": true}},
        {"topic": "OUTPUT", "key": 0, "value": {"KSQL_COL_0": false, "KSQL_COL_1": false, "KSQL_COL_2": false, "KSQL_COL_3": false, "KSQL_COL_4": false}},
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": false, "KSQL_COL_1": false, "KSQL_COL_2": false, "KSQL_COL_3": false, "KSQL_COL_4": false}},
        {"topic": "OUTPUT", "key": 2, "value": {"KSQL_COL_0": false, "KSQL_COL_1": false, "KSQL_COL_2": false, "KSQL_COL_3": false, "KSQL_COL_4": false}},
        {"topic": "OUTPUT", "key": 3, "value": {"KSQL_COL_0": true, "KSQL_COL_1": true, "KSQL_COL_2": true, "KSQL_COL_3": true, "KSQL_COL_4": true}}
      ]
    },
    {
      "name": "is distinct from",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, ID2 INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, ID IS DISTINCT FROM ID2 FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"ID2": 1}},
        {"topic": "test_topic", "key": 2, "value": {"ID2": 1}},
        {"topic": "test_topic", "key": 3, "value": {"ID2": null}},
        {"topic": "test_topic", "key": null, "value": {"ID2": 1}},
        {"topic": "test_topic", "key": null, "value": {"ID2": null}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": false}},
        {"topic": "OUTPUT", "key": 2, "value": {"KSQL_COL_0": true}},
        {"topic": "OUTPUT", "key": 3, "value": {"KSQL_COL_0": true}},
        {"topic": "OUTPUT", "key": null, "value": {"KSQL_COL_0": true}},
        {"topic": "OUTPUT", "key": null, "value": {"KSQL_COL_0": false}}
      ]
    },
    {
    "name": "is distinct from (2)",
      "statements": [
        "CREATE STREAM INPUT (A INT KEY, B BOOLEAN, C BIGINT, D DOUBLE, E DECIMAL(4,3), F STRING, G ARRAY<INT>, H MAP<STRING, INT>, I STRUCT<ID INT>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT A, A IS DISTINCT FROM 1, B IS DISTINCT FROM true, C IS DISTINCT FROM 11, D IS DISTINCT FROM 1.1, E IS DISTINCT FROM 1.20, F IS DISTINCT FROM 'foo', G IS DISTINCT FROM ARRAY[1,2], H IS DISTINCT FROM MAP('a':=1), I IS DISTINCT FROM STRUCT(ID:=2) FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"B": true, "C": 11, "D": 1.1, "E": 1.20, "F": "foo", "G": [1,2], "H": {"a":  1}, "I": {"id": 2}}},
        {"topic": "test_topic", "key": 2, "value": {"B": false, "C": 10, "D": 1.0, "E": 1.21, "F": "Foo", "G": [1], "H": {"b":  1}, "I": {"id": 3}}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": false, "KSQL_COL_1": false, "KSQL_COL_2": false, "KSQL_COL_3": false, "KSQL_COL_4": false, "KSQL_COL_5": false, "KSQL_COL_6": false, "KSQL_COL_7": false, "KSQL_COL_8": false}},
        {"topic": "OUTPUT", "key": 2, "value": {"KSQL_COL_0": true, "KSQL_COL_1": true, "KSQL_COL_2": true, "KSQL_COL_3": true, "KSQL_COL_4": true, "KSQL_COL_5": true, "KSQL_COL_6": true, "KSQL_COL_7": true, "KSQL_COL_8": true}}
      ]
    },
    {
      "name": "is not distinct from",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, ID2 INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, ID IS NOT DISTINCT FROM ID2 FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"ID2": 1}},
        {"topic": "test_topic", "key": 2, "value": {"ID2": 1}},
        {"topic": "test_topic", "key": 3, "value": {"ID2": null}},
        {"topic": "test_topic", "key": null, "value": {"ID2": 1}},
        {"topic": "test_topic", "key": null, "value": {"ID2": null}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": true}},
        {"topic": "OUTPUT", "key": 2, "value": {"KSQL_COL_0": false}},
        {"topic": "OUTPUT", "key": 3, "value": {"KSQL_COL_0": false}},
        {"topic": "OUTPUT", "key": null, "value": {"KSQL_COL_0": false}},
        {"topic": "OUTPUT", "key": null, "value": {"KSQL_COL_0": true}}
      ]
    },
    {
      "name": "is not distinct from (2)",
      "statements": [
        "CREATE STREAM INPUT (A INT KEY, B BOOLEAN, C BIGINT, D DOUBLE, E DECIMAL(4,3), F STRING, G ARRAY<INT>, H MAP<STRING, INT>, I STRUCT<ID INT>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT A, A IS NOT DISTINCT FROM 1, B IS NOT DISTINCT FROM true, C IS NOT DISTINCT FROM 11, D IS NOT DISTINCT FROM 1.1, E IS NOT DISTINCT FROM 1.20, F IS NOT DISTINCT FROM 'foo', G IS NOT DISTINCT FROM ARRAY[1,2], H IS NOT DISTINCT FROM MAP('a':=1), I IS NOT DISTINCT FROM STRUCT(ID:=2) FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"B": true, "C": 11, "D": 1.1, "E": 1.20, "F": "foo", "G": [1,2], "H": {"a":  1}, "I": {"id": 2}}},
        {"topic": "test_topic", "key": 2, "value": {"B": false, "C": 10, "D": 1.0, "E": 1.21, "F": "Foo", "G": [1], "H": {"b":  1}, "I": {"id": 3}}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": true, "KSQL_COL_1": true, "KSQL_COL_2": true, "KSQL_COL_3": true, "KSQL_COL_4": true, "KSQL_COL_5": true, "KSQL_COL_6": true, "KSQL_COL_7": true, "KSQL_COL_8": true}},
        {"topic": "OUTPUT", "key": 2, "value": {"KSQL_COL_0": false, "KSQL_COL_1": false, "KSQL_COL_2": false, "KSQL_COL_3": false, "KSQL_COL_4": false, "KSQL_COL_5": false, "KSQL_COL_6": false, "KSQL_COL_7": false, "KSQL_COL_8": false}}
      ]
    },
    {
      "name": "array comparison fails",
      "statements": [
        "CREATE STREAM INPUT (A INT KEY, B ARRAY<INT>, C ARRAY<INT>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT A, B < C, B > C FROM INPUT;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Cannot compare B (ARRAY<INTEGER>) to C (ARRAY<INTEGER>) with LESS_THAN."
      }
    },
    {
      "name": "array equality",
      "statements": [
        "CREATE STREAM INPUT (A INT KEY, B ARRAY<INT>, C ARRAY<INT>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT A, B = C, B <> C, B IS NOT DISTINCT FROM C, B IS DISTINCT FROM C FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"B": [1,2], "C": [1,2.0]}},
        {"topic": "test_topic", "key": 2, "value": {"B": [1,2], "C": [1]}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": true, "KSQL_COL_1": false, "KSQL_COL_2": true, "KSQL_COL_3": false}},
        {"topic": "OUTPUT", "key": 2, "value": {"KSQL_COL_0": false, "KSQL_COL_1": true, "KSQL_COL_2": false, "KSQL_COL_3": true}}
      ]
    },
    {
      "name": "map comparison fails",
      "statements": [
        "CREATE STREAM INPUT (A INT KEY, B MAP<STRING, INT>, C MAP<STRING, INT>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT A, B < C, B > C FROM INPUT;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Cannot compare B (MAP<STRING, INTEGER>) to C (MAP<STRING, INTEGER>) with LESS_THAN."
      }
    },
    {
      "name": "map equality",
      "statements": [
        "CREATE STREAM INPUT (A INT KEY, B MAP<STRING, INT>, C MAP<STRING, INT>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT A, B = C, B <> C, B IS NOT DISTINCT FROM C, B IS DISTINCT FROM C FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"B": {"a": 1}, "C": {"a": 1.0}}},
        {"topic": "test_topic", "key": 2, "value": {"B": {"a": 1}, "C": {"a": 2}}},
        {"topic": "test_topic", "key": 3, "value": {"B": {"a": 1}, "C": {"b": 1}}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": true, "KSQL_COL_1": false, "KSQL_COL_2": true, "KSQL_COL_3": false}},
        {"topic": "OUTPUT", "key": 2, "value": {"KSQL_COL_0": false, "KSQL_COL_1": true, "KSQL_COL_2": false, "KSQL_COL_3": true}},
        {"topic": "OUTPUT", "key": 3, "value": {"KSQL_COL_0": false, "KSQL_COL_1": true, "KSQL_COL_2": false, "KSQL_COL_3": true}}
      ]
    },
    {
      "name": "struct comparison fails",
      "statements": [
        "CREATE STREAM INPUT (A INT KEY, B STRUCT<ID INT>, C STRUCT<ID INT>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT A, B < C, B > C FROM INPUT;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Cannot compare B (STRUCT<`ID` INTEGER>) to C (STRUCT<`ID` INTEGER>) with LESS_THAN."
      }
    },
    {
      "name": "struct equality",
      "statements": [
        "CREATE STREAM INPUT (A INT KEY, B STRUCT<ID INT>, C STRUCT<ID INT>) WITH (kafka_topic='test_topic', value_format='JSON');",
	"CREATE STREAM OUTPUT AS SELECT A, B = C, B <> C, B IS NOT DISTINCT FROM C, B IS DISTINCT FROM C FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"B": {"id": 2}, "C": {"id": 2.0}}},
        {"topic": "test_topic", "key": 2, "value": {"B": {"id": 2}, "C": {"id": 1}}},
        {"topic": "test_topic", "key": 3, "value": {"B": {"id": 2}, "C": {"i": 2}}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": true, "KSQL_COL_1": false, "KSQL_COL_2": true, "KSQL_COL_3": false}},
        {"topic": "OUTPUT", "key": 2, "value": {"KSQL_COL_0": false, "KSQL_COL_1": true, "KSQL_COL_2": false, "KSQL_COL_3": true}},
        {"topic": "OUTPUT", "key": 3, "value": {"KSQL_COL_0": false, "KSQL_COL_1": true, "KSQL_COL_2": false, "KSQL_COL_3": true}}
      ]
    },
    {
      "name": "nested collections comparison",
      "statements": [
        "CREATE STREAM INPUT (A INT KEY, B ARRAY<STRUCT<ID INT>>, C ARRAY<STRUCT<ID INT>>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT A, B = C FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"B": [{"X": {"foo": 1}},{"Y": {"bar": 2}}], "C": [{"Y": {"foo": 2}},{"X": {"bar": 1}}]}},
        {"topic": "test_topic", "key": 2, "value": {"B": [{"X": {"foo": 1}},{"Y": {"bar": 2}}], "C": [{"X": {"foo": 1}}]}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"KSQL_COL_0": true}},
        {"topic": "OUTPUT", "key": 2, "value": {"KSQL_COL_0": false}}
      ]
    }
  ]
}