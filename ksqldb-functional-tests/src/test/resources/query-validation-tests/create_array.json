{
  "comments": [
    "Tests covering AS_LIST functionality with generics"
  ],
  "tests": [
    {
      "name": "construct a list from two elements",
      "statements": [
        "CREATE STREAM TEST (ID STRING KEY, a INT, b INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, ARRAY[a, b, 3] as l FROM TEST;"
      ],
      "inputs": [
        {"topic": "test_topic", "value": {"a":  1, "b":  2}},
        {"topic": "test_topic", "value": {"a": null, "b":  null}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"L": [1, 2, 3]}},
        {"topic": "OUTPUT", "value": {"L": [null, null, 3]}}
      ]
    },
    {
      "name": "construct a list from null casted elements",
      "statements": [
        "CREATE STREAM TEST (ID STRING KEY, a INT, b INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, ARRAY[CAST(NULL AS INT)] as l FROM TEST;"
      ],
      "inputs": [
        {"topic": "test_topic", "value": {"a":  1, "b":  2}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"L": [null]}}
      ]
    },
    {
      "name": "construct a list from no elements",
      "statements": [
        "CREATE STREAM TEST (ID STRING KEY, a INT, b INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, ARRAY[] as l FROM TEST;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlException",
        "message": "Array constructor cannot be empty. Please supply at least one element (see https://github.com/confluentinc/ksql/issues/4239)."
      }
    },
    {
      "name": "construct a list from null non-casted elements",
      "statements": [
        "CREATE STREAM TEST (ID STRING KEY, a INT, b INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, ARRAY[NULL] as l FROM TEST;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlException",
        "message": "Cannot construct an array with all NULL elements (see https://github.com/confluentinc/ksql/issues/4239). As a workaround, you may cast a NULL value to the desired type."
      }
    },
    {
      "name": "construct a list from compatible mismatching elements",
      "statements": [
        "CREATE STREAM TEST (ID STRING KEY, a INT, b BIGINT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, ARRAY[null, 10, '2e1', a, b] as l FROM TEST;"
      ],
      "inputs": [
        {"topic": "test_topic", "value": {"a": 30, "b": 40}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"L": [null, 10, 20, 30, 40]}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "ID STRING KEY, L ARRAY<DECIMAL(19, 0)>"}
        ]
      }
    },
    {
      "name": "construct a list from compatible mismatching struct elements",
      "statements": [
        "CREATE STREAM TEST (a INT, b BIGINT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ARRAY[null, struct(x := a, y := b), struct(y := a, z:= b)] as l FROM TEST;"
      ],
      "inputs": [
        {"topic": "test_topic", "value": {"a": 30, "b": 40}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"L": [null, {"X": 30, "Y": 40, "Z": null}, {"X": null, "Y": 30, "Z": 40}]}}
      ]
    },
    {
      "name": "construct a list from incompatible mismatching elements",
      "statements": [
        "CREATE STREAM TEST (ID STRING KEY, a INT, b INT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, ARRAY[1, 'not a number'] as l FROM TEST;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlException",
        "message": "invalid input syntax for type INTEGER: \"not a number\""
      }
    }
  ]
}