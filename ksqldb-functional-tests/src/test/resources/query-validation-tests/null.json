{
  "comments": [
    "Tests covering SQL NULL"
  ],
  "tests": [
    {
      "name": "is null",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, NAME STRING) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID IS NULL AS ID_NULL, NAME IS NULL AS NAME_NULL FROM INPUT;"
      ],
      "properties": {
        "ksql.any.key.name.enabled": true
      },
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"NAME": "not null"}},
        {"topic": "test_topic", "key": null, "value": {"NAME": null}},
        {"topic": "test_topic", "key": 0, "value": {}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"ID_NULL": false, "NAME_NULL": false}},
        {"topic": "OUTPUT", "key": null, "value": {"ID_NULL": true, "NAME_NULL": true}},
        {"topic": "OUTPUT", "key": 0, "value": {"ID_NULL": false, "NAME_NULL": true}}
      ]
    },
    {
      "name": "is not null",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, NAME STRING) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID IS NOT NULL AS ID_NULL, NAME IS NOT NULL AS NAME_NULL FROM INPUT;"
      ],
      "properties": {
        "ksql.any.key.name.enabled": true
      },
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"NAME": "not null"}},
        {"topic": "test_topic", "key": null, "value": {"NAME": null}},
        {"topic": "test_topic", "key": 0, "value": {}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"ID_NULL": true, "NAME_NULL": true}},
        {"topic": "OUTPUT", "key": null, "value": {"ID_NULL": false, "NAME_NULL": false}},
        {"topic": "OUTPUT", "key": 0, "value": {"ID_NULL": true, "NAME_NULL": false}}
      ]
    },
    {
      "name": "null equals",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, COL0 BIGINT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID = COL0, NULL IS NULL FROM INPUT;"
      ],
      "properties": {
        "ksql.any.key.name.enabled": true
      },
      "inputs": [
        {"topic": "test_topic", "key": null, "value": {"COL0": 12344}},
        {"topic": "test_topic", "key": null, "value": {"COL0": null}},
        {"topic": "test_topic", "key": 0, "value": {}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": null, "value": {"KSQL_COL_0": false, "KSQL_COL_1": true}},
        {"topic": "OUTPUT", "key": null, "value": {"KSQL_COL_0": false, "KSQL_COL_1": true}},
        {"topic": "OUTPUT", "key": 0, "value": {"KSQL_COL_0": false, "KSQL_COL_1": true}}
      ]
    },
    {
      "name": "comparison with null",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, COL0 BIGINT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT NULL <> NULL FROM INPUT;"
      ],
      "properties": {
        "ksql.any.key.name.enabled": true
      },
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Comparison with NULL not supported: NULL <> NULL"
      }
    }
  ]
}