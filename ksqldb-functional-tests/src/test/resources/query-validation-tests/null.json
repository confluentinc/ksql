{
  "comments": [
    "Tests covering SQL NULL"
  ],
  "tests": [
    {
      "name": "stream clone row with null value",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, NAME STRING) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": null},
        {"topic": "test_topic", "key": 2, "value": {"NAME": null}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": null},
        {"topic": "OUTPUT", "key": 2, "value": {"NAME": null}}
      ]
    },
    {
      "name": "is null",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, NAME STRING) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, ID IS NULL AS ID_NULL, NAME IS NULL AS NAME_NULL FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"NAME": "not null"}},
        {"topic": "test_topic", "key": null, "value": {"NAME": null}},
        {"topic": "test_topic", "key": 0, "value": {}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"ID_NULL": false, "NAME_NULL": false}},
        {"topic": "OUTPUT", "key": null, "value": {"ID_NULL": true, "NAME_NULL": true}},
        {"topic": "OUTPUT", "key": 0, "value": {"ID_NULL": false, "NAME_NULL": true}}
      ]
    },
    {
      "name": "is not null",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, NAME STRING) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, ID IS NOT NULL AS ID_NULL, NAME IS NOT NULL AS NAME_NULL FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"NAME": "not null"}},
        {"topic": "test_topic", "key": null, "value": {"NAME": null}},
        {"topic": "test_topic", "key": 0, "value": {}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"ID_NULL": true, "NAME_NULL": true}},
        {"topic": "OUTPUT", "key": null, "value": {"ID_NULL": false, "NAME_NULL": false}},
        {"topic": "OUTPUT", "key": 0, "value": {"ID_NULL": true, "NAME_NULL": false}}
      ]
    },
    {
      "name": "null equals",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, COL0 BIGINT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, ID = COL0, NULL IS NULL FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": null, "value": {"COL0": 12344}},
        {"topic": "test_topic", "key": null, "value": {"COL0": null}},
        {"topic": "test_topic", "key": 0, "value": {}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": null, "value": {"KSQL_COL_0": false, "KSQL_COL_1": true}},
        {"topic": "OUTPUT", "key": null, "value": {"KSQL_COL_0": false, "KSQL_COL_1": true}},
        {"topic": "OUTPUT", "key": 0, "value": {"KSQL_COL_0": false, "KSQL_COL_1": true}}
      ]
    },
    {
      "name": "comparison with null",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, COL0 BIGINT) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT ID, NULL <> NULL FROM INPUT;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Comparison with NULL not supported: NULL <> NULL"
      }
    },
    {
      "name": "coalesce",
      "statements": [
        "CREATE STREAM INPUT (COL0 INT KEY, COL1 INT, COL2 STRING, COL3 ARRAY<INT>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT COL0, COALESCE(COL0, COL1, COL0, COL1) AS A, COALESCE(COL2, 'x') AS B, COALESCE(COL3, ARRAY[10, 20]) AS C FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"COL1": 2, "COL2": "not null", "COL3": [1, 2, 3]}},
        {"topic": "test_topic", "key": null, "value": {}},
        {"topic": "test_topic", "key": null, "value": null},
        {"topic": "test_topic", "key": null, "value": {"COL1": 2, "COL2": "not null", "COL3": [4, 5, 6]}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"A": 1, "B": "not null", "C": [1, 2, 3]}},
        {"topic": "OUTPUT", "key": null, "value": {"A": null, "B": "x", "C": [10, 20]}},
        {"topic": "OUTPUT", "key": null, "value": null},
        {"topic": "OUTPUT", "key": null, "value": {"A": 2, "B": "not null", "C": [4, 5, 6]}}
      ]
    },
    {
      "name": "coalesce - no params",
      "statements": [
        "CREATE STREAM INPUT (COL0 INT KEY, COL1 STRING, COL2 ARRAY<INT>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT COL0, COALESCE() FROM INPUT;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Function 'COALESCE' does not accept parameters ()"
      }
    },
    {
      "name": "if null",
      "statements": [
        "CREATE STREAM INPUT (COL0 INT KEY, COL1 STRING, COL2 ARRAY<INT>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT COL0, IFNULL(COL0, 10) AS A, IFNULL(COL1, 'x') AS B, IFNULL(COL2, ARRAY[10, 20]) AS C FROM INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "key": 1, "value": {"COL1": "not null", "COL2": [1, 2, 3]}},
        {"topic": "test_topic", "key": null, "value": {}},
        {"topic": "test_topic", "key": null, "value": null},
        {"topic": "test_topic", "key": 2, "value": {"COL1": "not null", "COL2": [4, 5, 6]}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": 1, "value": {"A": 1, "B": "not null", "C": [1, 2, 3]}},
        {"topic": "OUTPUT", "key": null, "value": {"A": 10, "B": "x", "C": [10, 20]}},
        {"topic": "OUTPUT", "key": null, "value": null},
        {"topic": "OUTPUT", "key": 2, "value": {"A": 2, "B": "not null", "C": [4, 5, 6]}}
      ]
    },
    {
      "name": "NULL column",
      "statements": [
        "CREATE STREAM INPUT (ROWKEY INT KEY, COL0 NULL) WITH (kafka_topic='test_topic', value_format='JSON');"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.parser.exception.ParseFailedException",
        "message": "mismatched input 'NULL'"
      }
    },
    {
      "name": "NULL element type",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, COL0 ARRAY<NULL>) WITH (kafka_topic='test_topic', value_format='JSON');"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.parser.exception.ParseFailedException",
        "message": "mismatched input 'NULL'"
      }
    },
    {
      "name": "NULL value type",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, COL0 MAP<STRING, NULL>) WITH (kafka_topic='test_topic', value_format='JSON');"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.parser.exception.ParseFailedException",
        "message": "mismatched input 'NULL'"
      }
    },
    {
      "name": "NULL field type",
      "statements": [
        "CREATE STREAM INPUT (ID INT KEY, COL0 STRUCT<fo NULL>) WITH (kafka_topic='test_topic', value_format='JSON');"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.parser.exception.ParseFailedException",
        "message": "mismatched input 'NULL'"
      }
    },
    {
      "name": "null join expression",
      "statements": [
        "CREATE STREAM L (A INT KEY, B INT, C INT) WITH (kafka_topic='LEFT', value_format='JSON');",
        "CREATE STREAM R (A INT KEY, B INT, C INT) WITH (kafka_topic='RIGHT', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT * FROM L JOIN R WITHIN 10 SECONDS ON L.A = null;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Invalid comparison expression 'null' in join '(L.A = null)'. Each side of the join comparision must contain references from exactly one source."
      }
    }
  ]
}