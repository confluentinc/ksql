{
  "tests": [
    {
      "name": "serialize nested primitive - value",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, foo BOOLEAN) WITH (kafka_topic='input_topic', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT WITH (WRAP_SINGLE_VALUE=true) AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": true}},
        {"topic": "input_topic", "value": {"FOO": null}},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": true}},
        {"topic": "OUTPUT", "value": {"FOO": false}},
        {"topic": "OUTPUT", "value": null}
      ]
    },
    {
      "name": "serialize nested array - value",
      "statements": [
        "CREATE STREAM INPUT (foo ARRAY<BIGINT>) WITH (kafka_topic='input_topic', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT WITH (WRAP_SINGLE_VALUE=true) AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": [12, 34, 999]}},
        {"topic": "input_topic", "value": {"FOO": null}},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": [12, 34, 999]}},
        {"topic": "OUTPUT", "value": {"FOO": []}},
        {"topic": "OUTPUT", "value": null}
      ]
    },
    {
      "name": "serialize nested map - value",
      "statements": [
        "CREATE STREAM INPUT (foo MAP<STRING, DOUBLE>) WITH (kafka_topic='input_topic', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT WITH (WRAP_SINGLE_VALUE=true) AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": {"a": 1.1, "b": 2.2, "c": 3.456}}},
        {"topic": "input_topic", "value": {"FOO": null}},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": {"a": 1.1, "b": 2.2, "c": 3.456}}},
        {"topic": "OUTPUT", "value": {"FOO": {}}},
        {"topic": "OUTPUT", "value": null}
      ]
    },
    {
      "name": "serialize nested struct - value",
      "statements": [
        "CREATE STREAM INPUT (foo STRUCT<F0 INT>) WITH (kafka_topic='input_topic', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT WITH (WRAP_SINGLE_VALUE=true) AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": {"F0": 1}}},
        {"topic": "input_topic", "value": {"FOO": {"F0": null}}},
        {"topic": "input_topic", "value": {"FOO": null}},
        {"topic": "input_topic", "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": {"F0": 1}}},
        {"topic": "OUTPUT", "value": {"FOO": {"F0": 0}}},
        {"topic": "OUTPUT", "value": {"FOO": null}},
        {"topic": "OUTPUT", "value": null}
      ]
    },
    {
      "name": "protobuf primitives",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, i INTEGER, l BIGINT, d DOUBLE, b BOOLEAN, s STRING) WITH (kafka_topic='input', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT as SELECT * FROM input;"
      ],
      "inputs": [{"topic": "input", "value": {"i": 1, "l": 1, "d": 1.2, "b": true, "s": "foo"}}],
      "outputs": [{"topic": "OUTPUT", "value": {"I": 1, "L": 1, "D": 1.2, "B": true, "S": "foo"}}]
    },
    {
      "name": "protobuf primitives with null",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, i INTEGER, l BIGINT, d DOUBLE, b BOOLEAN, s STRING) WITH (kafka_topic='input', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT as SELECT * FROM input;"
      ],
      "inputs": [
        {"topic": "input", "value": {"i": null, "l": 0, "d": null, "b": false, "s": null}},
        {"topic": "input", "value": {"i": 0, "l": null, "d": 0.0, "b": null, "s": ""}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"i": 0, "l": 0, "d": 0.0, "b": false, "s": ""}},
        {"topic": "OUTPUT", "value": {"i": 0, "l": 0, "d": 0.0, "b": false, "s": ""}}
      ],
      "post": {
        "topics": {
          "topics": [
            {
              "name": "input",
              "keyFormat": {"format": "KAFKA"},
              "partitions": 4,
              "valueFormat": {"format": "PROTOBUF", "properties": {"unwrapPrimitives": "true"}},
              "valueSchema": "syntax = \"proto3\";\n\nmessage ConnectDefault1 {\n  int32 I = 1;\n  int64 L = 2;\n  double D = 3;\n  bool B = 4;\n  string S = 5;\n}\n"
            },
            {
              "name": "OUTPUT",
              "keyFormat": {"format": "KAFKA"},
              "partitions": 4,
              "valueFormat": {"format": "PROTOBUF", "properties": {"unwrapPrimitives": "true"}},
              "valueSchema": "syntax = \"proto3\";\n\nmessage ConnectDefault1 {\n  int32 I = 1;\n  int64 L = 2;\n  double D = 3;\n  bool B = 4;\n  string S = 5;\n}\n"
            }
          ]
        }
      }
    },
    {
      "name": "protobuf primitives with null and nullable as optional",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, i INTEGER, l BIGINT, d DOUBLE, b BOOLEAN, s STRING) WITH (kafka_topic='input', value_format='PROTOBUF', value_protobuf_nullable_representation='OPTIONAL');",
        "CREATE STREAM OUTPUT WITH (value_format='PROTOBUF', value_protobuf_nullable_representation='OPTIONAL') as SELECT * FROM input;"
      ],
      "inputs": [
        {"topic": "input", "value": {"i": null, "l": 0, "d": null, "b": false, "s": null}},
        {"topic": "input", "value": {"i": 0, "l": null, "d": 0.0, "b": null, "s": ""}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"i": null, "l": 0, "d": null, "b": false, "s": null}},
        {"topic": "OUTPUT", "value": {"i": 0, "l": null, "d": 0.0, "b": null, "s": ""}}
      ],
      "post": {
        "topics": {
          "topics": [
            {
              "name": "input",
              "keyFormat": {"format": "KAFKA"},
              "partitions": 4,
              "valueFormat": {"format": "PROTOBUF", "properties": {"unwrapPrimitives": "true", "nullableRepresentation": "optional"}},
              "valueSchema": "syntax = \"proto3\";\n\nmessage ConnectDefault1 {\n  optional int32 I = 1;\n  optional int64 L = 2;\n  optional double D = 3;\n  optional bool B = 4;\n  optional string S = 5;\n}\n"
            },
            {
              "name": "OUTPUT",
              "keyFormat": {"format": "KAFKA"},
              "partitions": 4,
              "valueFormat": {"format": "PROTOBUF", "properties": {"unwrapPrimitives": "true", "nullableRepresentation": "optional"}},
              "valueSchema": "syntax = \"proto3\";\n\nmessage ConnectDefault1 {\n  optional int32 I = 1;\n  optional int64 L = 2;\n  optional double D = 3;\n  optional bool B = 4;\n  optional string S = 5;\n}\n"
            }
          ]
        }
      }
    },
    {
      "name": "protobuf primitives with null and nullable as wrapper",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, i INTEGER, l BIGINT, d DOUBLE, b BOOLEAN, s STRING) WITH (kafka_topic='input', value_format='PROTOBUF', value_protobuf_nullable_representation='WRAPPER');",
        "CREATE STREAM OUTPUT WITH (value_format='PROTOBUF', value_protobuf_nullable_representation='WRAPPER') as SELECT * FROM input;"
      ],
      "inputs": [
        {"topic": "input", "value": {"i": null, "l": 0, "d": null, "b": false, "s": null}},
        {"topic": "input", "value": {"i": 0, "l": null, "d": 0.0, "b": null, "s": ""}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"i": null, "l": 0, "d": null, "b": false, "s": null}},
        {"topic": "OUTPUT", "value": {"i": 0, "l": null, "d": 0.0, "b": null, "s": ""}}
      ],
      "post": {
        "topics": {
          "topics": [
            {
              "name": "input",
              "keyFormat": {"format": "KAFKA"},
              "partitions": 4,
              "valueFormat": {"format": "PROTOBUF", "properties": {"unwrapPrimitives": "true", "nullableRepresentation": "wrapper"}},
              "valueSchema": "syntax = \"proto3\";\n\nimport \"google/protobuf/wrappers.proto\";\n\nmessage ConnectDefault1 {\n  google.protobuf.Int32Value I = 1;\n  google.protobuf.Int64Value L = 2;\n  google.protobuf.DoubleValue D = 3;\n  google.protobuf.BoolValue B = 4;\n  google.protobuf.StringValue S = 5;\n}\n"
            },
            {
              "name": "OUTPUT",
              "keyFormat": {"format": "KAFKA"},
              "partitions": 4,
              "valueFormat": {"format": "PROTOBUF", "properties": {"unwrapPrimitives": "true", "nullableRepresentation": "wrapper"}},
              "valueSchema": "syntax = \"proto3\";\n\nimport \"google/protobuf/wrappers.proto\";\n\nmessage ConnectDefault1 {\n  google.protobuf.Int32Value I = 1;\n  google.protobuf.Int64Value L = 2;\n  google.protobuf.DoubleValue D = 3;\n  google.protobuf.BoolValue B = 4;\n  google.protobuf.StringValue S = 5;\n}\n"
            }
          ]
        }
      }
    },
    {
      "name": "protobuf_nosr primitives with null",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, i INTEGER, l BIGINT, d DOUBLE, b BOOLEAN, s STRING) WITH (kafka_topic='input', value_format='PROTOBUF_NOSR');",
        "CREATE STREAM OUTPUT as SELECT * FROM input;"
      ],
      "inputs": [
        {"topic": "input", "value": {"i": null, "l": 0, "d": null, "b": false, "s": null}},
        {"topic": "input", "value": {"i": 0, "l": null, "d": 0.0, "b": null, "s": ""}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"i": 0, "l": 0, "d": 0.0, "b": false, "s": ""}},
        {"topic": "OUTPUT", "value": {"i": 0, "l": 0, "d": 0.0, "b": false, "s": ""}}
      ],
      "post": {
        "topics": {
          "topics": [
            {
              "name": "input",
              "keyFormat": {"format": "KAFKA"},
              "partitions": 4,
              "valueFormat": {"format": "PROTOBUF_NOSR"}
            },
            {
              "name": "OUTPUT",
              "keyFormat": {"format": "KAFKA"},
              "partitions": 4,
              "valueFormat": {"format": "PROTOBUF_NOSR"}
            }
          ]
        }
      }
    },
    {
      "name": "protobuf_nosr primitives with null and nullable as optional",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, i INTEGER, l BIGINT, d DOUBLE, b BOOLEAN, s STRING) WITH (kafka_topic='input', value_format='PROTOBUF_NOSR', value_protobuf_nullable_representation='OPTIONAL');",
        "CREATE STREAM OUTPUT WITH (value_format='PROTOBUF_NOSR', value_protobuf_nullable_representation='OPTIONAL') as SELECT * FROM input;"
      ],
      "inputs": [
        {"topic": "input", "value": {"i": null, "l": 0, "d": null, "b": false, "s": null}},
        {"topic": "input", "value": {"i": 0, "l": null, "d": 0.0, "b": null, "s": ""}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"i": null, "l": 0, "d": null, "b": false, "s": null}},
        {"topic": "OUTPUT", "value": {"i": 0, "l": null, "d": 0.0, "b": null, "s": ""}}
      ],
      "post": {
        "topics": {
          "topics": [
            {
              "name": "input",
              "keyFormat": {"format": "KAFKA"},
              "partitions": 4,
              "valueFormat": {"format": "PROTOBUF_NOSR", "properties": {"nullableRepresentation": "optional"}}
            },
            {
              "name": "OUTPUT",
              "keyFormat": {"format": "KAFKA"},
              "partitions": 4,
              "valueFormat": {"format": "PROTOBUF_NOSR", "properties": {"nullableRepresentation": "optional"}}
            }
          ]
        }
      }
    },
    {
      "name": "protobuf_nosr primitives with null and nullable as wrapper",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, i INTEGER, l BIGINT, d DOUBLE, b BOOLEAN, s STRING) WITH (kafka_topic='input', value_format='PROTOBUF_NOSR', value_protobuf_nullable_representation='WRAPPER');",
        "CREATE STREAM OUTPUT WITH (value_format='PROTOBUF_NOSR', value_protobuf_nullable_representation='WRAPPER') as SELECT * FROM input;"
      ],
      "inputs": [
        {"topic": "input", "value": {"i": null, "l": 0, "d": null, "b": false, "s": null}},
        {"topic": "input", "value": {"i": 0, "l": null, "d": 0.0, "b": null, "s": ""}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"i": null, "l": 0, "d": null, "b": false, "s": null}},
        {"topic": "OUTPUT", "value": {"i": 0, "l": null, "d": 0.0, "b": null, "s": ""}}
      ],
      "post": {
        "topics": {
          "topics": [
            {
              "name": "input",
              "keyFormat": {"format": "KAFKA"},
              "partitions": 4,
              "valueFormat": {"format": "PROTOBUF_NOSR", "properties": {"nullableRepresentation": "wrapper"}}
            },
            {
              "name": "OUTPUT",
              "keyFormat": {"format": "KAFKA"},
              "partitions": 4,
              "valueFormat": {"format": "PROTOBUF_NOSR", "properties": {"nullableRepresentation": "wrapper"}}
            }
          ]
        }
      }
    },
    {
      "name": "protobuf containers",
      "statements": [
        "CREATE STREAM INPUT (astr ARRAY<STRING>, mstr MAP<STRING, STRING>) WITH (kafka_topic='input', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT as SELECT * FROM input;"
      ],
      "inputs": [{"topic": "input", "value": {"astr": ["1", "2"], "mstr": {"1": "a"}}}],
      "outputs": [{"topic": "OUTPUT", "value": {"ASTR": ["1", "2"], "MSTR": {"1": "a"}}}]
    },
    {
      "name": "protobuf defaults - top level nulls are defaulted to 0",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, i INTEGER) WITH (kafka_topic='input', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT as SELECT * FROM input;"
      ],
      "inputs": [
        {"topic": "input", "value": {"i": 0}},
        {"topic": "input", "value": {"i": null}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"I": 0}},
        {"topic": "OUTPUT", "value": {"I": 0}}
      ]
    },
    {
      "name": "protobuf defaults - nested nulls are defaulted to 0",
      "statements": [
        "CREATE STREAM INPUT (i ARRAY<INTEGER>) WITH (kafka_topic='input', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT as SELECT * FROM input;"
      ],
      "inputs": [
        {"topic": "input", "value": {"i": [0]}},
        {"topic": "input", "value": {"i": null}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"I": [0]}},
        {"topic": "OUTPUT", "value": {"I": []}}
      ]
    },
    {
      "name": "protobuf defaults - empty struct fills defaults and nulls remain nulls",
      "statements": [
        "CREATE STREAM INPUT (s STRUCT<foo INTEGER>) WITH (kafka_topic='input', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT as SELECT * FROM input;"
      ],
      "inputs": [
        {"topic": "input", "value": {"s": {"foo": 0}}},
        {"topic": "input", "value": {"s": {}}},
        {"topic": "input", "value": {"s": null}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"S": {"FOO": 0}}},
        {"topic": "OUTPUT", "value": {"S": {"FOO": 0}}},
        {"topic": "OUTPUT", "value": {"S": null}}
      ]
    },
    {
      "name": "protobuf inference - primitives",
      "statements": [
        "CREATE STREAM INPUT WITH (kafka_topic='input', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM input;"
      ],
      "topics": [
        {
          "name": "input",
          "valueFormat": "PROTOBUF",
          "valueSchema": "syntax = \"proto3\"; message ConfluentDefault1 {bool c1 = 1; int32 c2 = 2; int64 c3 = 3; double c4 = 4; string c5 = 5;}"
        }
      ],
      "inputs": [
        {"topic": "input", "value": {"c1": true, "c2": 1, "c3": 400000000000, "c4": 1.284765648, "c5": "hello"}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"C1": true, "C2": 1, "C3": 400000000000, "C4": 1.284765648, "C5": "hello"}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "C1 BOOLEAN, C2 INT, C3 BIGINT, C4 DOUBLE, C5 STRING"}
        ]
      }
    },
    {
      "name": "protobuf inference - wrapped primitives",
      "statements": [
        "CREATE STREAM INPUT WITH (kafka_topic='input', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM input;"
      ],
      "topics": [
        {
          "name": "input",
          "valueFormat": "PROTOBUF",
          "valueSchema": "syntax = \"proto3\"; import 'google/protobuf/wrappers.proto'; message ConfluentDefault1 {google.protobuf.BoolValue c1 = 1; google.protobuf.Int32Value c2 = 2; google.protobuf.Int64Value c3 = 3; google.protobuf.DoubleValue c4 = 4; google.protobuf.StringValue c5 = 5;}"
        }
      ],
      "inputs": [
        {"topic": "input", "value": {"c1": true, "c2": 1, "c3": 400000000000, "c4": 1.284765648, "c5": "hello"}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"C1": true, "C2": 1, "C3": 400000000000, "C4": 1.284765648, "C5": "hello"}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "C1 BOOLEAN, C2 INT, C3 BIGINT, C4 DOUBLE, C5 STRING"}
        ]
      }
    },
    {
      "name": "protobuf inference - partial schema",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY) WITH (kafka_topic='input', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM input;"
      ],
      "topics": [
        {
          "name": "input",
          "valueFormat": "PROTOBUF",
          "valueSchema" : "syntax = \"proto3\"; import \"confluent/type/decimal.proto\"; message ConfluentDefault1 {bool c1 = 1; int32 c2 = 2; int64 c3 = 3; double c4 = 4; string c5 = 5; confluent.type.Decimal c6 = 6 [(confluent.field_meta) = { params: [{ value: \"4\", key: \"precision\" }, { value: \"2\", key: \"scale\" }]}];}"
        }
      ],
      "inputs": [
        {"topic": "input", "key": "a", "value": {"c1": true, "c2": 1, "c3": 400000000000, "c4": 1.284765648, "c5": "hello", "c6": 10.01 }}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": "a", "value": {"C1": true, "C2": 1, "C3": 400000000000, "C4": 1.284765648, "C5": "hello", "C6":  10.01 }}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "K STRING KEY, C1 BOOLEAN, C2 INT, C3 BIGINT, C4 DOUBLE, C5 STRING, C6 DECIMAL(4,2)"}
        ]
      }
    },
    {
      "name": "WRAP_SINGLE_VALUE=false",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, foo INT) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='input_topic', value_format='PROTOBUF');"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Format 'PROTOBUF' does not support 'WRAP_SINGLE_VALUE' set to 'false'."
      }
    },
    {
      "name": "should convert enum to STRING",
      "statements": [
        "CREATE STREAM INPUT WITH (kafka_topic='input', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM input;"
      ],
      "topics": [
        {
          "name": "input",
          "valueFormat": "PROTOBUF",
          "valueSchema": "syntax = \"proto3\"; message ConfluentDefault1 {enum Suit {SPADES = 0; HEARTS = 1; DIAMONDS = 2; CLUBS = 4;} Suit c1 = 1;}"
        }
      ],
      "inputs": [
        {"topic": "input", "value": {"c1": "HEARTS"}},
        {"topic": "input", "value": {"c1": "SPADES"}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"C1": "HEARTS"}},
        {"topic": "OUTPUT", "value": {"C1": "SPADES"}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "C1 STRING"}
        ]
      }
    },
    {
      "name": "should support arrays",
      "statements": [
        "CREATE STREAM INPUT WITH (kafka_topic='input', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM input;"
      ],
      "topics": [
        {
          "name": "input",
          "valueFormat": "PROTOBUF",
          "valueSchema": "syntax = \"proto3\"; message ConfluentDefault1 {repeated string c1 = 1;}"
        }
      ],
      "inputs": [{"topic": "input", "value": {"c1": ["a", "", "Bc"]}}],
      "outputs": [{"topic": "OUTPUT", "value": {"C1": ["a", "", "Bc"]}}],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "C1 ARRAY<STRING>"}
        ]
      }
    },
    {
      "name": "should convert nested types to STRUCT",
      "statements": [
        "CREATE STREAM INPUT WITH (kafka_topic='input', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM input;"
      ],
      "topics": [
        {
          "name": "input",
          "valueFormat": "PROTOBUF",
          "valueSchema": "syntax = \"proto3\"; message ConfluentDefault1 {message Something {int32 f1 = 1;} Something c1 = 1;}"
        }
      ],
      "inputs": [{"topic": "input", "value": {"c1": {"f1": 1}}}],
      "outputs": [{"topic": "OUTPUT", "value": {"C1": {"F1": 1}}}],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "C1 STRUCT<F1 INT>"}
        ]
      }
    },
    {
      "name": "protobuf inference - other scalars",
      "statements": [
        "CREATE STREAM INPUT WITH (kafka_topic='input', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM input;"
      ],
      "comments": [
        "NOTE: seems like float -> double conversion is lossy. Need to follow up on this",
        "NOTE: unit32 cannot fit in an INT schema because it is unsigned (so it can represent larger numbers)"
      ],
      "topics": [
        {
          "name": "input",
          "valueFormat": "PROTOBUF",
          "valueSchema": "syntax = \"proto3\"; message ConfluentDefault1 {float c1 = 1; uint32 c2 = 2; uint64 c3 = 3; sint32 c4 = 4; sint64 c5 = 5;}"
        }
      ],
      "inputs": [
        {"topic": "input", "value": {"c1": 1.1234, "c2": 1, "c3": 400000000000, "c4": 1, "c5": 400000000000}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"C1": 1.1233999729156494, "C2": 1, "C3": 400000000000, "C4": 1, "C5": 400000000000}}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "C1 DOUBLE, C2 BIGINT, C3 BIGINT, C4 INT, C5 BIGINT"}
        ]
      }
    },
    {
      "name": "STRUCT BOOLEAN - key - no inference",
      "comments": [
        "note that null defaults to false in protobuf"
      ],
      "statements": [
        "CREATE STREAM INPUT (F1 BOOLEAN KEY, foo INT) WITH (kafka_topic='input_topic', format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": {"F1": true}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": {"F1": null}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": null, "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": {"F1": true}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": {"F1": false}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": null, "value": null}
      ]
    },
    {
      "name": "STRUCT BOOLEAN - key - inference",
      "statements": [
        "CREATE STREAM INPUT (foo INT) WITH (kafka_topic='input_topic', format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "input_topic",
          "keySchema": "syntax = \"proto3\"; message ConnectDefault1 {bool F1 = 1;}",
          "keyFormat": "PROTOBUF"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "key": {"F1": true}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": {"F1": null}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": null, "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": {"F1": true}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": {"F1": false}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": null, "value": null}
      ]
    },
    {
      "name": "STRUCT INT - key - no inference",
      "statements": [
        "CREATE STREAM INPUT (F1 INT KEY, foo INT) WITH (kafka_topic='input_topic', format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": {"F1": 1}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": {"F1": null}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": null, "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": {"F1": 1}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": {"F1": 0}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": null, "value": null}
      ]
    },
    {
      "name": "STRUCT INT - key - inference",
      "statements": [
        "CREATE STREAM INPUT (foo INT) WITH (kafka_topic='input_topic', format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "input_topic",
          "keySchema": "syntax = \"proto3\"; message ConnectDefault1 {int32 F1 = 1;}",
          "keyFormat": "PROTOBUF"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "key": {"F1": 1}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": {"F1": null}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": null, "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": {"F1": 1}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": {"F1": 0}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": null, "value": null}
      ]
    },
    {
      "name": "STRUCT BIGINT - key - no inference",
      "statements": [
        "CREATE STREAM INPUT (F1 BIGINT KEY, foo INT) WITH (kafka_topic='input_topic', format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": {"F1": 998877665544332211}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": {"F1": null}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": null, "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": {"F1": 998877665544332211}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": {"F1": 0}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": null, "value": null}
      ]
    },
    {
      "name": "STRUCT BIGINT - key - inference",
      "statements": [
        "CREATE STREAM INPUT (foo INT) WITH (kafka_topic='input_topic', format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "input_topic",
          "keySchema": "syntax = \"proto3\"; message ConnectDefault1 {int64 F1 = 1;}",
          "keyFormat": "PROTOBUF"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "key": {"F1": 998877665544332211}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": {"F1": null}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": null, "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": {"F1": 998877665544332211}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": {"F1": 0}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": null, "value": null}
      ]
    },
    {
      "name": "STRUCT DOUBLE - key - no inference",
      "statements": [
        "CREATE STREAM INPUT (F1 DOUBLE KEY, foo INT) WITH (kafka_topic='input_topic', format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": {"F1": 1.1}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": {"F1": null}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": null, "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": {"F1": 1.1}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": {"F1": 0}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": null, "value": null}
      ]
    },
    {
      "name": "STRUCT DOUBLE - key - inference",
      "statements": [
        "CREATE STREAM INPUT (foo INT) WITH (kafka_topic='input_topic', format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "input_topic",
          "keySchema": "syntax = \"proto3\"; message ConnectDefault1 {double F1 = 1;}",
          "keyFormat": "PROTOBUF"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "key": {"F1": 1.1}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": {"F1": null}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": null, "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": {"F1": 1.1}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": {"F1": 0}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": null, "value": null}
      ]
    },
    {
      "name": "STRUCT STRING - key - no inference",
      "statements": [
        "CREATE STREAM INPUT (F1 VARCHAR KEY, foo INT) WITH (kafka_topic='input_topic', format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": {"F1": "foo"}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": {"F1": null}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": null, "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": {"F1": "foo"}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": {"F1": ""}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": null, "value": null}
      ]
    },
    {
      "name": "STRUCT STRING - key - inference",
      "statements": [
        "CREATE STREAM INPUT (foo INT) WITH (kafka_topic='input_topic', format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "input_topic",
          "keySchema": "syntax = \"proto3\"; message ConnectDefault1 {string F1 = 1;}",
          "keyFormat": "PROTOBUF"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "key": {"F1": "foo"}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": {"F1": null}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": null, "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": {"F1": "foo"}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": {"F1": ""}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": null, "value": null}
      ]
    },
    {
      "name": "STRUCT ARRAY STRING - key - no inference",
      "statements": [
        "CREATE STREAM INPUT (F1 ARRAY<VARCHAR> KEY, foo INT) WITH (kafka_topic='input_topic', format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": {"F1": ["foo", "bar"]}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": {"F1": null}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": null, "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": {"F1": ["foo", "bar"]}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": {"F1": []}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": null, "value": null}
      ]
    },
    {
      "name": "STRUCT ARRAY STRING - key - inference",
      "statements": [
        "CREATE STREAM INPUT (foo INT) WITH (kafka_topic='input_topic', format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {
          "name": "input_topic",
          "keySchema": "syntax = \"proto3\"; message ConnectDefault1 {repeated string F1 = 1;}",
          "keyFormat": "PROTOBUF"
        }
      ],
      "inputs": [
        {"topic": "input_topic", "key": {"F1": ["foo", "bar"]}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": {"F1": null}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": null, "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": {"F1": ["foo", "bar"]}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": {"F1": []}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": null, "value": null}
      ]
    },
    {
      "name": "STRUCT multi field - key - no inference",
      "statements": [
        "CREATE STREAM INPUT (F1 INT KEY, F2 VARCHAR KEY, foo INT) WITH (kafka_topic='input_topic', format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "key": {"F1": 1, "F2": "foo"}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": {"F1": null, "F2": null}, "value": {"FOO": 10}},
        {"topic": "input_topic", "key": null, "value": null}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": {"F1": 1, "F2": "foo"}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": {"F1": 0, "F2": ""}, "value": {"FOO": 10}},
        {"topic": "OUTPUT", "key": null, "value": null}
      ]
    },
    {
      "name": "should not filter out bytes",
      "statements": [
        "CREATE STREAM INPUT WITH (kafka_topic='input', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT * FROM input;"
      ],
      "topics": [
        {
          "name": "input",
          "valueFormat": "PROTOBUF",
          "valueSchema": "syntax = \"proto3\"; message ConfluentDefault1 {int32 expected = 1; bytes c2 = 2;}"
        }
      ],
      "inputs": [{"topic": "input", "value": {"expected": 1, "c4": null}}],
      "outputs": [{"topic": "OUTPUT", "value": {"EXPECTED": 1, "c2": null}}],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "EXPECTED INT, C2 BYTES"}
        ]
      }
    },
    {
      "name": "specify a protobuf schema name with SCHEMA_FULL_NAME",
      "statements": [
        "CREATE STREAM INPUT WITH (kafka_topic='input', format='PROTOBUF', KEY_SCHEMA_FULL_NAME='ProtobufKey1', VALUE_SCHEMA_FULL_NAME='ProtobufValue1');",
        "CREATE STREAM OUTPUT WITH (format='PROTOBUF', KEY_SCHEMA_FULL_NAME='ProtobufKey2', VALUE_SCHEMA_FULL_NAME='ProtobufValue2') AS SELECT * FROM input;"
      ],
      "topics": [
        {
          "name": "input",
          "keyFormat": "PROTOBUF",
          "keySchema": "syntax = \"proto3\"; message ProtobufKey1 {uint32 k1 = 1;}",
          "valueFormat": "PROTOBUF",
          "valueSchema": "syntax = \"proto3\"; message ProtobufValue1 {float c1 = 1; uint32 c2 = 2;}"
        },
        {
          "name": "OUTPUT",
          "keyFormat": "PROTOBUF",
          "keySchema": "syntax = \"proto3\"; message ProtobufKey2 {uint32 k1 = 1;}",
          "valueFormat": "PROTOBUF",
          "valueSchema": "syntax = \"proto3\"; message ProtobufValue2 {float c1 = 1; uint32 c2 = 2;}"
        }
      ],
      "inputs": [
        {"topic": "input", "key": {"k1":  10}, "value": {"c1": 1.1234, "c2": 100}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": {"K1":  10}, "value": {"C1": 1.1233999729156494, "C2": 100}}
      ]
    },
    {
      "name": "specify a protobuf schema from multiple protobuf schema definitions",
      "statements": [
        "CREATE STREAM INPUT WITH (kafka_topic='input', format='PROTOBUF', KEY_SCHEMA_FULL_NAME='ProtobufKey2', VALUE_SCHEMA_FULL_NAME='ProtobufValue2');",
        "CREATE STREAM OUTPUT AS SELECT * FROM input;"
      ],
      "topics": [
        {
          "name": "input",
          "keyFormat": "PROTOBUF",
          "keySchema": "syntax = \"proto3\"; message ProtobufKey1 {uint32 k1 = 1;} message ProtobufKey2 {string k1 = 1;}",
          "valueFormat": "PROTOBUF",
          "valueSchema": "syntax = \"proto3\"; message ProtobufValue1 {float c1 = 1; uint32 c2 = 2;} message ProtobufValue2 {uint32 c1 = 1;}"
        },
        {
          "name": "OUTPUT",
          "keyFormat": "PROTOBUF",
          "keySchema": "syntax = \"proto3\"; message ProtobufKey2 {string k1 = 1;}",
          "valueFormat": "PROTOBUF",
          "valueSchema": "syntax = \"proto3\"; message ProtobufValue2 {uint32 c1 = 1;}"
        }
      ],
      "inputs": [
        {"topic": "input", "key": {"k1":  "A"}, "value": {"c1": 100}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "key": {"K1":  "A"}, "value": {"C1": 100}}
      ]
    },
    {
      "name": "specify a protobuf schema with external references",
      "statements": [
        "CREATE STREAM INPUT WITH (kafka_topic='input', value_format='PROTOBUF', value_schema_id=1);",
        "CREATE STREAM OUTPUT as SELECT * from INPUT;"
      ],
      "topics": [
        {
          "name": "input",
          "valueFormat": "PROTOBUF",
          "valueSchema": "syntax = \"proto3\";\n\nimport \"event.proto\"; \n\nmessage Logistics {\n Event event = 1;\n}",
          "valueSchemaReferences": [
            {
              "name": "event.proto",
              "format": "PROTOBUF",
              "schema": "syntax = \"proto3\";\n\nmessage Event {\n int64 timestamp = 1;\n}"
            }
          ]
        }
      ],
      "inputs": [
        { "topic": "input", "value": { "event": { "timestamp": 1 } } }
      ],
      "outputs": [
        { "topic": "OUTPUT", "value": { "event": { "timestamp": 1 } } }
      ],
      "post": {
        "sources": [
          {"name": "INPUT", "type": "stream", "schema": "`event` STRUCT<`timestamp` BIGINT>"},
          {"name": "OUTPUT", "type": "stream", "schema": "`event` STRUCT<`timestamp` BIGINT>"}
        ]
      }
    },
    {
      "name": "deserialize and serialize schema using internal references",
      "statements": [
        "CREATE STREAM INPUT WITH (kafka_topic='input', value_format='PROTOBUF');",
        "CREATE STREAM INTERMEDIATE as SELECT * from INPUT;",
        "CREATE STREAM OUTPUT as SELECT * from INTERMEDIATE;"
      ],
      "topics": [
        {
          "name": "input",
          "valueFormat": "PROTOBUF",
          "valueSchema": "syntax = \"proto3\";\n\nimport \"event.proto\"; \n\nmessage Logistics {\n Event event = 1;\n}",
          "valueSchemaReferences": [
            {
              "name": "event.proto",
              "format": "PROTOBUF",
              "schema": "syntax = \"proto3\";\n\nmessage Event {\n int64 timestamp = 1;\n}"
            }
          ]
        }
      ],
      "inputs": [
        { "topic": "input", "value": { "event": { "timestamp": 1 } } }
      ],
      "outputs": [
        { "topic": "INTERMEDIATE", "value": { "event": { "timestamp": 1 } } },
        { "topic": "OUTPUT", "value": { "event": { "timestamp": 1 } } }
      ],
      "post": {
        "sources": [
          {"name": "INPUT", "type": "stream", "schema": "`EVENT` STRUCT<`TIMESTAMP` BIGINT>"},
          {"name": "INTERMEDIATE", "type": "stream", "schema": "`EVENT` STRUCT<`TIMESTAMP` BIGINT>"},
          {"name": "OUTPUT", "type": "stream", "schema": "`EVENT` STRUCT<`TIMESTAMP` BIGINT>"}
        ]
      }
    },
    {
      "name": "deserialize and serialize schema using internal references using schema id",
      "statements": [
        "CREATE STREAM INPUT WITH (kafka_topic='input', value_format='PROTOBUF', value_schema_id=10);",
        "CREATE STREAM OUTPUT WITH (value_schema_id=11) as SELECT * from INPUT;"
      ],
      "topics": [
        {
          "name": "input",
          "valueFormat": "PROTOBUF",
          "valueSchemaId": 10,
          "valueSchema": "syntax = \"proto3\";\n\nimport \"event.proto\"; \n\nmessage Logistics {\n Event event = 1;\n}",
          "valueSchemaReferences": [
            {
              "name": "event.proto",
              "format": "PROTOBUF",
              "schema": "syntax = \"proto3\";\n\nmessage Event {\n int64 timestamp = 1;\n}"
            }
          ]
        },
        {
          "name": "OUTPUT",
          "valueFormat": "PROTOBUF",
          "valueSchemaId": 11,
          "valueSchema": "syntax = \"proto3\";\n\nimport \"event.proto\"; \n\nmessage Logistics {\n Event event = 1;\n}",
          "valueSchemaReferences": [
            {
              "name": "event.proto",
              "format": "PROTOBUF",
              "schema": "syntax = \"proto3\";\n\nmessage Event {\n int64 timestamp = 1;\n}"
            }
          ]
        }
      ],
      "inputs": [
        { "topic": "input", "value": { "event": { "timestamp": 1 } } }
      ],
      "outputs": [
        { "topic": "OUTPUT", "value": { "event": { "timestamp": 1 } } }
      ],
      "post": {
        "sources": [
          {"name": "INPUT", "type": "stream", "schema": "`event` STRUCT<`timestamp` BIGINT>"},
          {"name": "OUTPUT", "type": "stream", "schema": "`event` STRUCT<`timestamp` BIGINT>"}
        ]
      }
    },
    {
      "name": "fail if protobuf schema name is not found",
      "statements": [
        "CREATE STREAM INPUT WITH (kafka_topic='input_topic', value_format='PROTOBUF', VALUE_SCHEMA_FULL_NAME='ProtobufValue1000');"
      ],
      "topics": [
        {
          "name": "input",
          "valueFormat": "PROTOBUF",
          "valueSchema": "syntax = \"proto3\"; message ProtobufValue1 {float c1 = 1; uint32 c2 = 2;} message ProtobufValue2 {uint32 c1 = 1;}"
        }
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "Schema for message values on topic 'input_topic' does not exist in the Schema Registry."
      }
    },
    {
      "name": "map with non-string keys - C*",
      "comment": ["This is current limitation. PB supports INT/BIGINT keys. See https://github.com/confluentinc/ksql/issues/6177"],
      "statements": [
        "CREATE STREAM INPUT (foo MAP<INT, DOUBLE>) WITH (kafka_topic='input_topic', value_format='PROTOBUF');"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "PROTOBUF format only supports MAP types with STRING keys"
      }
    },
    {
      "name": "map with non-string keys - C*AS",
      "comment": ["This is current limitation. PB supports INT/BIGINT keys. See https://github.com/confluentinc/ksql/issues/6177"],
      "statements": [
        "CREATE STREAM INPUT (k INT, v DOUBLE) WITH (kafka_topic='input_topic', value_format='PROTOBUF');",
        "CREATE STREAM OUTPUT AS SELECT MAP(k:=v) FROM INPUT;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "PROTOBUF format only supports MAP types with STRING keys"
      }
    }
  ]
}