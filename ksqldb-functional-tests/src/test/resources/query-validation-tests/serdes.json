{
  "comments": [
    "Test cases covering the different schemas supported."
  ],
  "tests": [
    {
      "name": "deserialization should pick up value wrapping from config",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, foo STRING) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT K, foo, foo as foo2 FROM INPUT;"
      ],
      "properties": {
        "ksql.persistence.wrap.single.values": "false"
      },
      "inputs": [
        {"topic": "input_topic", "value": "bar"}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"FOO": "bar", "FOO2": "bar"}}
      ],
      "post": {
        "sources": [
          {"name": "INPUT", "type": "stream", "schema": "K STRING KEY, FOO STRING", "valueFeatures": ["UNWRAP_SINGLES"]}
        ]
      }
    },
    {
      "name": "serialization should produce primitive schema for unwrapped",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, foo STRING) WITH (kafka_topic='input_topic', value_format='AVRO');",
        "CREATE STREAM OUTPUT WITH (wrap_single_value=false) AS SELECT * FROM INPUT;"
      ],
      "topics": [
        {"name": "OUTPUT", "schema": "string"}
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"foo": "bar"}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": "bar"}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "K STRING KEY, FOO STRING", "valueFeatures": ["UNWRAP_SINGLES"]}
        ]
      }
    },
    {
      "name": "C* should throw for multi-field schema if WRAP_SINGLE_VALUE=true",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, f0 STRING, f1 STRING) WITH (WRAP_SINGLE_VALUE=true, kafka_topic='input_topic', value_format='JSON');"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "'WRAP_SINGLE_VALUE' is only valid for single-field value schemas"
      }
    },
    {
      "name": "C* should throw for multi-field schema if WRAP_SINGLE_VALUE=false",
      "statements": [
        "CREATE TABLE INPUT (K STRING PRIMARY KEY, f0 STRING, f1 STRING) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='input_topic', value_format='JSON');"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "'WRAP_SINGLE_VALUE' is only valid for single-field value schemas"
      }
    },
    {
      "name": "serialization should pick up value wrapping from config",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, foo STRING, foo2 STRING) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT K, foo FROM INPUT;"
      ],
      "properties": {
        "ksql.persistence.wrap.single.values": "false"
      },
      "inputs": [
        {"topic": "input_topic", "value": {"FOO": "bar", "FOO2": "blar"}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": "bar"}
      ],
      "post": {
        "sources": [
          {"name": "OUTPUT", "type": "stream", "schema": "K STRING KEY, FOO STRING", "valueFeatures": ["UNWRAP_SINGLES"]}
        ]
      }
    },
    {
      "name": "C*AS should throw for multi-field schema if WRAP_SINGLE_VALUE=true",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, f0 STRING, f1 STRING) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT WITH(WRAP_SINGLE_VALUE=true) AS SELECT * FROM INPUT;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "'WRAP_SINGLE_VALUE' is only valid for single-field value schemas"
      }
    },
    {
      "name": "C*AS should throw for multi-field schema if WRAP_SINGLE_VALUE=false",
      "format": ["JSON", "AVRO", "PROTOBUF"],
      "statements": [
        "CREATE TABLE INPUT (K STRING PRIMARY KEY, f0 STRING, f1 STRING) WITH (kafka_topic='input_topic', value_format='JSON');",
        "CREATE TABLE OUTPUT WITH(WRAP_SINGLE_VALUE=false) AS SELECT * FROM INPUT;"
      ],
      "expectedException": {
        "type": "io.confluent.ksql.util.KsqlStatementException",
        "message": "'WRAP_SINGLE_VALUE' is only valid for single-field value schemas"
      }
    },
    {
      "name": "deserialize and serialize unwrapped struct",
      "statements": [
        "CREATE STREAM INPUT (foo STRUCT<F1 STRING>) WITH (kafka_topic='input_topic', value_format='JSON', wrap_single_value=false);",
        "CREATE STREAM OUTPUT WITH (wrap_single_value=false) AS SELECT * FROM INPUT;"
      ],
      "inputs": [
        {"topic": "input_topic", "value": {"F1": "bar"}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"F1": "bar"}}
      ]
    }
  ]
}
