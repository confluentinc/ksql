{
  "tests": [
    {
      "name": "nested",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, text STRING) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT K, CONCAT(EXTRACTJSONFIELD(text,'$.name'),CONCAT('-',EXTRACTJSONFIELD(text,'$.value'))) from INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "value": {"text": "{\"name\":\"fred\",\"value\":1}"}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"KSQL_COL_0": "fred-1"}}
      ],
      "post": {
        "sources": [
          {
            "name": "OUTPUT",
            "type": "stream",
            "schema": "K STRING KEY, KSQL_COL_0 STRING"
          }
        ]
      }
    },
    {
      "name": "null args",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, ID BIGINT) WITH (kafka_topic='test_topic', value_format='DELIMITED');",
        "CREATE STREAM OUTPUT AS SELECT K, test_udf(ID, NULL), test_udf(ID, ID, NULL) from INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "value": "0"}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": "doStuffLongString,doStuffLongLongString"}
      ],
      "post": {
        "sources": [
          {
            "name": "OUTPUT",
            "type": "stream",
            "schema": "K STRING KEY, KSQL_COL_0 STRING, KSQL_COL_1 STRING"
          }
        ]
      }
    },
    {
      "name": "var args",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, col0 BIGINT) WITH (kafka_topic='test_topic', value_format='DELIMITED');",
        "CREATE STREAM OUTPUT AS SELECT K, test_udf(col0, col0, col0, col0, col0) from INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "value": "0"}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": "doStuffLongVarargs"}
      ],
      "post": {
        "sources": [
          {
            "name": "OUTPUT",
            "type": "stream",
            "schema": "`K` STRING KEY, `KSQL_COL_0` STRING"
          }
        ]
      }
    },
    {
      "name": "struct args",
      "statements": [
        "CREATE STREAM INPUT (K STRING KEY, col0 STRUCT<A STRING>) WITH (kafka_topic='test_topic', value_format='JSON');",
        "CREATE STREAM OUTPUT AS SELECT k, test_udf(col0) from INPUT;"
      ],
      "inputs": [
        {"topic": "test_topic", "value": {"col0": {"A": "expect-result"}}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"KSQL_COL_0": "expect-result"}}
      ],
      "post": {
        "sources": [
          {
            "name": "OUTPUT",
            "type": "stream",
            "schema": "K STRING KEY, KSQL_COL_0 STRING"
          }
        ]
      }
    },
    {
      "name": "struct args, UDFs that returns non-optional data types ",
      "statements": [
        "CREATE STREAM INPUT (col0 VARCHAR) WITH (kafka_topic='test_topic', value_format='AVRO');",
        "CREATE STREAM OUTPUT AS SELECT test_udtf(1) as col0 FROM INPUT EMIT CHANGES;"
      ],
      "inputs": [
        {"topic": "test_topic", "value": {"col0":  "mytest"}}
      ],
      "outputs": [
        {"topic": "OUTPUT", "value": {"COL0": {"TEST1": "1", "TEST2": "2"}}}
      ],
      "expectedException": {
        "type": "org.apache.kafka.streams.errors.StreamsException",
        "message": "Error encountered sending record to topic OUTPUT for task 0_0 due to:\norg.apache.kafka.common.errors.SerializationException: Failed to prepare Struct value field 'COL0' for serialization. This could happen if the value was produced by a user-defined function where the schema has non-optional return types."
      }
    }
  ]
}